import path from 'path';
import fs from 'fs';
import os from 'os';

function createCommonjsModule(fn, basedir, module) {
	return module = {
	  path: basedir,
	  exports: {},
	  require: function (path, base) {
      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
    }
	}, fn(module, module.exports), module.exports;
}

function getCjsExportFromNamespace (n) {
	return n && n['default'] || n;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var envs = [
	{
		name: "nodejs",
		version: "0.2.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.3.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.4.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.5.0",
		date: "2011-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.6.0",
		date: "2011-11-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.7.0",
		date: "2012-01-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.8.0",
		date: "2012-06-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.9.0",
		date: "2012-07-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.10.0",
		date: "2013-03-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.11.0",
		date: "2013-03-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "0.12.0",
		date: "2015-02-06",
		lts: false,
		security: false
	},
	{
		name: "iojs",
		version: "1.0.0",
		date: "2015-01-14"
	},
	{
		name: "iojs",
		version: "1.1.0",
		date: "2015-02-03"
	},
	{
		name: "iojs",
		version: "1.2.0",
		date: "2015-02-11"
	},
	{
		name: "iojs",
		version: "1.3.0",
		date: "2015-02-20"
	},
	{
		name: "iojs",
		version: "1.5.0",
		date: "2015-03-06"
	},
	{
		name: "iojs",
		version: "1.6.0",
		date: "2015-03-20"
	},
	{
		name: "iojs",
		version: "2.0.0",
		date: "2015-05-04"
	},
	{
		name: "iojs",
		version: "2.1.0",
		date: "2015-05-24"
	},
	{
		name: "iojs",
		version: "2.2.0",
		date: "2015-06-01"
	},
	{
		name: "iojs",
		version: "2.3.0",
		date: "2015-06-13"
	},
	{
		name: "iojs",
		version: "2.4.0",
		date: "2015-07-17"
	},
	{
		name: "iojs",
		version: "2.5.0",
		date: "2015-07-28"
	},
	{
		name: "iojs",
		version: "3.0.0",
		date: "2015-08-04"
	},
	{
		name: "iojs",
		version: "3.1.0",
		date: "2015-08-19"
	},
	{
		name: "iojs",
		version: "3.2.0",
		date: "2015-08-25"
	},
	{
		name: "iojs",
		version: "3.3.0",
		date: "2015-09-02"
	},
	{
		name: "nodejs",
		version: "4.0.0",
		date: "2015-09-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "4.1.0",
		date: "2015-09-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "4.2.0",
		date: "2015-10-12",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.3.0",
		date: "2016-02-09",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.4.0",
		date: "2016-03-08",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.5.0",
		date: "2016-08-16",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.6.0",
		date: "2016-09-27",
		lts: "Argon",
		security: true
	},
	{
		name: "nodejs",
		version: "4.7.0",
		date: "2016-12-06",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.8.0",
		date: "2017-02-21",
		lts: "Argon",
		security: false
	},
	{
		name: "nodejs",
		version: "4.9.0",
		date: "2018-03-28",
		lts: "Argon",
		security: true
	},
	{
		name: "nodejs",
		version: "5.0.0",
		date: "2015-10-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.1.0",
		date: "2015-11-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.2.0",
		date: "2015-12-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.3.0",
		date: "2015-12-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.4.0",
		date: "2016-01-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.5.0",
		date: "2016-01-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.6.0",
		date: "2016-02-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.7.0",
		date: "2016-02-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.8.0",
		date: "2016-03-09",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.9.0",
		date: "2016-03-16",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.10.0",
		date: "2016-04-01",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.11.0",
		date: "2016-04-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "5.12.0",
		date: "2016-06-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.0.0",
		date: "2016-04-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.1.0",
		date: "2016-05-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.2.0",
		date: "2016-05-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.3.0",
		date: "2016-07-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.4.0",
		date: "2016-08-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.5.0",
		date: "2016-08-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.6.0",
		date: "2016-09-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.7.0",
		date: "2016-09-27",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "6.8.0",
		date: "2016-10-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "6.9.0",
		date: "2016-10-18",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.10.0",
		date: "2017-02-21",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.11.0",
		date: "2017-06-06",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.12.0",
		date: "2017-11-06",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.13.0",
		date: "2018-02-10",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.14.0",
		date: "2018-03-28",
		lts: "Boron",
		security: true
	},
	{
		name: "nodejs",
		version: "6.15.0",
		date: "2018-11-27",
		lts: "Boron",
		security: true
	},
	{
		name: "nodejs",
		version: "6.16.0",
		date: "2018-12-26",
		lts: "Boron",
		security: false
	},
	{
		name: "nodejs",
		version: "6.17.0",
		date: "2019-02-28",
		lts: "Boron",
		security: true
	},
	{
		name: "nodejs",
		version: "7.0.0",
		date: "2016-10-25",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.1.0",
		date: "2016-11-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.2.0",
		date: "2016-11-22",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.3.0",
		date: "2016-12-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.4.0",
		date: "2017-01-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.5.0",
		date: "2017-01-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.6.0",
		date: "2017-02-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.7.0",
		date: "2017-02-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.8.0",
		date: "2017-03-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.9.0",
		date: "2017-04-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "7.10.0",
		date: "2017-05-02",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.0.0",
		date: "2017-05-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.1.0",
		date: "2017-06-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.2.0",
		date: "2017-07-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.3.0",
		date: "2017-08-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.4.0",
		date: "2017-08-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.5.0",
		date: "2017-09-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.6.0",
		date: "2017-09-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.7.0",
		date: "2017-10-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.8.0",
		date: "2017-10-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "8.9.0",
		date: "2017-10-31",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.10.0",
		date: "2018-03-06",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.11.0",
		date: "2018-03-28",
		lts: "Carbon",
		security: true
	},
	{
		name: "nodejs",
		version: "8.12.0",
		date: "2018-09-10",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.13.0",
		date: "2018-11-20",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.14.0",
		date: "2018-11-27",
		lts: "Carbon",
		security: true
	},
	{
		name: "nodejs",
		version: "8.15.0",
		date: "2018-12-26",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.16.0",
		date: "2019-04-16",
		lts: "Carbon",
		security: false
	},
	{
		name: "nodejs",
		version: "8.17.0",
		date: "2019-12-17",
		lts: "Carbon",
		security: true
	},
	{
		name: "nodejs",
		version: "9.0.0",
		date: "2017-10-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.1.0",
		date: "2017-11-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.2.0",
		date: "2017-11-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.3.0",
		date: "2017-12-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.4.0",
		date: "2018-01-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.5.0",
		date: "2018-01-31",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.6.0",
		date: "2018-02-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.7.0",
		date: "2018-03-01",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.8.0",
		date: "2018-03-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.9.0",
		date: "2018-03-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "9.10.0",
		date: "2018-03-28",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "9.11.0",
		date: "2018-04-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.0.0",
		date: "2018-04-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.1.0",
		date: "2018-05-08",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.2.0",
		date: "2018-05-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.3.0",
		date: "2018-05-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.4.0",
		date: "2018-06-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.5.0",
		date: "2018-06-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.6.0",
		date: "2018-07-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.7.0",
		date: "2018-07-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.8.0",
		date: "2018-08-01",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.9.0",
		date: "2018-08-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.10.0",
		date: "2018-09-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.11.0",
		date: "2018-09-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.12.0",
		date: "2018-10-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "10.13.0",
		date: "2018-10-30",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.14.0",
		date: "2018-11-27",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.15.0",
		date: "2018-12-26",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.16.0",
		date: "2019-05-28",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.17.0",
		date: "2019-10-21",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.18.0",
		date: "2019-12-16",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.19.0",
		date: "2020-02-05",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.20.0",
		date: "2020-03-24",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "10.21.0",
		date: "2020-06-02",
		lts: "Dubnium",
		security: true
	},
	{
		name: "nodejs",
		version: "10.22.0",
		date: "2020-07-21",
		lts: "Dubnium",
		security: false
	},
	{
		name: "nodejs",
		version: "11.0.0",
		date: "2018-10-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.1.0",
		date: "2018-10-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.2.0",
		date: "2018-11-15",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.3.0",
		date: "2018-11-27",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "11.4.0",
		date: "2018-12-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.5.0",
		date: "2018-12-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.6.0",
		date: "2018-12-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.7.0",
		date: "2019-01-17",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.8.0",
		date: "2019-01-24",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.9.0",
		date: "2019-01-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.10.0",
		date: "2019-02-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.11.0",
		date: "2019-03-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.12.0",
		date: "2019-03-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.13.0",
		date: "2019-03-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.14.0",
		date: "2019-04-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "11.15.0",
		date: "2019-04-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.0.0",
		date: "2019-04-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.1.0",
		date: "2019-04-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.2.0",
		date: "2019-05-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.3.0",
		date: "2019-05-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.4.0",
		date: "2019-06-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.5.0",
		date: "2019-06-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.6.0",
		date: "2019-07-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.7.0",
		date: "2019-07-23",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.8.0",
		date: "2019-08-06",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.9.0",
		date: "2019-08-20",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.10.0",
		date: "2019-09-04",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.11.0",
		date: "2019-09-25",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.12.0",
		date: "2019-10-11",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "12.13.0",
		date: "2019-10-21",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.14.0",
		date: "2019-12-16",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "12.15.0",
		date: "2020-02-05",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "12.16.0",
		date: "2020-02-11",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.17.0",
		date: "2020-05-26",
		lts: "Erbium",
		security: false
	},
	{
		name: "nodejs",
		version: "12.18.0",
		date: "2020-06-02",
		lts: "Erbium",
		security: true
	},
	{
		name: "nodejs",
		version: "13.0.0",
		date: "2019-10-10",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.1.0",
		date: "2019-11-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.2.0",
		date: "2019-11-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.3.0",
		date: "2019-12-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.4.0",
		date: "2019-12-17",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "13.5.0",
		date: "2019-12-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.6.0",
		date: "2020-01-07",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.7.0",
		date: "2020-01-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.8.0",
		date: "2020-02-05",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "13.9.0",
		date: "2020-02-18",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.10.0",
		date: "2020-03-03",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.11.0",
		date: "2020-03-12",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.12.0",
		date: "2020-03-26",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.13.0",
		date: "2020-04-14",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "13.14.0",
		date: "2020-04-28",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.0.0",
		date: "2020-04-21",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.1.0",
		date: "2020-04-29",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.2.0",
		date: "2020-05-05",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.3.0",
		date: "2020-05-19",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.4.0",
		date: "2020-06-02",
		lts: false,
		security: true
	},
	{
		name: "nodejs",
		version: "14.5.0",
		date: "2020-06-30",
		lts: false,
		security: false
	},
	{
		name: "nodejs",
		version: "14.6.0",
		date: "2020-07-15",
		lts: false,
		security: false
	}
];

var envs$1 = /*#__PURE__*/Object.freeze({
	__proto__: null,
	'default': envs
});

var browsers={A:"ie",B:"edge",C:"firefox",D:"chrome",E:"safari",F:"opera",G:"ios_saf",H:"op_mini",I:"android",J:"bb",K:"op_mob",L:"and_chr",M:"and_ff",N:"ie_mob",O:"and_uc",P:"samsung",Q:"and_qq",R:"baidu",S:"kaios"};

var browsers_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var browsers$1 = exports.browsers = browsers;
});

var browserVersions={"0":"48","1":"49","2":"50","3":"51","4":"52","5":"53","6":"54","7":"55","8":"56","9":"57",A:"10",B:"11",C:"12",D:"7",E:"9",F:"8",G:"4",H:"14",I:"6",J:"16",K:"17",L:"18",M:"81",N:"68",O:"13",P:"46",Q:"15",R:"11.1",S:"84",T:"69",U:"67",V:"79",W:"5",X:"19",Y:"20",Z:"21",a:"22",b:"23",c:"24",d:"25",e:"26",f:"27",g:"28",h:"29",i:"30",j:"31",k:"32",l:"33",m:"34",n:"35",o:"36",p:"37",q:"38",r:"39",s:"40",t:"41",u:"42",v:"43",w:"44",x:"45",y:"80",z:"47",AB:"58",BB:"12.1",CB:"60",DB:"66",EB:"62",FB:"63",GB:"64",HB:"65",IB:"4.2-4.3",JB:"61",KB:"3",LB:"59",MB:"70",NB:"71",OB:"72",PB:"73",QB:"74",RB:"75",SB:"76",TB:"77",UB:"78",VB:"11.5",WB:"83",XB:"10.1",YB:"3.2",ZB:"10.3",aB:"87",bB:"86",cB:"5.1",dB:"6.1",eB:"7.1",fB:"9.1",gB:"85",hB:"3.6",iB:"5.5",jB:"13.1",kB:"TP",lB:"9.5-9.6",mB:"10.0-10.1",nB:"10.5",oB:"10.6",pB:"3.5",qB:"11.6",rB:"4.0-4.1",sB:"2",tB:"5.0-5.1",uB:"6.0-6.1",vB:"7.0-7.1",wB:"8.1-8.4",xB:"9.0-9.2",yB:"9.3",zB:"10.0-10.2","0B":"3.1","1B":"11.0-11.2","2B":"11.3-11.4","3B":"12.0-12.1","4B":"12.2-12.4","5B":"13.0-13.1","6B":"13.2","7B":"13.3","8B":"13.4-13.5","9B":"14.0",AC:"all",BC:"2.1",CC:"2.2",DC:"2.3",EC:"4.1",FC:"4.4",GC:"4.4.3-4.4.4",HC:"12.12",IC:"5.0-5.4",JC:"6.2-6.4",KC:"7.2-7.4",LC:"8.2",MC:"9.2",NC:"11.1-11.2",OC:"12.0",PC:"10.4",QC:"7.12",RC:"2.5"};

var browserVersions_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var browserVersions$1 = exports.browserVersions = browserVersions;
});

var agents={A:{A:{I:0.00597493,D:0.00597493,F:0.0657242,E:0.238997,A:0.0179248,B:1.38021,iB:0.009298},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iB","I","D","F","E","A","B","","",""],E:"IE",F:{iB:962323200,I:998870400,D:1161129600,F:1237420800,E:1300060800,A:1346716800,B:1381968000}},B:{A:{C:0.009422,O:0.009422,H:0.014133,Q:0.009422,J:0.028266,K:0.089509,L:1.48868,V:0,y:0.004711,M:0.051821,WB:1.04113,S:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C","O","H","Q","J","K","L","V","y","M","WB","S","","",""],E:"Edge",F:{C:1438128000,O:1447286400,H:1470096000,Q:1491868800,J:1508198400,K:1525046400,L:1542067200,V:1579046400,y:1581033600,M:1586736000,WB:1590019200,S:1594857600},D:{C:"ms",O:"ms",H:"ms",Q:"ms",J:"ms",K:"ms",L:"ms"}},C:{A:{"0":0.018844,"1":0.004538,"2":0.004711,"3":0.004711,"4":0.108353,"5":0.004335,"6":0.004711,"7":0.004711,"8":0.018844,"9":0.009422,sB:0.004827,KB:0.004538,G:0.014133,W:0.004879,I:0.020136,D:0.005725,F:0.004525,E:0.00533,A:0.004283,B:0.004711,C:0.004471,O:0.004486,H:0.00453,Q:0.004465,J:0.004417,K:0.008922,L:0.004393,X:0.004443,Y:0.004283,Z:0.013596,a:0.013698,b:0.013614,c:0.008786,d:0.004403,e:0.004317,f:0.004393,g:0.004418,h:0.008834,i:0.004403,j:0.008928,k:0.004471,l:0.009422,m:0.004707,n:0.009076,o:0.004465,p:0.004783,q:0.004711,r:0.004783,s:0.00487,t:0.005029,u:0.0047,v:0.037688,w:0.004711,x:0.009422,P:0.004525,z:0.009422,AB:0.004711,LB:0.004711,CB:0.018844,JB:0.004711,EB:0.004711,FB:0.028266,GB:0.018844,HB:0.023555,DB:0.023555,U:0.009422,N:0.136619,T:0.009422,MB:0.009422,NB:0.009422,OB:0.032977,PB:0.014133,QB:0.037688,RB:0.04711,SB:0.678384,TB:2.4827,UB:0.051821,V:0,y:0,M:0,pB:0.008786,hB:0.00487},B:"moz",C:["sB","KB","pB","hB","G","W","I","D","F","E","A","B","C","O","H","Q","J","K","L","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","P","z","0","1","2","3","4","5","6","7","8","9","AB","LB","CB","JB","EB","FB","GB","HB","DB","U","N","T","MB","NB","OB","PB","QB","RB","SB","TB","UB","V","y","M",""],E:"Firefox",F:{"0":1470096000,"1":1474329600,"2":1479168000,"3":1485216000,"4":1488844800,"5":1492560000,"6":1497312000,"7":1502150400,"8":1506556800,"9":1510617600,sB:1161648000,KB:1213660800,pB:1246320000,hB:1264032000,G:1300752000,W:1308614400,I:1313452800,D:1317081600,F:1317081600,E:1320710400,A:1324339200,B:1327968000,C:1331596800,O:1335225600,H:1338854400,Q:1342483200,J:1346112000,K:1349740800,L:1353628800,X:1357603200,Y:1361232000,Z:1364860800,a:1368489600,b:1372118400,c:1375747200,d:1379376000,e:1386633600,f:1391472000,g:1395100800,h:1398729600,i:1402358400,j:1405987200,k:1409616000,l:1413244800,m:1417392000,n:1421107200,o:1424736000,p:1428278400,q:1431475200,r:1435881600,s:1439251200,t:1442880000,u:1446508800,v:1450137600,w:1453852800,x:1457395200,P:1461628800,z:1465257600,AB:1516665600,LB:1520985600,CB:1525824000,JB:1529971200,EB:1536105600,FB:1540252800,GB:1544486400,HB:1548720000,DB:1552953600,U:1558396800,N:1562630400,T:1567468800,MB:1571788800,NB:1575331200,OB:1578355200,PB:1581379200,QB:1583798400,RB:1586304000,SB:1588636800,TB:1591056000,UB:1593475200,V:1595894400,y:null,M:null}},D:{A:{"0":0.023555,"1":0.325059,"2":0.004711,"3":0.009422,"4":0.004711,"5":0.042399,"6":0.018844,"7":0.018844,"8":0.023555,"9":0.023555,G:0.004706,W:0.004879,I:0.004879,D:0.005591,F:0.005591,E:0.005591,A:0.004534,B:0.004464,C:0.010424,O:0.009422,H:0.004706,Q:0.015087,J:0.004393,K:0.004393,L:0.008652,X:0.004418,Y:0.004393,Z:0.004317,a:0.014133,b:0.008786,c:0.004538,d:0.004461,e:0.004711,f:0.004326,g:0.0047,h:0.004538,i:0.004335,j:0.009422,k:0.004566,l:0.009422,m:0.009422,n:0.004335,o:0.004335,p:0.004464,q:0.028266,r:0.004464,s:0.014133,t:0.04711,u:0.004403,v:0.014133,w:0.004465,x:0.004711,P:0.004538,z:0.009422,AB:0.028266,LB:0.009422,CB:0.009422,JB:0.037688,EB:0.018844,FB:0.051821,GB:0.018844,HB:0.042399,DB:0.028266,U:0.056532,N:0.023555,T:0.084798,MB:0.146041,NB:0.169596,OB:0.169596,PB:0.108353,QB:0.127197,RB:0.098931,SB:0.117775,TB:0.09422,UB:0.146041,V:0.249683,y:0.51821,M:1.36148,WB:27.3379,S:0.056532,gB:0.032977,bB:0,aB:0},B:"webkit",C:["G","W","I","D","F","E","A","B","C","O","H","Q","J","K","L","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","P","z","0","1","2","3","4","5","6","7","8","9","AB","LB","CB","JB","EB","FB","GB","HB","DB","U","N","T","MB","NB","OB","PB","QB","RB","SB","TB","UB","V","y","M","WB","S","gB","bB","aB"],E:"Chrome",F:{"0":1453248000,"1":1456963200,"2":1460592000,"3":1464134400,"4":1469059200,"5":1472601600,"6":1476230400,"7":1480550400,"8":1485302400,"9":1489017600,G:1264377600,W:1274745600,I:1283385600,D:1287619200,F:1291248000,E:1296777600,A:1299542400,B:1303862400,C:1307404800,O:1312243200,H:1316131200,Q:1316131200,J:1319500800,K:1323734400,L:1328659200,X:1332892800,Y:1337040000,Z:1340668800,a:1343692800,b:1348531200,c:1352246400,d:1357862400,e:1361404800,f:1364428800,g:1369094400,h:1374105600,i:1376956800,j:1384214400,k:1389657600,l:1392940800,m:1397001600,n:1400544000,o:1405468800,p:1409011200,q:1412640000,r:1416268800,s:1421798400,t:1425513600,u:1429401600,v:1432080000,w:1437523200,x:1441152000,P:1444780800,z:1449014400,AB:1492560000,LB:1496707200,CB:1500940800,JB:1504569600,EB:1508198400,FB:1512518400,GB:1516752000,HB:1520294400,DB:1523923200,U:1527552000,N:1532390400,T:1536019200,MB:1539648000,NB:1543968000,OB:1548720000,PB:1552348800,QB:1555977600,RB:1559606400,SB:1564444800,TB:1568073600,UB:1571702400,V:1575936000,y:1580860800,M:1586304000,WB:1589846400,S:1594684800,gB:null,bB:null,aB:null}},E:{A:{G:0,W:0.004566,I:0.004656,D:0.004465,F:0.014133,E:0.004711,A:0.009422,B:0.023555,C:0.065954,O:0.537054,H:0,"0B":0,YB:0.008692,cB:0.160174,dB:0.00456,eB:0.004283,fB:0.037688,XB:0.056532,R:0.131908,BB:0.244972,jB:2.79362,kB:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","0B","YB","G","W","cB","I","dB","D","eB","F","E","fB","A","XB","B","R","C","BB","O","jB","H","kB",""],E:"Safari",F:{"0B":1205798400,YB:1226534400,G:1244419200,W:1275868800,cB:1311120000,I:1343174400,dB:1382400000,D:1382400000,eB:1410998400,F:1413417600,E:1443657600,fB:1458518400,A:1474329600,XB:1490572800,B:1505779200,R:1522281600,C:1537142400,BB:1553472000,O:1568851200,jB:1585008000,H:null,kB:null}},F:{A:{"0":0.004707,"1":0.004827,"2":0.004707,"3":0.004707,"4":0.004326,"5":0.008922,"6":0.014349,"7":0.004725,"8":0.004711,"9":0.009422,E:0.0082,B:0.016581,C:0.004317,Q:0.00685,J:0.00685,K:0.00685,L:0.005014,X:0.006015,Y:0.004879,Z:0.006597,a:0.006597,b:0.013434,c:0.006702,d:0.006015,e:0.005595,f:0.004393,g:0.008652,h:0.004879,i:0.004879,j:0.004711,k:0.005152,l:0.005014,m:0.009758,n:0.004879,o:0.009422,p:0.004283,q:0.004367,r:0.004534,s:0.004367,t:0.004227,u:0.004418,v:0.009042,w:0.004227,x:0.004725,P:0.004417,z:0.008942,AB:0.009422,CB:0.004403,EB:0.004532,FB:0.004566,GB:0.02283,HB:0.00867,DB:0.004656,U:0.009422,N:0.984599,T:0.014133,lB:0.00685,mB:0,nB:0.008392,oB:0.004706,R:0.006229,VB:0.004879,qB:0.008786,BB:0.004711},B:"webkit",C:["","","","","","","","","","","","","","","","","E","lB","mB","nB","oB","B","R","VB","qB","C","BB","Q","J","K","L","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","P","z","0","1","2","3","4","5","6","7","8","9","AB","CB","EB","FB","GB","HB","DB","U","N","T","","",""],E:"Opera",F:{"0":1506470400,"1":1510099200,"2":1515024000,"3":1517961600,"4":1521676800,"5":1525910400,"6":1530144000,"7":1534982400,"8":1537833600,"9":1543363200,E:1150761600,lB:1223424000,mB:1251763200,nB:1267488000,oB:1277942400,B:1292457600,R:1302566400,VB:1309219200,qB:1323129600,C:1323129600,BB:1352073600,Q:1372723200,J:1377561600,K:1381104000,L:1386288000,X:1390867200,Y:1393891200,Z:1399334400,a:1401753600,b:1405987200,c:1409616000,d:1413331200,e:1417132800,f:1422316800,g:1425945600,h:1430179200,i:1433808000,j:1438646400,k:1442448000,l:1445904000,m:1449100800,n:1454371200,o:1457308800,p:1462320000,q:1465344000,r:1470096000,s:1474329600,t:1477267200,u:1481587200,v:1486425600,w:1490054400,x:1494374400,P:1498003200,z:1502236800,AB:1548201600,CB:1554768000,EB:1561593600,FB:1566259200,GB:1570406400,HB:1573689600,DB:1578441600,U:1583971200,N:1587513600,T:1592956800},D:{E:"o",B:"o",C:"o",lB:"o",mB:"o",nB:"o",oB:"o",R:"o",VB:"o",qB:"o",BB:"o"}},G:{A:{F:0,YB:0.00359111,rB:0.00179556,IB:0,tB:0.00897778,uB:0.00179556,vB:0.0125689,wB:0.01616,xB:0.01616,yB:0.166987,zB:0.0466845,ZB:0.175965,"1B":0.114916,"2B":0.188533,"3B":0.265742,"4B":1.5765,"5B":0.332178,"6B":0.159805,"7B":2.30549,"8B":6.76027,"9B":0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","YB","rB","IB","tB","uB","vB","F","wB","xB","yB","zB","ZB","1B","2B","3B","4B","5B","6B","7B","8B","9B","",""],E:"iOS Safari",F:{YB:1270252800,rB:1283904000,IB:1299628800,tB:1331078400,uB:1359331200,vB:1394409600,F:1410912000,wB:1413763200,xB:1442361600,yB:1458518400,zB:1473724800,ZB:1490572800,"1B":1505779200,"2B":1522281600,"3B":1537142400,"4B":1553472000,"5B":1568851200,"6B":1572220800,"7B":1580169600,"8B":1585008000,"9B":null}},H:{A:{AC:0.801165},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AC","","",""],E:"Opera Mini",F:{AC:1426464000}},I:{A:{KB:0,G:0.00721227,M:0,BC:0,CC:0,DC:0.000601023,EC:0.0144245,IB:0.0246419,FC:0,GC:0.138235},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","BC","CC","DC","KB","G","EC","IB","FC","GC","M","","",""],E:"Android Browser",F:{BC:1256515200,CC:1274313600,DC:1291593600,KB:1298332800,G:1318896000,EC:1341792000,IB:1374624000,FC:1386547200,GC:1401667200,M:1587427200}},J:{A:{D:0,A:0.005289},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","D","A","","",""],E:"Blackberry Browser",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,P:0.0111391,R:0,VB:0,BB:0},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","R","VB","C","BB","P","","",""],E:"Opera Mobile",F:{A:1287100800,B:1300752000,R:1314835200,VB:1318291200,C:1330300800,BB:1349740800,P:1474588800},D:{P:"webkit"}},L:{A:{S:34.3249},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","S","","",""],E:"Chrome for Android",F:{S:1594684800}},M:{A:{N:0.248583},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","N","","",""],E:"Firefox for Android",F:{N:1567468800}},N:{A:{A:0.0115934,B:0.022664},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","","",""],E:"IE Mobile",F:{A:1340150400,B:1353456000}},O:{A:{HC:1.79826},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HC","","",""],E:"UC Browser for Android",F:{HC:1471392000},D:{HC:"webkit"}},P:{A:{G:0.279212,IC:0.0206824,JC:0.0103412,KC:0.0930706,LC:0.0206824,MC:0.1758,XB:0.186141,NC:2.43018,OC:0.248188},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","G","IC","JC","KC","LC","MC","XB","NC","OC","","",""],E:"Samsung Internet",F:{G:1461024000,IC:1481846400,JC:1509408000,KC:1528329600,LC:1546128000,MC:1554163200,XB:1567900800,NC:1582588800,OC:1593475200}},Q:{A:{PC:0.21156},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PC","","",""],E:"QQ Browser",F:{PC:1589846400}},R:{A:{QC:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","QC","","",""],E:"Baidu Browser",F:{QC:1491004800}},S:{A:{RC:0.068757},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RC","","",""],E:"KaiOS Browser",F:{RC:1527811200}}};

var agents_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.agents = undefined;







function unpackBrowserVersions(versionsData) {
    return Object.keys(versionsData).reduce(function (usage, version) {
        usage[browserVersions_1.browserVersions[version]] = versionsData[version];
        return usage;
    }, {});
}

var agents$1 = exports.agents = Object.keys(agents).reduce(function (map, key) {
    var versionsData = agents[key];
    map[browsers_1.browsers[key]] = Object.keys(versionsData).reduce(function (data, entry) {
        if (entry === 'A') {
            data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === 'C') {
            data.versions = versionsData[entry].reduce(function (list, version) {
                if (version === '') {
                    list.push(null);
                } else {
                    list.push(browserVersions_1.browserVersions[version]);
                }
                return list;
            }, []);
        } else if (entry === 'D') {
            data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === 'E') {
            data.browser = versionsData[entry];
        } else if (entry === 'F') {
            data.release_date = Object.keys(versionsData[entry]).reduce(function (map, key) {
                map[browserVersions_1.browserVersions[key]] = versionsData[entry][key];
                return map;
            }, {});
        } else {
            // entry is B
            data.prefix = versionsData[entry];
        }
        return data;
    }, {});
    return map;
}, {});
});

var v4 = {
	start: "2015-09-08",
	lts: "2015-10-12",
	maintenance: "2017-04-01",
	end: "2018-04-30",
	codename: "Argon"
};
var v5 = {
	start: "2015-10-29",
	maintenance: "2016-04-30",
	end: "2016-06-30"
};
var v6 = {
	start: "2016-04-26",
	lts: "2016-10-18",
	maintenance: "2018-04-30",
	end: "2019-04-30",
	codename: "Boron"
};
var v7 = {
	start: "2016-10-25",
	maintenance: "2017-04-30",
	end: "2017-06-30"
};
var v8 = {
	start: "2017-05-30",
	lts: "2017-10-31",
	maintenance: "2019-01-01",
	end: "2019-12-31",
	codename: "Carbon"
};
var v9 = {
	start: "2017-10-01",
	maintenance: "2018-04-01",
	end: "2018-06-30"
};
var v10 = {
	start: "2018-04-24",
	lts: "2018-10-30",
	maintenance: "2020-05-19",
	end: "2021-04-30",
	codename: "Dubnium"
};
var v11 = {
	start: "2018-10-23",
	maintenance: "2019-04-22",
	end: "2019-06-01"
};
var v12 = {
	start: "2019-04-23",
	lts: "2019-10-21",
	maintenance: "2020-10-20",
	end: "2022-04-30",
	codename: "Erbium"
};
var v13 = {
	start: "2019-10-22",
	maintenance: "2020-04-01",
	end: "2020-06-01"
};
var v14 = {
	start: "2020-04-21",
	lts: "2020-10-20",
	maintenance: "2021-10-19",
	end: "2023-04-30",
	codename: ""
};
var v15 = {
	start: "2020-10-21",
	maintenance: "2021-04-01",
	end: "2021-06-01"
};
var releaseSchedule = {
	"v0.10": {
	start: "2013-03-11",
	end: "2016-10-31"
},
	"v0.12": {
	start: "2015-02-06",
	end: "2016-12-31"
},
	v4: v4,
	v5: v5,
	v6: v6,
	v7: v7,
	v8: v8,
	v9: v9,
	v10: v10,
	v11: v11,
	v12: v12,
	v13: v13,
	v14: v14,
	v15: v15
};

var releaseSchedule$1 = /*#__PURE__*/Object.freeze({
	__proto__: null,
	v4: v4,
	v5: v5,
	v6: v6,
	v7: v7,
	v8: v8,
	v9: v9,
	v10: v10,
	v11: v11,
	v12: v12,
	v13: v13,
	v14: v14,
	v15: v15,
	'default': releaseSchedule
});

var versions = {
	"0.20": "39",
	"0.21": "41",
	"0.22": "41",
	"0.23": "41",
	"0.24": "41",
	"0.25": "42",
	"0.26": "42",
	"0.27": "43",
	"0.28": "43",
	"0.29": "43",
	"0.30": "44",
	"0.31": "45",
	"0.32": "45",
	"0.33": "45",
	"0.34": "45",
	"0.35": "45",
	"0.36": "47",
	"0.37": "49",
	"1.0": "49",
	"1.1": "50",
	"1.2": "51",
	"1.3": "52",
	"1.4": "53",
	"1.5": "54",
	"1.6": "56",
	"1.7": "58",
	"1.8": "59",
	"2.0": "61",
	"2.1": "61",
	"3.0": "66",
	"3.1": "66",
	"4.0": "69",
	"4.1": "69",
	"4.2": "69",
	"5.0": "73",
	"6.0": "76",
	"6.1": "76",
	"7.0": "78",
	"7.1": "78",
	"7.2": "78",
	"7.3": "78",
	"8.0": "80",
	"8.1": "80",
	"8.2": "80",
	"8.3": "80",
	"8.4": "80",
	"9.0": "83",
	"9.1": "83",
	"10.0": "85"
};

function BrowserslistError (message) {
  this.name = 'BrowserslistError';
  this.message = message;
  this.browserslist = true;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, BrowserslistError);
  }
}

BrowserslistError.prototype = Error.prototype;

var error = BrowserslistError;

var statuses = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    1: "ls", // WHATWG Living Standard
    2: "rec", // W3C Recommendation
    3: "pr", // W3C Proposed Recommendation
    4: "cr", // W3C Candidate Recommendation
    5: "wd", // W3C Working Draft
    6: "other", // Non-W3C, but reputable
    7: "unoff" // Unofficial, Editor's Draft or W3C "Note"
};
});

var supported = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    y: 1 << 0,
    n: 1 << 1,
    a: 1 << 2,
    p: 1 << 3,
    u: 1 << 4,
    x: 1 << 5,
    d: 1 << 6
};
});

var feature = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = unpackFeature;



var _statuses2 = _interopRequireDefault(statuses);



var _supported2 = _interopRequireDefault(supported);





function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MATH2LOG = Math.log(2);

function unpackSupport(cipher) {
    // bit flags
    var stats = Object.keys(_supported2.default).reduce(function (list, support) {
        if (cipher & _supported2.default[support]) list.push(support);
        return list;
    }, []);

    // notes
    var notes = cipher >> 7;
    var notesArray = [];
    while (notes) {
        var note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift('#' + note);
        notes -= Math.pow(2, note - 1);
    }

    return stats.concat(notesArray).join(' ');
}

function unpackFeature(packed) {
    var unpacked = { status: _statuses2.default[packed.B], title: packed.C };
    unpacked.stats = Object.keys(packed.A).reduce(function (browserStats, key) {
        var browser = packed.A[key];
        browserStats[browsers_1.browsers[key]] = Object.keys(browser).reduce(function (stats, support) {
            var packedVersions = browser[support].split(' ');
            var unpacked = unpackSupport(support);
            packedVersions.forEach(function (v) {
                return stats[browserVersions_1.browserVersions[v]] = unpacked;
            });
            return stats;
        }, {});
        return browserStats;
    }, {});
    return unpacked;
}
});

var region = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = unpackRegion;



function unpackRegion(packed) {
    return Object.keys(packed).reduce(function (list, browser) {
        var data = packed[browser];
        list[browsers_1.browsers[browser]] = Object.keys(data).reduce(function (memo, key) {
            var stats = data[key];
            if (key === '_') {
                stats.split(' ').forEach(function (version) {
                    return memo[version] = null;
                });
            } else {
                memo[key] = stats;
            }
            return memo;
        }, {});
        return list;
    }, {});
}
});

var node = createCommonjsModule(function (module) {
var feature$1 = feature.default;
var region$1 = region.default;





var IS_SECTION = /^\s*\[(.+)]\s*$/;
var CONFIG_PATTERN = /^browserslist-config-/;
var SCOPED_CONFIG__PATTERN = /@[^/]+\/browserslist-config(-|$|\/)/;
var TIME_TO_UPDATE_CANIUSE = 6 * 30 * 24 * 60 * 60 * 1000;
var FORMAT = 'Browserslist config should be a string or an array ' +
             'of strings with browser queries';

var dataTimeChecked = false;
var filenessCache = { };
var configCache = { };
function checkExtend (name) {
  var use = ' Use `dangerousExtend` option to disable.';
  if (!CONFIG_PATTERN.test(name) && !SCOPED_CONFIG__PATTERN.test(name)) {
    throw new error(
      'Browserslist config needs `browserslist-config-` prefix. ' + use)
  }
  if (name.replace(/^@[^/]+\//, '').indexOf('.') !== -1) {
    throw new error(
      '`.` not allowed in Browserslist config name. ' + use)
  }
  if (name.indexOf('node_modules') !== -1) {
    throw new error(
      '`node_modules` not allowed in Browserslist config.' + use)
  }
}

function isFile (file) {
  if (file in filenessCache) {
    return filenessCache[file]
  }
  var result = fs.existsSync(file) && fs.statSync(file).isFile();
  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
    filenessCache[file] = result;
  }
  return result
}

function eachParent (file, callback) {
  var dir = isFile(file) ? path.dirname(file) : file;
  var loc = path.resolve(dir);
  do {
    var result = callback(loc);
    if (typeof result !== 'undefined') return result
  } while (loc !== (loc = path.dirname(loc)))
  return undefined
}

function check (section) {
  if (Array.isArray(section)) {
    for (var i = 0; i < section.length; i++) {
      if (typeof section[i] !== 'string') {
        throw new error(FORMAT)
      }
    }
  } else if (typeof section !== 'string') {
    throw new error(FORMAT)
  }
}

function pickEnv (config, opts) {
  if (typeof config !== 'object') return config

  var name;
  if (typeof opts.env === 'string') {
    name = opts.env;
  } else if (process.env.BROWSERSLIST_ENV) {
    name = process.env.BROWSERSLIST_ENV;
  } else if (process.env.NODE_ENV) {
    name = process.env.NODE_ENV;
  } else {
    name = 'production';
  }

  return config[name] || config.defaults
}

function parsePackage (file) {
  var config = JSON.parse(fs.readFileSync(file));
  if (config.browserlist && !config.browserslist) {
    throw new error(
      '`browserlist` key instead of `browserslist` in ' + file
    )
  }
  var list = config.browserslist;
  if (Array.isArray(list) || typeof list === 'string') {
    list = { defaults: list };
  }
  for (var i in list) {
    check(list[i]);
  }

  return list
}

function latestReleaseTime (agents) {
  var latest = 0;
  for (var name in agents) {
    var dates = agents[name].releaseDate || { };
    for (var key in dates) {
      if (latest < dates[key]) {
        latest = dates[key];
      }
    }
  }
  return latest * 1000
}

function normalizeStats (data, stats) {
  if (stats && 'dataByBrowser' in stats) {
    stats = stats.dataByBrowser;
  }

  if (typeof stats !== 'object') return undefined

  var normalized = { };
  for (var i in stats) {
    var versions = Object.keys(stats[i]);
    if (
      versions.length === 1 &&
      data[i] &&
      data[i].versions.length === 1
    ) {
      var normal = Object.keys(data[i].versions)[0];
      normalized[i] = { };
      normalized[i][normal] = stats[i][versions[0]];
    } else {
      normalized[i] = stats[i];
    }
  }

  return normalized
}

function normalizeUsageData (usageData, data) {
  for (var browser in usageData) {
    var browserUsage = usageData[browser];
    // eslint-disable-next-line max-len
    // https://github.com/browserslist/browserslist/issues/431#issuecomment-565230615
    // caniuse-db returns { 0: "percentage" } for `and_*` regional stats
    if ('0' in browserUsage) {
      var versions = data[browser].versions;
      browserUsage[versions[versions.length - 1]] = browserUsage[0];
      delete browserUsage[0];
    }
  }
}

module.exports = {
  loadQueries: function loadQueries (context, name) {
    if (!context.dangerousExtend) checkExtend(name);
    // eslint-disable-next-line security/detect-non-literal-require
    var queries = commonjsRequire(require.resolve(name, { paths: ['.'] }));
    if (queries) {
      if (Array.isArray(queries)) {
        return queries
      } else if (typeof queries === 'object') {
        if (!queries.defaults) queries.defaults = [];
        return pickEnv(queries, context)
      }
    }
    throw new error(
      '`' + name + '` config exports not an array of queries' +
      ' or an object of envs'
    )
  },

  loadStat: function loadStat (context, name, data) {
    if (!context.dangerousExtend) checkExtend(name);
    // eslint-disable-next-line security/detect-non-literal-require
    var stats = commonjsRequire(
      require.resolve(
        path.join(name, 'browserslist-stats.json'),
        { paths: ['.'] }
      )
    );
    return normalizeStats(data, stats)
  },

  getStat: function getStat (opts, data) {
    var stats;
    if (opts.stats) {
      stats = opts.stats;
    } else if (process.env.BROWSERSLIST_STATS) {
      stats = process.env.BROWSERSLIST_STATS;
    } else if (opts.path && path.resolve && fs.existsSync) {
      stats = eachParent(opts.path, function (dir) {
        var file = path.join(dir, 'browserslist-stats.json');
        return isFile(file) ? file : undefined
      });
    }
    if (typeof stats === 'string') {
      try {
        stats = JSON.parse(fs.readFileSync(stats));
      } catch (e) {
        throw new error('Can\'t read ' + stats)
      }
    }
    return normalizeStats(data, stats)
  },

  loadConfig: function loadConfig (opts) {
    if (process.env.BROWSERSLIST) {
      return process.env.BROWSERSLIST
    } else if (opts.config || process.env.BROWSERSLIST_CONFIG) {
      var file = opts.config || process.env.BROWSERSLIST_CONFIG;
      if (path.basename(file) === 'package.json') {
        return pickEnv(parsePackage(file), opts)
      } else {
        return pickEnv(module.exports.readConfig(file), opts)
      }
    } else if (opts.path) {
      return pickEnv(module.exports.findConfig(opts.path), opts)
    } else {
      return undefined
    }
  },

  loadCountry: function loadCountry (usage, country, data) {
    var code = country.replace(/[^\w-]/g, '');
    if (!usage[code]) {
      // eslint-disable-next-line security/detect-non-literal-require
      var compressed = commonjsRequire();
      var usageData = region$1(compressed);
      normalizeUsageData(usageData, data);
      usage[country] = { };
      for (var i in usageData) {
        for (var j in usageData[i]) {
          usage[country][i + ' ' + j] = usageData[i][j];
        }
      }
    }
  },

  loadFeature: function loadFeature (features, name) {
    name = name.replace(/[^\w-]/g, '');
    if (features[name]) return

    // eslint-disable-next-line security/detect-non-literal-require
    var compressed = commonjsRequire();
    var stats = feature$1(compressed).stats;
    features[name] = { };
    for (var i in stats) {
      for (var j in stats[i]) {
        features[name][i + ' ' + j] = stats[i][j];
      }
    }
  },

  parseConfig: function parseConfig (string) {
    var result = { defaults: [] };
    var sections = ['defaults'];

    string.toString()
      .replace(/#[^\n]*/g, '')
      .split(/\n|,/)
      .map(function (line) {
        return line.trim()
      })
      .filter(function (line) {
        return line !== ''
      })
      .forEach(function (line) {
        if (IS_SECTION.test(line)) {
          sections = line.match(IS_SECTION)[1].trim().split(' ');
          sections.forEach(function (section) {
            if (result[section]) {
              throw new error(
                'Duplicate section ' + section + ' in Browserslist config'
              )
            }
            result[section] = [];
          });
        } else {
          sections.forEach(function (section) {
            result[section].push(line);
          });
        }
      });

    return result
  },

  readConfig: function readConfig (file) {
    if (!isFile(file)) {
      throw new error('Can\'t read ' + file + ' config')
    }
    return module.exports.parseConfig(fs.readFileSync(file))
  },

  findConfig: function findConfig (from) {
    from = path.resolve(from);

    var passed = [];
    var resolved = eachParent(from, function (dir) {
      if (dir in configCache) {
        return configCache[dir]
      }

      passed.push(dir);

      var config = path.join(dir, 'browserslist');
      var pkg = path.join(dir, 'package.json');
      var rc = path.join(dir, '.browserslistrc');

      var pkgBrowserslist;
      if (isFile(pkg)) {
        try {
          pkgBrowserslist = parsePackage(pkg);
        } catch (e) {
          if (e.name === 'BrowserslistError') throw e
          console.warn(
            '[Browserslist] Could not parse ' + pkg + '. Ignoring it.'
          );
        }
      }

      if (isFile(config) && pkgBrowserslist) {
        throw new error(
          dir + ' contains both browserslist and package.json with browsers'
        )
      } else if (isFile(rc) && pkgBrowserslist) {
        throw new error(
          dir + ' contains both .browserslistrc and package.json with browsers'
        )
      } else if (isFile(config) && isFile(rc)) {
        throw new error(
          dir + ' contains both .browserslistrc and browserslist'
        )
      } else if (isFile(config)) {
        return module.exports.readConfig(config)
      } else if (isFile(rc)) {
        return module.exports.readConfig(rc)
      } else {
        return pkgBrowserslist
      }
    });
    if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
      passed.forEach(function (dir) {
        configCache[dir] = resolved;
      });
    }
    return resolved
  },

  clearCaches: function clearCaches () {
    dataTimeChecked = false;
    filenessCache = { };
    configCache = { };

    this.cache = { };
  },

  oldDataWarning: function oldDataWarning (agentsObj) {
    if (dataTimeChecked) return
    dataTimeChecked = true;
    if (process.env.BROWSERSLIST_IGNORE_OLD_DATA) return

    var latest = latestReleaseTime(agentsObj);
    var halfYearAgo = Date.now() - TIME_TO_UPDATE_CANIUSE;

    if (latest !== 0 && latest < halfYearAgo) {
      console.warn(
        'Browserslist: caniuse-lite is outdated. Please run:\n' +
        'npx browserslist@latest --update-db'
      );
    }
  },

  currentNode: function currentNode () {
    return 'node ' + process.versions.node
  }
};
});

var jsReleases = getCjsExportFromNamespace(envs$1);

var jsEOL = getCjsExportFromNamespace(releaseSchedule$1);

var agents$1 = agents_1.agents;





 // Will load browser.js in webpack

var YEAR = 365.259641 * 24 * 60 * 60 * 1000;
var ANDROID_EVERGREEN_FIRST = 37;

var QUERY_OR = 1;
var QUERY_AND = 2;

function isVersionsMatch (versionA, versionB) {
  return (versionA + '.').indexOf(versionB + '.') === 0
}

function isEolReleased (name) {
  var version = name.slice(1);
  return jsReleases.some(function (i) {
    return isVersionsMatch(i.version, version)
  })
}

function normalize (versions) {
  return versions.filter(function (version) {
    return typeof version === 'string'
  })
}

function normalizeElectron (version) {
  var versionToUse = version;
  if (version.split('.').length === 3) {
    versionToUse = version
      .split('.')
      .slice(0, -1)
      .join('.');
  }
  return versionToUse
}

function nameMapper (name) {
  return function mapName (version) {
    return name + ' ' + version
  }
}

function getMajor (version) {
  return parseInt(version.split('.')[0])
}

function getMajorVersions (released, number) {
  if (released.length === 0) return []
  var majorVersions = uniq(released.map(getMajor));
  var minimum = majorVersions[majorVersions.length - number];
  if (!minimum) {
    return released
  }
  var selected = [];
  for (var i = released.length - 1; i >= 0; i--) {
    if (minimum > getMajor(released[i])) break
    selected.unshift(released[i]);
  }
  return selected
}

function uniq (array) {
  var filtered = [];
  for (var i = 0; i < array.length; i++) {
    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i]);
  }
  return filtered
}

// Helpers

function fillUsage (result, name, data) {
  for (var i in data) {
    result[name + ' ' + i] = data[i];
  }
}

function generateFilter (sign, version) {
  version = parseFloat(version);
  if (sign === '>') {
    return function (v) {
      return parseFloat(v) > version
    }
  } else if (sign === '>=') {
    return function (v) {
      return parseFloat(v) >= version
    }
  } else if (sign === '<') {
    return function (v) {
      return parseFloat(v) < version
    }
  } else {
    return function (v) {
      return parseFloat(v) <= version
    }
  }
}

function generateSemverFilter (sign, version) {
  version = version.split('.').map(parseSimpleInt);
  version[1] = version[1] || 0;
  version[2] = version[2] || 0;
  if (sign === '>') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(v, version) > 0
    }
  } else if (sign === '>=') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(v, version) >= 0
    }
  } else if (sign === '<') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(version, v) > 0
    }
  } else {
    return function (v) {
      v = v.split('.').map(parseSimpleInt);
      return compareSemver(version, v) >= 0
    }
  }
}

function parseSimpleInt (x) {
  return parseInt(x)
}

function compare (a, b) {
  if (a < b) return -1
  if (a > b) return +1
  return 0
}

function compareSemver (a, b) {
  return (
    compare(parseInt(a[0]), parseInt(b[0])) ||
    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||
    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))
  )
}

// this follows the npm-like semver behavior
function semverFilterLoose (operator, range) {
  range = range.split('.').map(parseSimpleInt);
  if (typeof range[1] === 'undefined') {
    range[1] = 'x';
  }
  // ignore any patch version because we only return minor versions
  // range[2] = 'x'
  switch (operator) {
    case '<=':
      return function (version) {
        version = version.split('.').map(parseSimpleInt);
        return compareSemverLoose(version, range) <= 0
      }
    default:
    case '>=':
      return function (version) {
        version = version.split('.').map(parseSimpleInt);
        return compareSemverLoose(version, range) >= 0
      }
  }
}

// this follows the npm-like semver behavior
function compareSemverLoose (version, range) {
  if (version[0] !== range[0]) {
    return version[0] < range[0] ? -1 : +1
  }
  if (range[1] === 'x') {
    return 0
  }
  if (version[1] !== range[1]) {
    return version[1] < range[1] ? -1 : +1
  }
  return 0
}

function resolveVersion (data, version) {
  if (data.versions.indexOf(version) !== -1) {
    return version
  } else if (browserslist.versionAliases[data.name][version]) {
    return browserslist.versionAliases[data.name][version]
  } else {
    return false
  }
}

function normalizeVersion (data, version) {
  var resolved = resolveVersion(data, version);
  if (resolved) {
    return resolved
  } else if (data.versions.length === 1) {
    return data.versions[0]
  } else {
    return false
  }
}

function filterByYear (since, context) {
  since = since / 1000;
  return Object.keys(agents$1).reduce(function (selected, name) {
    var data = byName(name, context);
    if (!data) return selected
    var versions = Object.keys(data.releaseDate).filter(function (v) {
      return data.releaseDate[v] >= since
    });
    return selected.concat(versions.map(nameMapper(data.name)))
  }, [])
}

function cloneData (data) {
  return {
    name: data.name,
    versions: data.versions,
    released: data.released,
    releaseDate: data.releaseDate
  }
}

function mapVersions (data, map) {
  data.versions = data.versions.map(function (i) {
    return map[i] || i
  });
  data.released = data.versions.map(function (i) {
    return map[i] || i
  });
  var fixedDate = { };
  for (var i in data.releaseDate) {
    fixedDate[map[i] || i] = data.releaseDate[i];
  }
  data.releaseDate = fixedDate;
  return data
}

function byName (name, context) {
  name = name.toLowerCase();
  name = browserslist.aliases[name] || name;
  if (context.mobileToDesktop && browserslist.desktopNames[name]) {
    var desktop = browserslist.data[browserslist.desktopNames[name]];
    if (name === 'android') {
      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)
    } else {
      var cloned = cloneData(desktop);
      cloned.name = name;
      if (name === 'op_mob') {
        cloned = mapVersions(cloned, { '10.0-10.1': '10' });
      }
      return cloned
    }
  }
  return browserslist.data[name]
}

function normalizeAndroidVersions (androidVersions, chromeVersions) {
  var firstEvergreen = ANDROID_EVERGREEN_FIRST;
  var last = chromeVersions[chromeVersions.length - 1];
  return androidVersions
    .filter(function (version) { return /^(?:[2-4]\.|[34]$)/.test(version) })
    .concat(chromeVersions.slice(firstEvergreen - last - 1))
}

function normalizeAndroidData (android, chrome) {
  android.released = normalizeAndroidVersions(android.released, chrome.released);
  android.versions = normalizeAndroidVersions(android.versions, chrome.versions);
  return android
}

function checkName (name, context) {
  var data = byName(name, context);
  if (!data) throw new error('Unknown browser ' + name)
  return data
}

function unknownQuery (query) {
  return new error(
    'Unknown browser query `' + query + '`. ' +
    'Maybe you are using old Browserslist or made typo in query.'
  )
}

function filterAndroid (list, versions, context) {
  if (context.mobileToDesktop) return list
  var released = browserslist.data.android.released;
  var last = released[released.length - 1];
  var diff = last - ANDROID_EVERGREEN_FIRST - versions;
  if (diff > 0) {
    return list.slice(-1)
  } else {
    return list.slice(diff - 1)
  }
}

/**
 * Resolves queries into a browser list.
 * @param {string|string[]} queries Queries to combine.
 * Either an array of queries or a long string of queries.
 * @param {object} [context] Optional arguments to
 * the select function in `queries`.
 * @returns {string[]} A list of browsers
 */
function resolve (queries, context) {
  if (Array.isArray(queries)) {
    queries = flatten(queries.map(parse));
  } else {
    queries = parse(queries);
  }

  return queries.reduce(function (result, query, index) {
    var selection = query.queryString;

    var isExclude = selection.indexOf('not ') === 0;
    if (isExclude) {
      if (index === 0) {
        throw new error(
          'Write any browsers query (for instance, `defaults`) ' +
          'before `' + selection + '`')
      }
      selection = selection.slice(4);
    }

    for (var i = 0; i < QUERIES.length; i++) {
      var type = QUERIES[i];
      var match = selection.match(type.regexp);
      if (match) {
        var args = [context].concat(match.slice(1));
        var array = type.select.apply(browserslist, args).map(function (j) {
          var parts = j.split(' ');
          if (parts[1] === '0') {
            return parts[0] + ' ' + byName(parts[0], context).versions[0]
          } else {
            return j
          }
        });

        switch (query.type) {
          case QUERY_AND:
            if (isExclude) {
              return result.filter(function (j) {
                return array.indexOf(j) === -1
              })
            } else {
              return result.filter(function (j) {
                return array.indexOf(j) !== -1
              })
            }
          case QUERY_OR:
          default:
            if (isExclude) {
              var filter = { };
              array.forEach(function (j) {
                filter[j] = true;
              });
              return result.filter(function (j) {
                return !filter[j]
              })
            }
            return result.concat(array)
        }
      }
    }

    throw unknownQuery(selection)
  }, [])
}

var cache = { };

/**
 * Return array of browsers by selection queries.
 *
 * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.
 * @param {object} [opts] Options.
 * @param {string} [opts.path="."] Path to processed file.
 *                                 It will be used to find config files.
 * @param {string} [opts.env="production"] Processing environment.
 *                                         It will be used to take right
 *                                         queries from config file.
 * @param {string} [opts.config] Path to config file with queries.
 * @param {object} [opts.stats] Custom browser usage statistics
 *                              for "> 1% in my stats" query.
 * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown
 *                                                     version in direct query.
 * @param {boolean} [opts.dangerousExtend] Disable security checks
 *                                         for extend query.
 * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop
 *                                         version when Can I Use doesn't have
 *                                         data about the specified version.
 * @returns {string[]} Array with browser names in Can I Use.
 *
 * @example
 * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']
 */
function browserslist (queries, opts) {
  if (typeof opts === 'undefined') opts = { };

  if (typeof opts.path === 'undefined') {
    opts.path = path.resolve ? path.resolve('.') : '.';
  }

  if (typeof queries === 'undefined' || queries === null) {
    var config = browserslist.loadConfig(opts);
    if (config) {
      queries = config;
    } else {
      queries = browserslist.defaults;
    }
  }

  if (!(typeof queries === 'string' || Array.isArray(queries))) {
    throw new error(
      'Browser queries must be an array or string. Got ' + typeof queries + '.')
  }

  var context = {
    ignoreUnknownVersions: opts.ignoreUnknownVersions,
    dangerousExtend: opts.dangerousExtend,
    mobileToDesktop: opts.mobileToDesktop,
    env: opts.env
  };

  node.oldDataWarning(browserslist.data);
  var stats = node.getStat(opts, browserslist.data);
  if (stats) {
    context.customUsage = { };
    for (var browser in stats) {
      fillUsage(context.customUsage, browser, stats[browser]);
    }
  }

  var cacheKey = JSON.stringify([queries, context]);
  if (cache[cacheKey]) return cache[cacheKey]

  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {
    name1 = name1.split(' ');
    name2 = name2.split(' ');
    if (name1[0] === name2[0]) {
      // assumptions on caniuse data
      // 1) version ranges never overlaps
      // 2) if version is not a range, it never contains `-`
      var version1 = name1[1].split('-')[0];
      var version2 = name2[1].split('-')[0];
      return compareSemver(version2.split('.'), version1.split('.'))
    } else {
      return compare(name1[0], name2[0])
    }
  });
  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
    cache[cacheKey] = result;
  }
  return result
}

function parse (queries) {
  var qs = [];
  do {
    queries = doMatch(queries, qs);
  } while (queries)
  return qs
}

function doMatch (string, qs) {
  var or = /^(?:,\s*|\s+or\s+)(.*)/i;
  var and = /^\s+and\s+(.*)/i;

  return find(string, function (parsed, n, max) {
    if (and.test(parsed)) {
      qs.unshift({ type: QUERY_AND, queryString: parsed.match(and)[1] });
      return true
    } else if (or.test(parsed)) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.match(or)[1] });
      return true
    } else if (n === max) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.trim() });
      return true
    }
    return false
  })
}

function find (string, predicate) {
  for (var n = 1, max = string.length; n <= max; n++) {
    var parsed = string.substr(-n, n);
    if (predicate(parsed, n, max)) {
      return string.slice(0, -n)
    }
  }
  return ''
}

function flatten (array) {
  if (!Array.isArray(array)) return [array]
  return array.reduce(function (a, b) {
    return a.concat(flatten(b))
  }, [])
}

// Will be filled by Can I Use data below
browserslist.cache = { };
browserslist.data = { };
browserslist.usage = {
  global: { },
  custom: null
};

// Default browsers query
browserslist.defaults = [
  '> 0.5%',
  'last 2 versions',
  'Firefox ESR',
  'not dead'
];

// Browser names aliases
browserslist.aliases = {
  fx: 'firefox',
  ff: 'firefox',
  ios: 'ios_saf',
  explorer: 'ie',
  blackberry: 'bb',
  explorermobile: 'ie_mob',
  operamini: 'op_mini',
  operamobile: 'op_mob',
  chromeandroid: 'and_chr',
  firefoxandroid: 'and_ff',
  ucandroid: 'and_uc',
  qqandroid: 'and_qq'
};

// Can I Use only provides a few versions for some browsers (e.g. and_chr).
// Fallback to a similar browser for unknown versions
browserslist.desktopNames = {
  and_chr: 'chrome',
  and_ff: 'firefox',
  ie_mob: 'ie',
  op_mob: 'opera',
  android: 'chrome' // has extra processing logic
};

// Aliases to work with joined versions like `ios_saf 7.0-7.1`
browserslist.versionAliases = { };

browserslist.clearCaches = node.clearCaches;
browserslist.parseConfig = node.parseConfig;
browserslist.readConfig = node.readConfig;
browserslist.findConfig = node.findConfig;
browserslist.loadConfig = node.loadConfig;

/**
 * Return browsers market coverage.
 *
 * @param {string[]} browsers Browsers names in Can I Use.
 * @param {string|object} [stats="global"] Which statistics should be used.
 *                                         Country code or custom statistics.
 *                                         Pass `"my stats"` to load statistics
 *                                         from Browserslist files.
 *
 * @return {number} Total market coverage for all selected browsers.
 *
 * @example
 * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1
 */
browserslist.coverage = function (browsers, stats) {
  var data;
  if (typeof stats === 'undefined') {
    data = browserslist.usage.global;
  } else if (stats === 'my stats') {
    var opts = {};
    opts.path = path.resolve ? path.resolve('.') : '.';
    var customStats = node.getStat(opts);
    if (!customStats) {
      throw new error('Custom usage statistics was not provided')
    }
    data = {};
    for (var browser in customStats) {
      fillUsage(data, browser, customStats[browser]);
    }
  } else if (typeof stats === 'string') {
    if (stats.length > 2) {
      stats = stats.toLowerCase();
    } else {
      stats = stats.toUpperCase();
    }
    node.loadCountry(browserslist.usage, stats, browserslist.data);
    data = browserslist.usage[stats];
  } else {
    if ('dataByBrowser' in stats) {
      stats = stats.dataByBrowser;
    }
    data = { };
    for (var name in stats) {
      for (var version in stats[name]) {
        data[name + ' ' + version] = stats[name][version];
      }
    }
  }

  return browsers.reduce(function (all, i) {
    var usage = data[i];
    if (usage === undefined) {
      usage = data[i.replace(/ \S+$/, ' 0')];
    }
    return all + (usage || 0)
  }, 0)
};

var QUERIES = [
  {
    regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents$1).reduce(function (selected, name) {
        var data = byName(name, context);
        if (!data) return selected
        var list = getMajorVersions(data.released, versions);
        list = list.map(nameMapper(data.name));
        if (data.name === 'android') {
          list = filterAndroid(list, versions, context);
        }
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents$1).reduce(function (selected, name) {
        var data = byName(name, context);
        if (!data) return selected
        var list = data.released.slice(-versions);
        list = list.map(nameMapper(data.name));
        if (data.name === 'android') {
          list = filterAndroid(list, versions, context);
        }
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
    select: function (context, versions$1) {
      var validVersions = getMajorVersions(Object.keys(versions), versions$1);
      return validVersions.map(function (i) {
        return 'chrome ' + versions[i]
      })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name, context);
      var validVersions = getMajorVersions(data.released, versions);
      var list = validVersions.map(nameMapper(data.name));
      if (data.name === 'android') {
        list = filterAndroid(list, versions, context);
      }
      return list
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
    select: function (context, versions$1) {
      return Object.keys(versions).reverse().slice(-versions$1).map(function (i) {
        return 'chrome ' + versions[i]
      })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name, context);
      var list = data.released.slice(-versions).map(nameMapper(data.name));
      if (data.name === 'android') {
        list = filterAndroid(list, versions, context);
      }
      return list
    }
  },
  {
    regexp: /^unreleased\s+versions$/i,
    select: function (context) {
      return Object.keys(agents$1).reduce(function (selected, name) {
        var data = byName(name, context);
        if (!data) return selected
        var list = data.versions.filter(function (v) {
          return data.released.indexOf(v) === -1
        });
        list = list.map(nameMapper(data.name));
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^unreleased\s+electron\s+versions?$/i,
    select: function () {
      return []
    }
  },
  {
    regexp: /^unreleased\s+(\w+)\s+versions?$/i,
    select: function (context, name) {
      var data = checkName(name, context);
      return data.versions.filter(function (v) {
        return data.released.indexOf(v) === -1
      }).map(nameMapper(data.name))
    }
  },
  {
    regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
    select: function (context, years) {
      return filterByYear(Date.now() - YEAR * years, context)
    }
  },
  {
    regexp: /^since (\d+)(?:-(\d+))?(?:-(\d+))?$/i,
    select: function (context, year, month, date) {
      year = parseInt(year);
      month = parseInt(month || '01') - 1;
      date = parseInt(date || '01');
      return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context)
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity);
      var usage = browserslist.usage.global;
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version);
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version);
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version);
          }
        } else if (usage[version] >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%\s+in\s+my\s+stats$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity);
      if (!context.customUsage) {
        throw new error('Custom usage statistics was not provided')
      }
      var usage = context.customUsage;
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version);
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version);
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version);
          }
        } else if (usage[version] >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%\s+in\s+(\S+)\s+stats$/,
    select: function (context, sign, popularity, name) {
      popularity = parseFloat(popularity);
      var stats = node.loadStat(context, name, browserslist.data);
      if (stats) {
        context.customUsage = { };
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser]);
        }
      }
      if (!context.customUsage) {
        throw new error('Custom usage statistics was not provided')
      }
      var usage = context.customUsage;
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version);
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version);
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version);
          }
        } else if (usage[version] >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%\s+in\s+((alt-)?\w\w)$/,
    select: function (context, sign, popularity, place) {
      popularity = parseFloat(popularity);
      if (place.length === 2) {
        place = place.toUpperCase();
      } else {
        place = place.toLowerCase();
      }
      node.loadCountry(browserslist.usage, place, browserslist.data);
      var usage = browserslist.usage[place];
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version);
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version);
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version);
          }
        } else if (usage[version] >= popularity) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^cover\s+(\d*\.?\d+)%(\s+in\s+(my\s+stats|(alt-)?\w\w))?$/,
    select: function (context, coverage, statMode) {
      coverage = parseFloat(coverage);
      var usage = browserslist.usage.global;
      if (statMode) {
        if (statMode.match(/^\s+in\s+my\s+stats$/)) {
          if (!context.customUsage) {
            throw new error(
              'Custom usage statistics was not provided'
            )
          }
          usage = context.customUsage;
        } else {
          var match = statMode.match(/\s+in\s+((alt-)?\w\w)/);
          var place = match[1];
          if (place.length === 2) {
            place = place.toUpperCase();
          } else {
            place = place.toLowerCase();
          }
          node.loadCountry(browserslist.usage, place, browserslist.data);
          usage = browserslist.usage[place];
        }
      }
      var versions = Object.keys(usage).sort(function (a, b) {
        return usage[b] - usage[a]
      });
      var coveraged = 0;
      var result = [];
      var version;
      for (var i = 0; i <= versions.length; i++) {
        version = versions[i];
        if (usage[version] === 0) break
        coveraged += usage[version];
        result.push(version);
        if (coveraged >= coverage) break
      }
      return result
    }
  },
  {
    regexp: /^supports\s+([\w-]+)$/,
    select: function (context, feature) {
      node.loadFeature(browserslist.cache, feature);
      var features = browserslist.cache[feature];
      return Object.keys(features).reduce(function (result, version) {
        var flags = features[version];
        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {
          result.push(version);
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var fromToUse = normalizeElectron(from);
      var toToUse = normalizeElectron(to);
      if (!versions[fromToUse]) {
        throw new error('Unknown version ' + from + ' of electron')
      }
      if (!versions[toToUse]) {
        throw new error('Unknown version ' + to + ' of electron')
      }
      from = parseFloat(from);
      to = parseFloat(to);
      return Object.keys(versions).filter(function (i) {
        var parsed = parseFloat(i);
        return parsed >= from && parsed <= to
      }).map(function (i) {
        return 'chrome ' + versions[i]
      })
    }
  },
  {
    regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var nodeVersions = jsReleases.filter(function (i) {
        return i.name === 'nodejs'
      }).map(function (i) {
        return i.version
      });
      var semverRegExp = /^(0|[1-9]\d*)(\.(0|[1-9]\d*)){0,2}$/;
      if (!semverRegExp.test(from)) {
        throw new error(
          'Unknown version ' + from + ' of Node.js')
      }
      if (!semverRegExp.test(to)) {
        throw new error(
          'Unknown version ' + to + ' of Node.js')
      }
      return nodeVersions
        .filter(semverFilterLoose('>=', from))
        .filter(semverFilterLoose('<=', to))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, name, from, to) {
      var data = checkName(name, context);
      from = parseFloat(normalizeVersion(data, from) || from);
      to = parseFloat(normalizeVersion(data, to) || to);
      function filter (v) {
        var parsed = parseFloat(v);
        return parsed >= from && parsed <= to
      }
      return data.released.filter(filter).map(nameMapper(data.name))
    }
  },
  {
    regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var versionToUse = normalizeElectron(version);
      return Object.keys(versions)
        .filter(generateFilter(sign, versionToUse))
        .map(function (i) {
          return 'chrome ' + versions[i]
        })
    }
  },
  {
    regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var nodeVersions = jsReleases.filter(function (i) {
        return i.name === 'nodejs'
      }).map(function (i) {
        return i.version
      });
      return nodeVersions
        .filter(generateSemverFilter(sign, version))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
    select: function (context, name, sign, version) {
      var data = checkName(name, context);
      var alias = browserslist.versionAliases[data.name][version];
      if (alias) {
        version = alias;
      }
      return data.released
        .filter(generateFilter(sign, version))
        .map(function (v) {
          return data.name + ' ' + v
        })
    }
  },
  {
    regexp: /^(firefox|ff|fx)\s+esr$/i,
    select: function () {
      return ['firefox 68', 'firefox 78']
    }
  },
  {
    regexp: /(operamini|op_mini)\s+all/i,
    select: function () {
      return ['op_mini all']
    }
  },
  {
    regexp: /^electron\s+([\d.]+)$/i,
    select: function (context, version) {
      var versionToUse = normalizeElectron(version);
      var chrome = versions[versionToUse];
      if (!chrome) {
        throw new error(
          'Unknown version ' + version + ' of electron')
      }
      return ['chrome ' + chrome]
    }
  },
  {
    regexp: /^node\s+(\d+(\.\d+)?(\.\d+)?)$/i,
    select: function (context, version) {
      var nodeReleases = jsReleases.filter(function (i) {
        return i.name === 'nodejs'
      });
      var matched = nodeReleases.filter(function (i) {
        return isVersionsMatch(i.version, version)
      });
      if (matched.length === 0) {
        if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new error(
            'Unknown version ' + version + ' of Node.js')
        }
      }
      return ['node ' + matched[matched.length - 1].version]
    }
  },
  {
    regexp: /^current\s+node$/i,
    select: function (context) {
      return [node.currentNode(resolve, context)]
    }
  },
  {
    regexp: /^maintained\s+node\s+versions$/i,
    select: function (context) {
      var now = Date.now();
      var queries = Object.keys(jsEOL).filter(function (key) {
        return now < Date.parse(jsEOL[key].end) &&
          now > Date.parse(jsEOL[key].start) &&
          isEolReleased(key)
      }).map(function (key) {
        return 'node ' + key.slice(1)
      });
      return resolve(queries, context)
    }
  },
  {
    regexp: /^phantomjs\s+1.9$/i,
    select: function () {
      return ['safari 5']
    }
  },
  {
    regexp: /^phantomjs\s+2.1$/i,
    select: function () {
      return ['safari 6']
    }
  },
  {
    regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
    select: function (context, name, version) {
      if (/^tp$/i.test(version)) version = 'TP';
      var data = checkName(name, context);
      var alias = normalizeVersion(data, version);
      if (alias) {
        version = alias;
      } else {
        if (version.indexOf('.') === -1) {
          alias = version + '.0';
        } else {
          alias = version.replace(/\.0$/, '');
        }
        alias = normalizeVersion(data, alias);
        if (alias) {
          version = alias;
        } else if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new error(
            'Unknown version ' + version + ' of ' + name)
        }
      }
      return [data.name + ' ' + version]
    }
  },
  {
    regexp: /^extends (.+)$/i,
    select: function (context, name) {
      return resolve(node.loadQueries(context, name), context)
    }
  },
  {
    regexp: /^defaults$/i,
    select: function (context) {
      return resolve(browserslist.defaults, context)
    }
  },
  {
    regexp: /^dead$/i,
    select: function (context) {
      var dead = [
        'ie <= 10',
        'ie_mob <= 11',
        'bb <= 10',
        'op_mob <= 12.1',
        'samsung 4'
      ];
      return resolve(dead, context)
    }
  },
  {
    regexp: /^(\w+)$/i,
    select: function (context, name) {
      if (byName(name, context)) {
        throw new error(
          'Specify versions in Browserslist query for browser ' + name)
      } else {
        throw unknownQuery(name)
      }
    }
  }
];

// Get and convert Can I Use data

(function () {
  for (var name in agents$1) {
    var browser = agents$1[name];
    browserslist.data[name] = {
      name: name,
      versions: normalize(agents$1[name].versions),
      released: normalize(agents$1[name].versions.slice(0, -3)),
      releaseDate: agents$1[name].release_date
    };
    fillUsage(browserslist.usage.global, name, browser.usage_global);

    browserslist.versionAliases[name] = { };
    for (var i = 0; i < browser.versions.length; i++) {
      var full = browser.versions[i];
      if (!full) continue

      if (full.indexOf('-') !== -1) {
        var interval = full.split('-');
        for (var j = 0; j < interval.length; j++) {
          browserslist.versionAliases[name][interval[j]] = full;
        }
      }
    }
  }
}());

var browserslist_1 = browserslist;

let enabled =
  !("NO_COLOR" in process.env) &&
  ("FORCE_COLOR" in process.env ||
    process.platform === "win32" ||
    (process.stdout != null &&
      process.stdout.isTTY &&
      process.env.TERM &&
      process.env.TERM !== "dumb"));

const raw = (open, close, searchRegex, replaceValue) => (s) =>
  enabled
    ? open +
      (~(s += "").indexOf(close, 4) // skip opening \x1b[
        ? s.replace(searchRegex, replaceValue)
        : s) +
      close
    : s;

const init = (open, close) => {
  return raw(
    `\x1b[${open}m`,
    `\x1b[${close}m`,
    new RegExp(`\\x1b\\[${close}m`, "g"),
    `\x1b[${open}m`
  )
};

const options = Object.defineProperty({}, "enabled", {
  get: () => enabled,
  set: (value) => (enabled = value),
});

const reset = init(0, 0);
const bold = raw("\x1b[1m", "\x1b[22m", /\x1b\[22m/g, "\x1b[22m\x1b[1m");
const dim = raw("\x1b[2m", "\x1b[22m", /\x1b\[22m/g, "\x1b[22m\x1b[2m");
const italic = init(3, 23);
const underline = init(4, 24);
const inverse = init(7, 27);
const hidden = init(8, 28);
const strikethrough = init(9, 29);
const black = init(30, 39);
const red = init(31, 39);
const green = init(32, 39);
const yellow = init(33, 39);
const blue = init(34, 39);
const magenta = init(35, 39);
const cyan = init(36, 39);
const white = init(37, 39);
const gray = init(90, 39);
const bgBlack = init(40, 49);
const bgRed = init(41, 49);
const bgGreen = init(42, 49);
const bgYellow = init(43, 49);
const bgBlue = init(44, 49);
const bgMagenta = init(45, 49);
const bgCyan = init(46, 49);
const bgWhite = init(47, 49);
const blackBright = init(90, 39);
const redBright = init(91, 39);
const greenBright = init(92, 39);
const yellowBright = init(93, 39);
const blueBright = init(94, 39);
const magentaBright = init(95, 39);
const cyanBright = init(96, 39);
const whiteBright = init(97, 39);
const bgBlackBright = init(100, 49);
const bgRedBright = init(101, 49);
const bgGreenBright = init(102, 49);
const bgYellowBright = init(103, 49);
const bgBlueBright = init(104, 49);
const bgMagentaBright = init(105, 49);
const bgCyanBright = init(106, 49);
const bgWhiteBright = init(107, 49);

var colorette = /*#__PURE__*/Object.freeze({
	__proto__: null,
	options: options,
	reset: reset,
	bold: bold,
	dim: dim,
	italic: italic,
	underline: underline,
	inverse: inverse,
	hidden: hidden,
	strikethrough: strikethrough,
	black: black,
	red: red,
	green: green,
	yellow: yellow,
	blue: blue,
	magenta: magenta,
	cyan: cyan,
	white: white,
	gray: gray,
	bgBlack: bgBlack,
	bgRed: bgRed,
	bgGreen: bgGreen,
	bgYellow: bgYellow,
	bgBlue: bgBlue,
	bgMagenta: bgMagenta,
	bgCyan: bgCyan,
	bgWhite: bgWhite,
	blackBright: blackBright,
	redBright: redBright,
	greenBright: greenBright,
	yellowBright: yellowBright,
	blueBright: blueBright,
	magentaBright: magentaBright,
	cyanBright: cyanBright,
	whiteBright: whiteBright,
	bgBlackBright: bgBlackBright,
	bgRedBright: bgRedBright,
	bgGreenBright: bgGreenBright,
	bgYellowBright: bgYellowBright,
	bgBlueBright: bgBlueBright,
	bgMagentaBright: bgMagentaBright,
	bgCyanBright: bgCyanBright,
	bgWhiteBright: bgWhiteBright
});

var hasFlag = (flag, argv) => {
	argv = argv || process.argv;
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const pos = argv.indexOf(prefix + flag);
	const terminatorPos = argv.indexOf('--');
	return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};

const {env} = process;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false') ||
	hasFlag('color=never')) {
	forceColor = 0;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = 1;
}
if ('FORCE_COLOR' in env) {
	if (env.FORCE_COLOR === true || env.FORCE_COLOR === 'true') {
		forceColor = 1;
	} else if (env.FORCE_COLOR === false || env.FORCE_COLOR === 'false') {
		forceColor = 0;
	} else {
		forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
	}
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(stream) {
	if (forceColor === 0) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor === undefined) {
		return 0;
	}

	const min = forceColor || 0;

	if (env.TERM === 'dumb') {
		return min;
	}

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream);
	return translateLevel(level);
}

var supportsColor_1 = {
	supportsColor: getSupportLevel,
	stdout: getSupportLevel(process.stdout),
	stderr: getSupportLevel(process.stderr)
};

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

var escapeStringRegexp = function (str) {
	if (typeof str !== 'string') {
		throw new TypeError('Expected a string');
	}

	return str.replace(matchOperatorsRe, '\\$&');
};

var colorName = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};

var conversions = createCommonjsModule(function (module) {
/* MIT license */


// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

var reverseKeywords = {};
for (var key in colorName) {
	if (colorName.hasOwnProperty(key)) {
		reverseKeywords[colorName[key]] = key;
	}
}

var convert = module.exports = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

// hide .channels and .labels properties
for (var model in convert) {
	if (convert.hasOwnProperty(model)) {
		if (!('channels' in convert[model])) {
			throw new Error('missing channels property: ' + model);
		}

		if (!('labels' in convert[model])) {
			throw new Error('missing channel labels property: ' + model);
		}

		if (convert[model].labels.length !== convert[model].channels) {
			throw new Error('channel and label counts mismatch: ' + model);
		}

		var channels = convert[model].channels;
		var labels = convert[model].labels;
		delete convert[model].channels;
		delete convert[model].labels;
		Object.defineProperty(convert[model], 'channels', {value: channels});
		Object.defineProperty(convert[model], 'labels', {value: labels});
	}
}

convert.rgb.hsl = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var min = Math.min(r, g, b);
	var max = Math.max(r, g, b);
	var delta = max - min;
	var h;
	var s;
	var l;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	var rdif;
	var gdif;
	var bdif;
	var h;
	var s;

	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var v = Math.max(r, g, b);
	var diff = v - Math.min(r, g, b);
	var diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	var r = rgb[0];
	var g = rgb[1];
	var b = rgb[2];
	var h = convert.rgb.hsl(rgb)[0];
	var w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var c;
	var m;
	var y;
	var k;

	k = Math.min(1 - r, 1 - g, 1 - b);
	c = (1 - r - k) / (1 - k) || 0;
	m = (1 - g - k) / (1 - k) || 0;
	y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */
function comparativeDistance(x, y) {
	return (
		Math.pow(x[0] - y[0], 2) +
		Math.pow(x[1] - y[1], 2) +
		Math.pow(x[2] - y[2], 2)
	);
}

convert.rgb.keyword = function (rgb) {
	var reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	var currentClosestDistance = Infinity;
	var currentClosestKeyword;

	for (var keyword in colorName) {
		if (colorName.hasOwnProperty(keyword)) {
			var value = colorName[keyword];

			// Compute comparative distance
			var distance = comparativeDistance(rgb, value);

			// Check if its less, if so set as closest
			if (distance < currentClosestDistance) {
				currentClosestDistance = distance;
				currentClosestKeyword = keyword;
			}
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return colorName[keyword];
};

convert.rgb.xyz = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;

	// assume sRGB
	r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	var xyz = convert.rgb.xyz(rgb);
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	var h = hsl[0] / 360;
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var t1;
	var t2;
	var t3;
	var rgb;
	var val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	t1 = 2 * l - t2;

	rgb = [0, 0, 0];
	for (var i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	var h = hsl[0];
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var smin = s;
	var lmin = Math.max(l, 0.01);
	var sv;
	var v;

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	v = (l + s) / 2;
	sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	var h = hsv[0] / 60;
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var hi = Math.floor(h) % 6;

	var f = h - Math.floor(h);
	var p = 255 * v * (1 - s);
	var q = 255 * v * (1 - (s * f));
	var t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	var h = hsv[0];
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var vmin = Math.max(v, 0.01);
	var lmin;
	var sl;
	var l;

	l = (2 - s) * v;
	lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	var h = hwb[0] / 360;
	var wh = hwb[1] / 100;
	var bl = hwb[2] / 100;
	var ratio = wh + bl;
	var i;
	var v;
	var f;
	var n;

	// wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	i = Math.floor(6 * h);
	v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	n = wh + f * (v - wh); // linear interpolation

	var r;
	var g;
	var b;
	switch (i) {
		default:
		case 6:
		case 0: r = v; g = n; b = wh; break;
		case 1: r = n; g = v; b = wh; break;
		case 2: r = wh; g = v; b = n; break;
		case 3: r = wh; g = n; b = v; break;
		case 4: r = n; g = wh; b = v; break;
		case 5: r = v; g = wh; b = n; break;
	}

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	var c = cmyk[0] / 100;
	var m = cmyk[1] / 100;
	var y = cmyk[2] / 100;
	var k = cmyk[3] / 100;
	var r;
	var g;
	var b;

	r = 1 - Math.min(1, c * (1 - k) + k);
	g = 1 - Math.min(1, m * (1 - k) + k);
	b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	var x = xyz[0] / 100;
	var y = xyz[1] / 100;
	var z = xyz[2] / 100;
	var r;
	var g;
	var b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// assume sRGB
	r = r > 0.0031308
		? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var x;
	var y;
	var z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	var y2 = Math.pow(y, 3);
	var x2 = Math.pow(x, 3);
	var z2 = Math.pow(z, 3);
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var hr;
	var h;
	var c;

	hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	var l = lch[0];
	var c = lch[1];
	var h = lch[2];
	var a;
	var b;
	var hr;

	hr = h / 360 * 2 * Math.PI;
	a = c * Math.cos(hr);
	b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];
	var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	var ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];

	// we use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	var ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	var color = args % 10;

	// handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	var mult = (~~(args > 50) + 1) * 0.5;
	var r = ((color & 1) * mult) * 255;
	var g = (((color >> 1) & 1) * mult) * 255;
	var b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// handle greyscale
	if (args >= 232) {
		var c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	var rem;
	var r = Math.floor(args / 36) / 5 * 255;
	var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	var b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	var integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = (integer >> 16) & 0xFF;
	var g = (integer >> 8) & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var max = Math.max(Math.max(r, g), b);
	var min = Math.min(Math.min(r, g), b);
	var chroma = (max - min);
	var grayscale;
	var hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma + 4;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var c = 1;
	var f = 0;

	if (l < 0.5) {
		c = 2.0 * s * l;
	} else {
		c = 2.0 * s * (1.0 - l);
	}

	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;

	var c = s * v;
	var f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	var h = hcg[0] / 360;
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	var pure = [0, 0, 0];
	var hi = (h % 1) * 6;
	var v = hi % 1;
	var w = 1 - v;
	var mg = 0;

	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var v = c + g * (1.0 - c);
	var f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var l = g * (1.0 - c) + 0.5 * c;
	var s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;
	var v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	var w = hwb[1] / 100;
	var b = hwb[2] / 100;
	var v = 1 - b;
	var c = v - w;
	var g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	var val = Math.round(gray[0] / 100 * 255) & 0xFF;
	var integer = (val << 16) + (val << 8) + val;

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};
});

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph();
	var queue = [fromModel]; // unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		var current = queue.pop();
		var adjacents = Object.keys(conversions[current]);

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i];
			var node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel];
	var fn = conversions[graph[toModel].parent][toModel];

	var cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

var route = function (fromModel) {
	var graph = deriveBFS(fromModel);
	var conversion = {};

	var models = Object.keys(graph);
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i];
		var node = graph[toModel];

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};

var convert = {};

var models = Object.keys(conversions);

function wrapRaw(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		return fn(args);
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		var result = fn(args);

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(function (fromModel) {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	var routes = route(fromModel);
	var routeModels = Object.keys(routes);

	routeModels.forEach(function (toModel) {
		var fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

var colorConvert = convert;

var ansiStyles = createCommonjsModule(function (module) {


const wrapAnsi16 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${code + offset}m`;
};

const wrapAnsi256 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};5;${code}m`;
};

const wrapAnsi16m = (fn, offset) => function () {
	const rgb = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
};

function assembleStyles() {
	const codes = new Map();
	const styles = {
		modifier: {
			reset: [0, 0],
			// 21 isn't widely supported and 22 does the same thing
			bold: [1, 22],
			dim: [2, 22],
			italic: [3, 23],
			underline: [4, 24],
			inverse: [7, 27],
			hidden: [8, 28],
			strikethrough: [9, 29]
		},
		color: {
			black: [30, 39],
			red: [31, 39],
			green: [32, 39],
			yellow: [33, 39],
			blue: [34, 39],
			magenta: [35, 39],
			cyan: [36, 39],
			white: [37, 39],
			gray: [90, 39],

			// Bright color
			redBright: [91, 39],
			greenBright: [92, 39],
			yellowBright: [93, 39],
			blueBright: [94, 39],
			magentaBright: [95, 39],
			cyanBright: [96, 39],
			whiteBright: [97, 39]
		},
		bgColor: {
			bgBlack: [40, 49],
			bgRed: [41, 49],
			bgGreen: [42, 49],
			bgYellow: [43, 49],
			bgBlue: [44, 49],
			bgMagenta: [45, 49],
			bgCyan: [46, 49],
			bgWhite: [47, 49],

			// Bright color
			bgBlackBright: [100, 49],
			bgRedBright: [101, 49],
			bgGreenBright: [102, 49],
			bgYellowBright: [103, 49],
			bgBlueBright: [104, 49],
			bgMagentaBright: [105, 49],
			bgCyanBright: [106, 49],
			bgWhiteBright: [107, 49]
		}
	};

	// Fix humans
	styles.color.grey = styles.color.gray;

	for (const groupName of Object.keys(styles)) {
		const group = styles[groupName];

		for (const styleName of Object.keys(group)) {
			const style = group[styleName];

			styles[styleName] = {
				open: `\u001B[${style[0]}m`,
				close: `\u001B[${style[1]}m`
			};

			group[styleName] = styles[styleName];

			codes.set(style[0], style[1]);
		}

		Object.defineProperty(styles, groupName, {
			value: group,
			enumerable: false
		});

		Object.defineProperty(styles, 'codes', {
			value: codes,
			enumerable: false
		});
	}

	const ansi2ansi = n => n;
	const rgb2rgb = (r, g, b) => [r, g, b];

	styles.color.close = '\u001B[39m';
	styles.bgColor.close = '\u001B[49m';

	styles.color.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 0)
	};
	styles.color.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 0)
	};
	styles.color.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 0)
	};

	styles.bgColor.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 10)
	};
	styles.bgColor.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 10)
	};
	styles.bgColor.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 10)
	};

	for (let key of Object.keys(colorConvert)) {
		if (typeof colorConvert[key] !== 'object') {
			continue;
		}

		const suite = colorConvert[key];

		if (key === 'ansi16') {
			key = 'ansi';
		}

		if ('ansi16' in suite) {
			styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
			styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
		}

		if ('ansi256' in suite) {
			styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
			styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
		}

		if ('rgb' in suite) {
			styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
			styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
		}
	}

	return styles;
}

// Make the export immutable
Object.defineProperty(module, 'exports', {
	enumerable: true,
	get: assembleStyles
});
});

const env$1 = process.env;

let forceColor$1;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false')) {
	forceColor$1 = false;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor$1 = true;
}
if ('FORCE_COLOR' in env$1) {
	forceColor$1 = env$1.FORCE_COLOR.length === 0 || parseInt(env$1.FORCE_COLOR, 10) !== 0;
}

function translateLevel$1(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor$1(stream) {
	if (forceColor$1 === false) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor$1 !== true) {
		return 0;
	}

	const min = forceColor$1 ? 1 : 0;

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env$1) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env$1) || env$1.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env$1) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env$1.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env$1.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env$1) {
		const version = parseInt((env$1.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env$1.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env$1.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$1.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env$1) {
		return 1;
	}

	if (env$1.TERM === 'dumb') {
		return min;
	}

	return min;
}

function getSupportLevel$1(stream) {
	const level = supportsColor$1(stream);
	return translateLevel$1(level);
}

var supportsColor_1$1 = {
	supportsColor: getSupportLevel$1,
	stdout: getSupportLevel$1(process.stdout),
	stderr: getSupportLevel$1(process.stderr)
};

const TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
const STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
const STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
const ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;

const ESCAPES = new Map([
	['n', '\n'],
	['r', '\r'],
	['t', '\t'],
	['b', '\b'],
	['f', '\f'],
	['v', '\v'],
	['0', '\0'],
	['\\', '\\'],
	['e', '\u001B'],
	['a', '\u0007']
]);

function unescape$1(c) {
	if ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {
		return String.fromCharCode(parseInt(c.slice(1), 16));
	}

	return ESCAPES.get(c) || c;
}

function parseArguments(name, args) {
	const results = [];
	const chunks = args.trim().split(/\s*,\s*/g);
	let matches;

	for (const chunk of chunks) {
		if (!isNaN(chunk)) {
			results.push(Number(chunk));
		} else if ((matches = chunk.match(STRING_REGEX))) {
			results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape$1(escape) : chr));
		} else {
			throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
		}
	}

	return results;
}

function parseStyle(style) {
	STYLE_REGEX.lastIndex = 0;

	const results = [];
	let matches;

	while ((matches = STYLE_REGEX.exec(style)) !== null) {
		const name = matches[1];

		if (matches[2]) {
			const args = parseArguments(name, matches[2]);
			results.push([name].concat(args));
		} else {
			results.push([name]);
		}
	}

	return results;
}

function buildStyle(chalk, styles) {
	const enabled = {};

	for (const layer of styles) {
		for (const style of layer.styles) {
			enabled[style[0]] = layer.inverse ? null : style.slice(1);
		}
	}

	let current = chalk;
	for (const styleName of Object.keys(enabled)) {
		if (Array.isArray(enabled[styleName])) {
			if (!(styleName in current)) {
				throw new Error(`Unknown Chalk style: ${styleName}`);
			}

			if (enabled[styleName].length > 0) {
				current = current[styleName].apply(current, enabled[styleName]);
			} else {
				current = current[styleName];
			}
		}
	}

	return current;
}

var templates = (chalk, tmp) => {
	const styles = [];
	const chunks = [];
	let chunk = [];

	// eslint-disable-next-line max-params
	tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
		if (escapeChar) {
			chunk.push(unescape$1(escapeChar));
		} else if (style) {
			const str = chunk.join('');
			chunk = [];
			chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));
			styles.push({inverse, styles: parseStyle(style)});
		} else if (close) {
			if (styles.length === 0) {
				throw new Error('Found extraneous } in Chalk template literal');
			}

			chunks.push(buildStyle(chalk, styles)(chunk.join('')));
			chunk = [];
			styles.pop();
		} else {
			chunk.push(chr);
		}
	});

	chunks.push(chunk.join(''));

	if (styles.length > 0) {
		const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\`}\`)`;
		throw new Error(errMsg);
	}

	return chunks.join('');
};

var chalk = createCommonjsModule(function (module) {


const stdoutColor = supportsColor_1$1.stdout;



const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');

// `supportsColor.level` → `ansiStyles.color[name]` mapping
const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];

// `color-convert` models to exclude from the Chalk API due to conflicts and such
const skipModels = new Set(['gray']);

const styles = Object.create(null);

function applyOptions(obj, options) {
	options = options || {};

	// Detect level if not set manually
	const scLevel = stdoutColor ? stdoutColor.level : 0;
	obj.level = options.level === undefined ? scLevel : options.level;
	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;
}

function Chalk(options) {
	// We check for this.template here since calling `chalk.constructor()`
	// by itself will have a `this` of a previously constructed chalk object
	if (!this || !(this instanceof Chalk) || this.template) {
		const chalk = {};
		applyOptions(chalk, options);

		chalk.template = function () {
			const args = [].slice.call(arguments);
			return chalkTag.apply(null, [chalk.template].concat(args));
		};

		Object.setPrototypeOf(chalk, Chalk.prototype);
		Object.setPrototypeOf(chalk.template, chalk);

		chalk.template.constructor = Chalk;

		return chalk.template;
	}

	applyOptions(this, options);
}

// Use bright blue on Windows as the normal blue color is illegible
if (isSimpleWindowsTerm) {
	ansiStyles.blue.open = '\u001B[94m';
}

for (const key of Object.keys(ansiStyles)) {
	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');

	styles[key] = {
		get() {
			const codes = ansiStyles[key];
			return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);
		}
	};
}

styles.visible = {
	get() {
		return build.call(this, this._styles || [], true, 'visible');
	}
};

ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');
for (const model of Object.keys(ansiStyles.color.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	styles[model] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.color.close,
					closeRe: ansiStyles.color.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');
for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);
	styles[bgModel] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.bgColor.close,
					closeRe: ansiStyles.bgColor.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

const proto = Object.defineProperties(() => {}, styles);

function build(_styles, _empty, key) {
	const builder = function () {
		return applyStyle.apply(builder, arguments);
	};

	builder._styles = _styles;
	builder._empty = _empty;

	const self = this;

	Object.defineProperty(builder, 'level', {
		enumerable: true,
		get() {
			return self.level;
		},
		set(level) {
			self.level = level;
		}
	});

	Object.defineProperty(builder, 'enabled', {
		enumerable: true,
		get() {
			return self.enabled;
		},
		set(enabled) {
			self.enabled = enabled;
		}
	});

	// See below for fix regarding invisible grey/dim combination on Windows
	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';

	// `__proto__` is used because we must return a function, but there is
	// no way to create a function with a different prototype
	builder.__proto__ = proto; // eslint-disable-line no-proto

	return builder;
}

function applyStyle() {
	// Support varags, but simply cast to string in case there's only one arg
	const args = arguments;
	const argsLen = args.length;
	let str = String(arguments[0]);

	if (argsLen === 0) {
		return '';
	}

	if (argsLen > 1) {
		// Don't slice `arguments`, it prevents V8 optimizations
		for (let a = 1; a < argsLen; a++) {
			str += ' ' + args[a];
		}
	}

	if (!this.enabled || this.level <= 0 || !str) {
		return this._empty ? '' : str;
	}

	// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
	// see https://github.com/chalk/chalk/issues/58
	// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
	const originalDim = ansiStyles.dim.open;
	if (isSimpleWindowsTerm && this.hasGrey) {
		ansiStyles.dim.open = '';
	}

	for (const code of this._styles.slice().reverse()) {
		// Replace any instances already present with a re-opening code
		// otherwise only the part of the string until said closing code
		// will be colored, and the rest will simply be 'plain'.
		str = code.open + str.replace(code.closeRe, code.open) + code.close;

		// Close the styling before a linebreak and reopen
		// after next line to fix a bleed issue on macOS
		// https://github.com/chalk/chalk/pull/92
		str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);
	}

	// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue
	ansiStyles.dim.open = originalDim;

	return str;
}

function chalkTag(chalk, strings) {
	if (!Array.isArray(strings)) {
		// If chalk() was called by itself or with a string,
		// return the string itself as a string.
		return [].slice.call(arguments, 1).join(' ');
	}

	const args = [].slice.call(arguments, 2);
	const parts = [strings.raw[0]];

	for (let i = 1; i < strings.length; i++) {
		parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));
		parts.push(String(strings.raw[i]));
	}

	return templates(chalk, parts.join(''));
}

Object.defineProperties(Chalk.prototype, styles);

module.exports = Chalk(); // eslint-disable-line new-cap
module.exports.supportsColor = stdoutColor;
module.exports.default = module.exports; // For TypeScript
});

var tokenize = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = tokenizer;
var SINGLE_QUOTE = '\''.charCodeAt(0);
var DOUBLE_QUOTE = '"'.charCodeAt(0);
var BACKSLASH = '\\'.charCodeAt(0);
var SLASH = '/'.charCodeAt(0);
var NEWLINE = '\n'.charCodeAt(0);
var SPACE = ' '.charCodeAt(0);
var FEED = '\f'.charCodeAt(0);
var TAB = '\t'.charCodeAt(0);
var CR = '\r'.charCodeAt(0);
var OPEN_SQUARE = '['.charCodeAt(0);
var CLOSE_SQUARE = ']'.charCodeAt(0);
var OPEN_PARENTHESES = '('.charCodeAt(0);
var CLOSE_PARENTHESES = ')'.charCodeAt(0);
var OPEN_CURLY = '{'.charCodeAt(0);
var CLOSE_CURLY = '}'.charCodeAt(0);
var SEMICOLON = ';'.charCodeAt(0);
var ASTERISK = '*'.charCodeAt(0);
var COLON = ':'.charCodeAt(0);
var AT = '@'.charCodeAt(0);
var RE_AT_END = /[ \n\t\r\f{}()'"\\;/[\]#]/g;
var RE_WORD_END = /[ \n\t\r\f(){}:;@!'"\\\][#]|\/(?=\*)/g;
var RE_BAD_BRACKET = /.[\\/("'\n]/;
var RE_HEX_ESCAPE = /[a-f0-9]/i;

function tokenizer(input, options) {
  if (options === void 0) {
    options = {};
  }

  var css = input.css.valueOf();
  var ignore = options.ignoreErrors;
  var code, next, quote, lines, last, content, escape;
  var nextLine, nextOffset, escaped, escapePos, prev, n, currentToken;
  var length = css.length;
  var offset = -1;
  var line = 1;
  var pos = 0;
  var buffer = [];
  var returned = [];

  function position() {
    return pos;
  }

  function unclosed(what) {
    throw input.error('Unclosed ' + what, line, pos - offset);
  }

  function endOfFile() {
    return returned.length === 0 && pos >= length;
  }

  function nextToken(opts) {
    if (returned.length) return returned.pop();
    if (pos >= length) return;
    var ignoreUnclosed = opts ? opts.ignoreUnclosed : false;
    code = css.charCodeAt(pos);

    if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {
      offset = pos;
      line += 1;
    }

    switch (code) {
      case NEWLINE:
      case SPACE:
      case TAB:
      case CR:
      case FEED:
        next = pos;

        do {
          next += 1;
          code = css.charCodeAt(next);

          if (code === NEWLINE) {
            offset = next;
            line += 1;
          }
        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);

        currentToken = ['space', css.slice(pos, next)];
        pos = next - 1;
        break;

      case OPEN_SQUARE:
      case CLOSE_SQUARE:
      case OPEN_CURLY:
      case CLOSE_CURLY:
      case COLON:
      case SEMICOLON:
      case CLOSE_PARENTHESES:
        var controlChar = String.fromCharCode(code);
        currentToken = [controlChar, controlChar, line, pos - offset];
        break;

      case OPEN_PARENTHESES:
        prev = buffer.length ? buffer.pop()[1] : '';
        n = css.charCodeAt(pos + 1);

        if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {
          next = pos;

          do {
            escaped = false;
            next = css.indexOf(')', next + 1);

            if (next === -1) {
              if (ignore || ignoreUnclosed) {
                next = pos;
                break;
              } else {
                unclosed('bracket');
              }
            }

            escapePos = next;

            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
              escapePos -= 1;
              escaped = !escaped;
            }
          } while (escaped);

          currentToken = ['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
          pos = next;
        } else {
          next = css.indexOf(')', pos + 1);
          content = css.slice(pos, next + 1);

          if (next === -1 || RE_BAD_BRACKET.test(content)) {
            currentToken = ['(', '(', line, pos - offset];
          } else {
            currentToken = ['brackets', content, line, pos - offset, line, next - offset];
            pos = next;
          }
        }

        break;

      case SINGLE_QUOTE:
      case DOUBLE_QUOTE:
        quote = code === SINGLE_QUOTE ? '\'' : '"';
        next = pos;

        do {
          escaped = false;
          next = css.indexOf(quote, next + 1);

          if (next === -1) {
            if (ignore || ignoreUnclosed) {
              next = pos + 1;
              break;
            } else {
              unclosed('string');
            }
          }

          escapePos = next;

          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
            escapePos -= 1;
            escaped = !escaped;
          }
        } while (escaped);

        content = css.slice(pos, next + 1);
        lines = content.split('\n');
        last = lines.length - 1;

        if (last > 0) {
          nextLine = line + last;
          nextOffset = next - lines[last].length;
        } else {
          nextLine = line;
          nextOffset = offset;
        }

        currentToken = ['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset];
        offset = nextOffset;
        line = nextLine;
        pos = next;
        break;

      case AT:
        RE_AT_END.lastIndex = pos + 1;
        RE_AT_END.test(css);

        if (RE_AT_END.lastIndex === 0) {
          next = css.length - 1;
        } else {
          next = RE_AT_END.lastIndex - 2;
        }

        currentToken = ['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
        pos = next;
        break;

      case BACKSLASH:
        next = pos;
        escape = true;

        while (css.charCodeAt(next + 1) === BACKSLASH) {
          next += 1;
          escape = !escape;
        }

        code = css.charCodeAt(next + 1);

        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {
          next += 1;

          if (RE_HEX_ESCAPE.test(css.charAt(next))) {
            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
              next += 1;
            }

            if (css.charCodeAt(next + 1) === SPACE) {
              next += 1;
            }
          }
        }

        currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
        pos = next;
        break;

      default:
        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
          next = css.indexOf('*/', pos + 2) + 1;

          if (next === 0) {
            if (ignore || ignoreUnclosed) {
              next = css.length;
            } else {
              unclosed('comment');
            }
          }

          content = css.slice(pos, next + 1);
          lines = content.split('\n');
          last = lines.length - 1;

          if (last > 0) {
            nextLine = line + last;
            nextOffset = next - lines[last].length;
          } else {
            nextLine = line;
            nextOffset = offset;
          }

          currentToken = ['comment', content, line, pos - offset, nextLine, next - nextOffset];
          offset = nextOffset;
          line = nextLine;
          pos = next;
        } else {
          RE_WORD_END.lastIndex = pos + 1;
          RE_WORD_END.test(css);

          if (RE_WORD_END.lastIndex === 0) {
            next = css.length - 1;
          } else {
            next = RE_WORD_END.lastIndex - 2;
          }

          currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
          buffer.push(currentToken);
          pos = next;
        }

        break;
    }

    pos++;
    return currentToken;
  }

  function back(token) {
    returned.push(token);
  }

  return {
    back: back,
    nextToken: nextToken,
    endOfFile: endOfFile,
    position: position
  };
}

module.exports = exports.default;

});

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
var encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
var decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};

var base64 = {
	encode: encode,
	decode: decode
};

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */



// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
var encode$1 = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
var decode$1 = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};

var base64Vlq = {
	encode: encode$1,
	decode: decode$1
};

var util = createCommonjsModule(function (module, exports) {
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port;
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 === null) {
    return 1; // aStr2 !== null
  }

  if (aStr2 === null) {
    return -1; // aStr1 !== null
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

/**
 * Strip any JSON XSSI avoidance prefix from the string (as documented
 * in the source maps specification), and then parse the string as
 * JSON.
 */
function parseSourceMapInput(str) {
  return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
}
exports.parseSourceMapInput = parseSourceMapInput;

/**
 * Compute the URL of a source given the the source root, the source's
 * URL, and the source map's URL.
 */
function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
  sourceURL = sourceURL || '';

  if (sourceRoot) {
    // This follows what Chrome does.
    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {
      sourceRoot += '/';
    }
    // The spec says:
    //   Line 4: An optional source root, useful for relocating source
    //   files on a server or removing repeated values in the
    //   “sources” entry.  This value is prepended to the individual
    //   entries in the “source” field.
    sourceURL = sourceRoot + sourceURL;
  }

  // Historically, SourceMapConsumer did not take the sourceMapURL as
  // a parameter.  This mode is still somewhat supported, which is why
  // this code block is conditional.  However, it's preferable to pass
  // the source map URL to SourceMapConsumer, so that this function
  // can implement the source URL resolution algorithm as outlined in
  // the spec.  This block is basically the equivalent of:
  //    new URL(sourceURL, sourceMapURL).toString()
  // ... except it avoids using URL, which wasn't available in the
  // older releases of node still supported by this library.
  //
  // The spec says:
  //   If the sources are not absolute URLs after prepending of the
  //   “sourceRoot”, the sources are resolved relative to the
  //   SourceMap (like resolving script src in a html document).
  if (sourceMapURL) {
    var parsed = urlParse(sourceMapURL);
    if (!parsed) {
      throw new Error("sourceMapURL could not be parsed");
    }
    if (parsed.path) {
      // Strip the last path component, but keep the "/".
      var index = parsed.path.lastIndexOf('/');
      if (index >= 0) {
        parsed.path = parsed.path.substring(0, index + 1);
      }
    }
    sourceURL = join(urlGenerate(parsed), sourceURL);
  }

  return normalize(sourceURL);
}
exports.computeSourceURL = computeSourceURL;
});

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */


var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

var ArraySet_1 = ArraySet;

var arraySet = {
	ArraySet: ArraySet_1
};

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */



/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

var MappingList_1 = MappingList;

var mappingList = {
	MappingList: MappingList_1
};

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */



var ArraySet$1 = arraySet.ArraySet;
var MappingList$1 = mappingList.MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet$1();
  this._names = new ArraySet$1();
  this._mappings = new MappingList$1();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var sourceRelative = sourceFile;
      if (sourceRoot !== null) {
        sourceRelative = util.relative(sourceRoot, sourceFile);
      }

      if (!generator._sources.has(sourceRelative)) {
        generator._sources.add(sourceRelative);
      }

      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet$1();
    var newNames = new ArraySet$1();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source);
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = '';

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64Vlq.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64Vlq.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64Vlq.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64Vlq.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64Vlq.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

var SourceMapGenerator_1 = SourceMapGenerator;

var sourceMapGenerator = {
	SourceMapGenerator: SourceMapGenerator_1
};

var binarySearch = createCommonjsModule(function (module, exports) {
/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};
});

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
var quickSort_1 = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};

var quickSort = {
	quickSort: quickSort_1
};

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */



var ArraySet$2 = arraySet.ArraySet;

var quickSort$1 = quickSort.quickSort;

function SourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)
    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
};

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number is 1-based.
 *   - column: Optional. the column number in the original source.
 *    The column number is 0-based.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *    line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *    The column number is 0-based.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    needle.source = this._findSourceIndex(needle.source);
    if (needle.source < 0) {
      return [];
    }

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

var SourceMapConsumer_1 = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The first parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  if (sourceRoot) {
    sourceRoot = util.normalize(sourceRoot);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet$2.fromArray(names.map(String), true);
  this._sources = ArraySet$2.fromArray(sources, true);

  this._absoluteSources = this._sources.toArray().map(function (s) {
    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
  });

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this._sourceMapURL = aSourceMapURL;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Utility function to find the index of a source.  Returns -1 if not
 * found.
 */
BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
  var relativeSource = aSource;
  if (this.sourceRoot != null) {
    relativeSource = util.relative(this.sourceRoot, relativeSource);
  }

  if (this._sources.has(relativeSource)) {
    return this._sources.indexOf(relativeSource);
  }

  // Maybe aSource is an absolute URL as returned by |sources|.  In
  // this case we can't simply undo the transform.
  var i;
  for (i = 0; i < this._absoluteSources.length; ++i) {
    if (this._absoluteSources[i] == aSource) {
      return i;
    }
  }

  return -1;
};

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @param String aSourceMapURL
 *        The URL at which the source map can be found (optional)
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet$2.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet$2.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;
    smc._sourceMapURL = aSourceMapURL;
    smc._absoluteSources = smc._sources.toArray().map(function (s) {
      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
    });

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort$1(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._absoluteSources.slice();
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64Vlq.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort$1(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort$1(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    var index = this._findSourceIndex(aSource);
    if (index >= 0) {
      return this.sourcesContent[index];
    }

    var relativeSource = aSource;
    if (this.sourceRoot != null) {
      relativeSource = util.relative(this.sourceRoot, relativeSource);
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + relativeSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + relativeSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    source = this._findSourceIndex(source);
    if (source < 0) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

var BasicSourceMapConsumer_1 = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The first parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet$2();
  this._names = new ArraySet$2();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based. 
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = null;
        if (mapping.name) {
          name = section.consumer._names.at(mapping.name);
          this._names.add(name);
          name = this._names.indexOf(name);
        }

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort$1(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort$1(this.__originalMappings, util.compareByOriginalPositions);
  };

var IndexedSourceMapConsumer_1 = IndexedSourceMapConsumer;

var sourceMapConsumer = {
	SourceMapConsumer: SourceMapConsumer_1,
	BasicSourceMapConsumer: BasicSourceMapConsumer_1,
	IndexedSourceMapConsumer: IndexedSourceMapConsumer_1
};

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator$1 = sourceMapGenerator.SourceMapGenerator;


// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex] || '';
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex] || '';
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator$1(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

var SourceNode_1 = SourceNode;

var sourceNode = {
	SourceNode: SourceNode_1
};

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
var SourceMapGenerator$2 = sourceMapGenerator.SourceMapGenerator;
var SourceMapConsumer$1 = sourceMapConsumer.SourceMapConsumer;
var SourceNode$1 = sourceNode.SourceNode;

var sourceMap = {
	SourceMapGenerator: SourceMapGenerator$2,
	SourceMapConsumer: SourceMapConsumer$1,
	SourceNode: SourceNode$1
};

var previousMap = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _sourceMap = _interopRequireDefault(sourceMap);

var _path = _interopRequireDefault(path);

var _fs = _interopRequireDefault(fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromBase64(str) {
  if (Buffer) {
    return Buffer.from(str, 'base64').toString();
  } else {
    return window.atob(str);
  }
}
/**
 * Source map information from input CSS.
 * For example, source map after Sass compiler.
 *
 * This class will automatically find source map in input CSS or in file system
 * near input file (according `from` option).
 *
 * @example
 * const root = postcss.parse(css, { from: 'a.sass.css' })
 * root.input.map //=> PreviousMap
 */


var PreviousMap =
/*#__PURE__*/
function () {
  /**
   * @param {string}         css    Input CSS source.
   * @param {processOptions} [opts] {@link Processor#process} options.
   */
  function PreviousMap(css, opts) {
    this.loadAnnotation(css);
    /**
     * Was source map inlined by data-uri to input CSS.
     *
     * @type {boolean}
     */

    this.inline = this.startWith(this.annotation, 'data:');
    var prev = opts.map ? opts.map.prev : undefined;
    var text = this.loadMap(opts.from, prev);
    if (text) this.text = text;
  }
  /**
   * Create a instance of `SourceMapGenerator` class
   * from the `source-map` library to work with source map information.
   *
   * It is lazy method, so it will create object only on first call
   * and then it will use cache.
   *
   * @return {SourceMapGenerator} Object with source map information.
   */


  var _proto = PreviousMap.prototype;

  _proto.consumer = function consumer() {
    if (!this.consumerCache) {
      this.consumerCache = new _sourceMap.default.SourceMapConsumer(this.text);
    }

    return this.consumerCache;
  }
  /**
   * Does source map contains `sourcesContent` with input source text.
   *
   * @return {boolean} Is `sourcesContent` present.
   */
  ;

  _proto.withContent = function withContent() {
    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
  };

  _proto.startWith = function startWith(string, start) {
    if (!string) return false;
    return string.substr(0, start.length) === start;
  };

  _proto.getAnnotationURL = function getAnnotationURL(sourceMapString) {
    return sourceMapString.match(/\/\*\s*# sourceMappingURL=(.*)\s*\*\//)[1].trim();
  };

  _proto.loadAnnotation = function loadAnnotation(css) {
    var annotations = css.match(/\/\*\s*# sourceMappingURL=(.*)\s*\*\//mg);

    if (annotations && annotations.length > 0) {
      // Locate the last sourceMappingURL to avoid picking up
      // sourceMappingURLs from comments, strings, etc.
      var lastAnnotation = annotations[annotations.length - 1];

      if (lastAnnotation) {
        this.annotation = this.getAnnotationURL(lastAnnotation);
      }
    }
  };

  _proto.decodeInline = function decodeInline(text) {
    var baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/;
    var baseUri = /^data:application\/json;base64,/;
    var uri = 'data:application/json,';

    if (this.startWith(text, uri)) {
      return decodeURIComponent(text.substr(uri.length));
    }

    if (baseCharsetUri.test(text) || baseUri.test(text)) {
      return fromBase64(text.substr(RegExp.lastMatch.length));
    }

    var encoding = text.match(/data:application\/json;([^,]+),/)[1];
    throw new Error('Unsupported source map encoding ' + encoding);
  };

  _proto.loadMap = function loadMap(file, prev) {
    if (prev === false) return false;

    if (prev) {
      if (typeof prev === 'string') {
        return prev;
      } else if (typeof prev === 'function') {
        var prevPath = prev(file);

        if (prevPath && _fs.default.existsSync && _fs.default.existsSync(prevPath)) {
          return _fs.default.readFileSync(prevPath, 'utf-8').toString().trim();
        } else {
          throw new Error('Unable to load previous source map: ' + prevPath.toString());
        }
      } else if (prev instanceof _sourceMap.default.SourceMapConsumer) {
        return _sourceMap.default.SourceMapGenerator.fromSourceMap(prev).toString();
      } else if (prev instanceof _sourceMap.default.SourceMapGenerator) {
        return prev.toString();
      } else if (this.isMap(prev)) {
        return JSON.stringify(prev);
      } else {
        throw new Error('Unsupported previous source map format: ' + prev.toString());
      }
    } else if (this.inline) {
      return this.decodeInline(this.annotation);
    } else if (this.annotation) {
      var map = this.annotation;
      if (file) map = _path.default.join(_path.default.dirname(file), map);
      this.root = _path.default.dirname(map);

      if (_fs.default.existsSync && _fs.default.existsSync(map)) {
        return _fs.default.readFileSync(map, 'utf-8').toString().trim();
      } else {
        return false;
      }
    }
  };

  _proto.isMap = function isMap(map) {
    if (typeof map !== 'object') return false;
    return typeof map.mappings === 'string' || typeof map._mappings === 'string';
  };

  return PreviousMap;
}();

var _default = PreviousMap;
exports.default = _default;
module.exports = exports.default;

});

var input = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _path = _interopRequireDefault(path);

var _cssSyntaxError = _interopRequireDefault(cssSyntaxError);

var _previousMap = _interopRequireDefault(previousMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var sequence = 0;
/**
 * Represents the source CSS.
 *
 * @example
 * const root  = postcss.parse(css, { from: file })
 * const input = root.source.input
 */

var Input =
/*#__PURE__*/
function () {
  /**
   * @param {string} css    Input CSS source.
   * @param {object} [opts] {@link Processor#process} options.
   */
  function Input(css, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {
      throw new Error("PostCSS received " + css + " instead of CSS string");
    }
    /**
     * Input CSS source
     *
     * @type {string}
     *
     * @example
     * const input = postcss.parse('a{}', { from: file }).input
     * input.css //=> "a{}"
     */


    this.css = css.toString();

    if (this.css[0] === "\uFEFF" || this.css[0] === "\uFFFE") {
      this.hasBOM = true;
      this.css = this.css.slice(1);
    } else {
      this.hasBOM = false;
    }

    if (opts.from) {
      if (/^\w+:\/\//.test(opts.from) || _path.default.isAbsolute(opts.from)) {
        /**
         * The absolute path to the CSS source file defined
         * with the `from` option.
         *
         * @type {string}
         *
         * @example
         * const root = postcss.parse(css, { from: 'a.css' })
         * root.source.input.file //=> '/home/ai/a.css'
         */
        this.file = opts.from;
      } else {
        this.file = _path.default.resolve(opts.from);
      }
    }

    var map = new _previousMap.default(this.css, opts);

    if (map.text) {
      /**
       * The input source map passed from a compilation step before PostCSS
       * (for example, from Sass compiler).
       *
       * @type {PreviousMap}
       *
       * @example
       * root.source.input.map.consumer().sources //=> ['a.sass']
       */
      this.map = map;
      var file = map.consumer().file;
      if (!this.file && file) this.file = this.mapResolve(file);
    }

    if (!this.file) {
      sequence += 1;
      /**
       * The unique ID of the CSS source. It will be created if `from` option
       * is not provided (because PostCSS does not know the file path).
       *
       * @type {string}
       *
       * @example
       * const root = postcss.parse(css)
       * root.source.input.file //=> undefined
       * root.source.input.id   //=> "<input css 1>"
       */

      this.id = '<input css ' + sequence + '>';
    }

    if (this.map) this.map.file = this.from;
  }

  var _proto = Input.prototype;

  _proto.error = function error(message, line, column, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var result;
    var origin = this.origin(line, column);

    if (origin) {
      result = new _cssSyntaxError.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);
    } else {
      result = new _cssSyntaxError.default(message, line, column, this.css, this.file, opts.plugin);
    }

    result.input = {
      line: line,
      column: column,
      source: this.css
    };
    if (this.file) result.input.file = this.file;
    return result;
  }
  /**
   * Reads the input source map and returns a symbol position
   * in the input source (e.g., in a Sass file that was compiled
   * to CSS before being passed to PostCSS).
   *
   * @param {number} line   Line in input CSS.
   * @param {number} column Column in input CSS.
   *
   * @return {filePosition} Position in input source.
   *
   * @example
   * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }
   */
  ;

  _proto.origin = function origin(line, column) {
    if (!this.map) return false;
    var consumer = this.map.consumer();
    var from = consumer.originalPositionFor({
      line: line,
      column: column
    });
    if (!from.source) return false;
    var result = {
      file: this.mapResolve(from.source),
      line: from.line,
      column: from.column
    };
    var source = consumer.sourceContentFor(from.source);
    if (source) result.source = source;
    return result;
  };

  _proto.mapResolve = function mapResolve(file) {
    if (/^\w+:\/\//.test(file)) {
      return file;
    }

    return _path.default.resolve(this.map.consumer().sourceRoot || '.', file);
  }
  /**
   * The CSS source identifier. Contains {@link Input#file} if the user
   * set the `from` option, or {@link Input#id} if they did not.
   *
   * @type {string}
   *
   * @example
   * const root = postcss.parse(css, { from: 'a.css' })
   * root.source.input.from //=> "/home/ai/a.css"
   *
   * const root = postcss.parse(css)
   * root.source.input.from //=> "<input css 1>"
   */
  ;

  _createClass(Input, [{
    key: "from",
    get: function get() {
      return this.file || this.id;
    }
  }]);

  return Input;
}();

var _default = Input;
/**
 * @typedef  {object} filePosition
 * @property {string} file   Path to file.
 * @property {number} line   Source line in file.
 * @property {number} column Source column in file.
 */

exports.default = _default;
module.exports = exports.default;

});

var terminalHighlight_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _chalk = _interopRequireDefault(chalk);

var _tokenize = _interopRequireDefault(tokenize);

var _input = _interopRequireDefault(input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HIGHLIGHT_THEME = {
  'brackets': _chalk.default.cyan,
  'at-word': _chalk.default.cyan,
  'comment': _chalk.default.gray,
  'string': _chalk.default.green,
  'class': _chalk.default.yellow,
  'call': _chalk.default.cyan,
  'hash': _chalk.default.magenta,
  '(': _chalk.default.cyan,
  ')': _chalk.default.cyan,
  '{': _chalk.default.yellow,
  '}': _chalk.default.yellow,
  '[': _chalk.default.yellow,
  ']': _chalk.default.yellow,
  ':': _chalk.default.yellow,
  ';': _chalk.default.yellow
};

function getTokenType(_ref, processor) {
  var type = _ref[0],
      value = _ref[1];

  if (type === 'word') {
    if (value[0] === '.') {
      return 'class';
    }

    if (value[0] === '#') {
      return 'hash';
    }
  }

  if (!processor.endOfFile()) {
    var next = processor.nextToken();
    processor.back(next);
    if (next[0] === 'brackets' || next[0] === '(') return 'call';
  }

  return type;
}

function terminalHighlight(css) {
  var processor = (0, _tokenize.default)(new _input.default(css), {
    ignoreErrors: true
  });
  var result = '';

  var _loop = function _loop() {
    var token = processor.nextToken();
    var color = HIGHLIGHT_THEME[getTokenType(token, processor)];

    if (color) {
      result += token[1].split(/\r?\n/).map(function (i) {
        return color(i);
      }).join('\n');
    } else {
      result += token[1];
    }
  };

  while (!processor.endOfFile()) {
    _loop();
  }

  return result;
}

var _default = terminalHighlight;
exports.default = _default;
module.exports = exports.default;

});

var cssSyntaxError = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _supportsColor = _interopRequireDefault(supportsColor_1);

var _chalk = _interopRequireDefault(chalk);

var _terminalHighlight = _interopRequireDefault(terminalHighlight_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * The CSS parser throws this error for broken CSS.
 *
 * Custom parsers can throw this error for broken custom syntax using
 * the {@link Node#error} method.
 *
 * PostCSS will use the input source map to detect the original error location.
 * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,
 * PostCSS will show the original position in the Sass file.
 *
 * If you need the position in the PostCSS input
 * (e.g., to debug the previous compiler), use `error.input.file`.
 *
 * @example
 * // Catching and checking syntax error
 * try {
 *   postcss.parse('a{')
 * } catch (error) {
 *   if (error.name === 'CssSyntaxError') {
 *     error //=> CssSyntaxError
 *   }
 * }
 *
 * @example
 * // Raising error from plugin
 * throw node.error('Unknown variable', { plugin: 'postcss-vars' })
 */
var CssSyntaxError =
/*#__PURE__*/
function (_Error) {
  _inheritsLoose(CssSyntaxError, _Error);

  /**
   * @param {string} message  Error message.
   * @param {number} [line]   Source line of the error.
   * @param {number} [column] Source column of the error.
   * @param {string} [source] Source code of the broken file.
   * @param {string} [file]   Absolute path to the broken file.
   * @param {string} [plugin] PostCSS plugin name, if error came from plugin.
   */
  function CssSyntaxError(message, line, column, source, file, plugin) {
    var _this;

    _this = _Error.call(this, message) || this;
    /**
     * Always equal to `'CssSyntaxError'`. You should always check error type
     * by `error.name === 'CssSyntaxError'`
     * instead of `error instanceof CssSyntaxError`,
     * because npm could have several PostCSS versions.
     *
     * @type {string}
     *
     * @example
     * if (error.name === 'CssSyntaxError') {
     *   error //=> CssSyntaxError
     * }
     */

    _this.name = 'CssSyntaxError';
    /**
     * Error message.
     *
     * @type {string}
     *
     * @example
     * error.message //=> 'Unclosed block'
     */

    _this.reason = message;

    if (file) {
      /**
       * Absolute path to the broken file.
       *
       * @type {string}
       *
       * @example
       * error.file       //=> 'a.sass'
       * error.input.file //=> 'a.css'
       */
      _this.file = file;
    }

    if (source) {
      /**
       * Source code of the broken file.
       *
       * @type {string}
       *
       * @example
       * error.source       //=> 'a { b {} }'
       * error.input.column //=> 'a b { }'
       */
      _this.source = source;
    }

    if (plugin) {
      /**
       * Plugin name, if error came from plugin.
       *
       * @type {string}
       *
       * @example
       * error.plugin //=> 'postcss-vars'
       */
      _this.plugin = plugin;
    }

    if (typeof line !== 'undefined' && typeof column !== 'undefined') {
      /**
       * Source line of the error.
       *
       * @type {number}
       *
       * @example
       * error.line       //=> 2
       * error.input.line //=> 4
       */
      _this.line = line;
      /**
       * Source column of the error.
       *
       * @type {number}
       *
       * @example
       * error.column       //=> 1
       * error.input.column //=> 4
       */

      _this.column = column;
    }

    _this.setMessage();

    if (Error.captureStackTrace) {
      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);
    }

    return _this;
  }

  var _proto = CssSyntaxError.prototype;

  _proto.setMessage = function setMessage() {
    /**
     * Full error text in the GNU error format
     * with plugin, file, line and column.
     *
     * @type {string}
     *
     * @example
     * error.message //=> 'a.css:1:1: Unclosed block'
     */
    this.message = this.plugin ? this.plugin + ': ' : '';
    this.message += this.file ? this.file : '<css input>';

    if (typeof this.line !== 'undefined') {
      this.message += ':' + this.line + ':' + this.column;
    }

    this.message += ': ' + this.reason;
  }
  /**
   * Returns a few lines of CSS source that caused the error.
   *
   * If the CSS has an input source map without `sourceContent`,
   * this method will return an empty string.
   *
   * @param {boolean} [color] Whether arrow will be colored red by terminal
   *                          color codes. By default, PostCSS will detect
   *                          color support by `process.stdout.isTTY`
   *                          and `process.env.NODE_DISABLE_COLORS`.
   *
   * @example
   * error.showSourceCode() //=> "  4 | }
   *                        //      5 | a {
   *                        //    > 6 |   bad
   *                        //        |   ^
   *                        //      7 | }
   *                        //      8 | b {"
   *
   * @return {string} Few lines of CSS source that caused the error.
   */
  ;

  _proto.showSourceCode = function showSourceCode(color) {
    var _this2 = this;

    if (!this.source) return '';
    var css = this.source;

    if (_terminalHighlight.default) {
      if (typeof color === 'undefined') color = _supportsColor.default.stdout;
      if (color) css = (0, _terminalHighlight.default)(css);
    }

    var lines = css.split(/\r?\n/);
    var start = Math.max(this.line - 3, 0);
    var end = Math.min(this.line + 2, lines.length);
    var maxWidth = String(end).length;

    function mark(text) {
      if (color && _chalk.default.red) {
        return _chalk.default.red.bold(text);
      }

      return text;
    }

    function aside(text) {
      if (color && _chalk.default.gray) {
        return _chalk.default.gray(text);
      }

      return text;
    }

    return lines.slice(start, end).map(function (line, index) {
      var number = start + 1 + index;
      var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';

      if (number === _this2.line) {
        var spacing = aside(gutter.replace(/\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\t]/g, ' ');
        return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^');
      }

      return ' ' + aside(gutter) + line;
    }).join('\n');
  }
  /**
   * Returns error position, message and source code of the broken part.
   *
   * @example
   * error.toString() //=> "CssSyntaxError: app.css:1:1: Unclosed block
   *                  //    > 1 | a {
   *                  //        | ^"
   *
   * @return {string} Error position, message and source code.
   */
  ;

  _proto.toString = function toString() {
    var code = this.showSourceCode();

    if (code) {
      code = '\n\n' + code + '\n';
    }

    return this.name + ': ' + this.message + code;
  }
  /**
   * @memberof CssSyntaxError#
   * @member {Input} input Input object with PostCSS internal information
   *                       about input file. If input has source map
   *                       from previous tool, PostCSS will use origin
   *                       (for example, Sass) source. You can use this
   *                       object to get PostCSS input source.
   *
   * @example
   * error.input.file //=> 'a.css'
   * error.file       //=> 'a.sass'
   */
  ;

  return CssSyntaxError;
}(_wrapNativeSuper(Error));

var _default = CssSyntaxError;
exports.default = _default;
module.exports = exports.default;

});

var stringifier = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;
var DEFAULT_RAW = {
  colon: ': ',
  indent: '    ',
  beforeDecl: '\n',
  beforeRule: '\n',
  beforeOpen: ' ',
  beforeClose: '\n',
  beforeComment: '\n',
  after: '\n',
  emptyBody: '',
  commentLeft: ' ',
  commentRight: ' ',
  semicolon: false
};

function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}

var Stringifier =
/*#__PURE__*/
function () {
  function Stringifier(builder) {
    this.builder = builder;
  }

  var _proto = Stringifier.prototype;

  _proto.stringify = function stringify(node, semicolon) {
    this[node.type](node, semicolon);
  };

  _proto.root = function root(node) {
    this.body(node);
    if (node.raws.after) this.builder(node.raws.after);
  };

  _proto.comment = function comment(node) {
    var left = this.raw(node, 'left', 'commentLeft');
    var right = this.raw(node, 'right', 'commentRight');
    this.builder('/*' + left + node.text + right + '*/', node);
  };

  _proto.decl = function decl(node, semicolon) {
    var between = this.raw(node, 'between', 'colon');
    var string = node.prop + between + this.rawValue(node, 'value');

    if (node.important) {
      string += node.raws.important || ' !important';
    }

    if (semicolon) string += ';';
    this.builder(string, node);
  };

  _proto.rule = function rule(node) {
    this.block(node, this.rawValue(node, 'selector'));

    if (node.raws.ownSemicolon) {
      this.builder(node.raws.ownSemicolon, node, 'end');
    }
  };

  _proto.atrule = function atrule(node, semicolon) {
    var name = '@' + node.name;
    var params = node.params ? this.rawValue(node, 'params') : '';

    if (typeof node.raws.afterName !== 'undefined') {
      name += node.raws.afterName;
    } else if (params) {
      name += ' ';
    }

    if (node.nodes) {
      this.block(node, name + params);
    } else {
      var end = (node.raws.between || '') + (semicolon ? ';' : '');
      this.builder(name + params + end, node);
    }
  };

  _proto.body = function body(node) {
    var last = node.nodes.length - 1;

    while (last > 0) {
      if (node.nodes[last].type !== 'comment') break;
      last -= 1;
    }

    var semicolon = this.raw(node, 'semicolon');

    for (var i = 0; i < node.nodes.length; i++) {
      var child = node.nodes[i];
      var before = this.raw(child, 'before');
      if (before) this.builder(before);
      this.stringify(child, last !== i || semicolon);
    }
  };

  _proto.block = function block(node, start) {
    var between = this.raw(node, 'between', 'beforeOpen');
    this.builder(start + between + '{', node, 'start');
    var after;

    if (node.nodes && node.nodes.length) {
      this.body(node);
      after = this.raw(node, 'after');
    } else {
      after = this.raw(node, 'after', 'emptyBody');
    }

    if (after) this.builder(after);
    this.builder('}', node, 'end');
  };

  _proto.raw = function raw(node, own, detect) {
    var value;
    if (!detect) detect = own; // Already had

    if (own) {
      value = node.raws[own];
      if (typeof value !== 'undefined') return value;
    }

    var parent = node.parent; // Hack for first rule in CSS

    if (detect === 'before') {
      if (!parent || parent.type === 'root' && parent.first === node) {
        return '';
      }
    } // Floating child without parent


    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes

    var root = node.root();
    if (!root.rawCache) root.rawCache = {};

    if (typeof root.rawCache[detect] !== 'undefined') {
      return root.rawCache[detect];
    }

    if (detect === 'before' || detect === 'after') {
      return this.beforeAfter(node, detect);
    } else {
      var method = 'raw' + capitalize(detect);

      if (this[method]) {
        value = this[method](root, node);
      } else {
        root.walk(function (i) {
          value = i.raws[own];
          if (typeof value !== 'undefined') return false;
        });
      }
    }

    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];
    root.rawCache[detect] = value;
    return value;
  };

  _proto.rawSemicolon = function rawSemicolon(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && i.nodes.length && i.last.type === 'decl') {
        value = i.raws.semicolon;
        if (typeof value !== 'undefined') return false;
      }
    });
    return value;
  };

  _proto.rawEmptyBody = function rawEmptyBody(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && i.nodes.length === 0) {
        value = i.raws.after;
        if (typeof value !== 'undefined') return false;
      }
    });
    return value;
  };

  _proto.rawIndent = function rawIndent(root) {
    if (root.raws.indent) return root.raws.indent;
    var value;
    root.walk(function (i) {
      var p = i.parent;

      if (p && p !== root && p.parent && p.parent === root) {
        if (typeof i.raws.before !== 'undefined') {
          var parts = i.raws.before.split('\n');
          value = parts[parts.length - 1];
          value = value.replace(/[^\s]/g, '');
          return false;
        }
      }
    });
    return value;
  };

  _proto.rawBeforeComment = function rawBeforeComment(root, node) {
    var value;
    root.walkComments(function (i) {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before;

        if (value.indexOf('\n') !== -1) {
          value = value.replace(/[^\n]+$/, '');
        }

        return false;
      }
    });

    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeDecl');
    } else if (value) {
      value = value.replace(/[^\s]/g, '');
    }

    return value;
  };

  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {
    var value;
    root.walkDecls(function (i) {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before;

        if (value.indexOf('\n') !== -1) {
          value = value.replace(/[^\n]+$/, '');
        }

        return false;
      }
    });

    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeRule');
    } else if (value) {
      value = value.replace(/[^\s]/g, '');
    }

    return value;
  };

  _proto.rawBeforeRule = function rawBeforeRule(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && (i.parent !== root || root.first !== i)) {
        if (typeof i.raws.before !== 'undefined') {
          value = i.raws.before;

          if (value.indexOf('\n') !== -1) {
            value = value.replace(/[^\n]+$/, '');
          }

          return false;
        }
      }
    });
    if (value) value = value.replace(/[^\s]/g, '');
    return value;
  };

  _proto.rawBeforeClose = function rawBeforeClose(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && i.nodes.length > 0) {
        if (typeof i.raws.after !== 'undefined') {
          value = i.raws.after;

          if (value.indexOf('\n') !== -1) {
            value = value.replace(/[^\n]+$/, '');
          }

          return false;
        }
      }
    });
    if (value) value = value.replace(/[^\s]/g, '');
    return value;
  };

  _proto.rawBeforeOpen = function rawBeforeOpen(root) {
    var value;
    root.walk(function (i) {
      if (i.type !== 'decl') {
        value = i.raws.between;
        if (typeof value !== 'undefined') return false;
      }
    });
    return value;
  };

  _proto.rawColon = function rawColon(root) {
    var value;
    root.walkDecls(function (i) {
      if (typeof i.raws.between !== 'undefined') {
        value = i.raws.between.replace(/[^\s:]/g, '');
        return false;
      }
    });
    return value;
  };

  _proto.beforeAfter = function beforeAfter(node, detect) {
    var value;

    if (node.type === 'decl') {
      value = this.raw(node, null, 'beforeDecl');
    } else if (node.type === 'comment') {
      value = this.raw(node, null, 'beforeComment');
    } else if (detect === 'before') {
      value = this.raw(node, null, 'beforeRule');
    } else {
      value = this.raw(node, null, 'beforeClose');
    }

    var buf = node.parent;
    var depth = 0;

    while (buf && buf.type !== 'root') {
      depth += 1;
      buf = buf.parent;
    }

    if (value.indexOf('\n') !== -1) {
      var indent = this.raw(node, null, 'indent');

      if (indent.length) {
        for (var step = 0; step < depth; step++) {
          value += indent;
        }
      }
    }

    return value;
  };

  _proto.rawValue = function rawValue(node, prop) {
    var value = node[prop];
    var raw = node.raws[prop];

    if (raw && raw.value === value) {
      return raw.raw;
    }

    return value;
  };

  return Stringifier;
}();

var _default = Stringifier;
exports.default = _default;
module.exports = exports.default;

});

var stringify_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _stringifier = _interopRequireDefault(stringifier);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringify(node, builder) {
  var str = new _stringifier.default(builder);
  str.stringify(node);
}

var _default = stringify;
exports.default = _default;
module.exports = exports.default;

});

var node$1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _cssSyntaxError = _interopRequireDefault(cssSyntaxError);

var _stringifier = _interopRequireDefault(stringifier);

var _stringify = _interopRequireDefault(stringify_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cloneNode(obj, parent) {
  var cloned = new obj.constructor();

  for (var i in obj) {
    if (!obj.hasOwnProperty(i)) continue;
    var value = obj[i];
    var type = typeof value;

    if (i === 'parent' && type === 'object') {
      if (parent) cloned[i] = parent;
    } else if (i === 'source') {
      cloned[i] = value;
    } else if (value instanceof Array) {
      cloned[i] = value.map(function (j) {
        return cloneNode(j, cloned);
      });
    } else {
      if (type === 'object' && value !== null) value = cloneNode(value);
      cloned[i] = value;
    }
  }

  return cloned;
}
/**
 * All node classes inherit the following common methods.
 *
 * @abstract
 */


var Node =
/*#__PURE__*/
function () {
  /**
   * @param {object} [defaults] Value for node properties.
   */
  function Node(defaults) {
    if (defaults === void 0) {
      defaults = {};
    }

    this.raws = {};

    if (process.env.NODE_ENV !== 'production') {
      if (typeof defaults !== 'object' && typeof defaults !== 'undefined') {
        throw new Error('PostCSS nodes constructor accepts object, not ' + JSON.stringify(defaults));
      }
    }

    for (var name in defaults) {
      this[name] = defaults[name];
    }
  }
  /**
   * Returns a `CssSyntaxError` instance containing the original position
   * of the node in the source, showing line and column numbers and also
   * a small excerpt to facilitate debugging.
   *
   * If present, an input source map will be used to get the original position
   * of the source, even from a previous compilation step
   * (e.g., from Sass compilation).
   *
   * This method produces very useful error messages.
   *
   * @param {string} message     Error description.
   * @param {object} [opts]      Options.
   * @param {string} opts.plugin Plugin name that created this error.
   *                             PostCSS will set it automatically.
   * @param {string} opts.word   A word inside a node’s string that should
   *                             be highlighted as the source of the error.
   * @param {number} opts.index  An index inside a node’s string that should
   *                             be highlighted as the source of the error.
   *
   * @return {CssSyntaxError} Error object to throw it.
   *
   * @example
   * if (!variables[name]) {
   *   throw decl.error('Unknown variable ' + name, { word: name })
   *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black
   *   //   color: $black
   *   // a
   *   //          ^
   *   //   background: white
   * }
   */


  var _proto = Node.prototype;

  _proto.error = function error(message, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (this.source) {
      var pos = this.positionBy(opts);
      return this.source.input.error(message, pos.line, pos.column, opts);
    }

    return new _cssSyntaxError.default(message);
  }
  /**
   * This method is provided as a convenience wrapper for {@link Result#warn}.
   *
   * @param {Result} result      The {@link Result} instance
   *                             that will receive the warning.
   * @param {string} text        Warning message.
   * @param {object} [opts]      Options
   * @param {string} opts.plugin Plugin name that created this warning.
   *                             PostCSS will set it automatically.
   * @param {string} opts.word   A word inside a node’s string that should
   *                             be highlighted as the source of the warning.
   * @param {number} opts.index  An index inside a node’s string that should
   *                             be highlighted as the source of the warning.
   *
   * @return {Warning} Created warning object.
   *
   * @example
   * const plugin = postcss.plugin('postcss-deprecated', () => {
   *   return (root, result) => {
   *     root.walkDecls('bad', decl => {
   *       decl.warn(result, 'Deprecated property bad')
   *     })
   *   }
   * })
   */
  ;

  _proto.warn = function warn(result, text, opts) {
    var data = {
      node: this
    };

    for (var i in opts) {
      data[i] = opts[i];
    }

    return result.warn(text, data);
  }
  /**
   * Removes the node from its parent and cleans the parent properties
   * from the node and its children.
   *
   * @example
   * if (decl.prop.match(/^-webkit-/)) {
   *   decl.remove()
   * }
   *
   * @return {Node} Node to make calls chain.
   */
  ;

  _proto.remove = function remove() {
    if (this.parent) {
      this.parent.removeChild(this);
    }

    this.parent = undefined;
    return this;
  }
  /**
   * Returns a CSS string representing the node.
   *
   * @param {stringifier|syntax} [stringifier] A syntax to use
   *                                           in string generation.
   *
   * @return {string} CSS string of this node.
   *
   * @example
   * postcss.rule({ selector: 'a' }).toString() //=> "a {}"
   */
  ;

  _proto.toString = function toString(stringifier) {
    if (stringifier === void 0) {
      stringifier = _stringify.default;
    }

    if (stringifier.stringify) stringifier = stringifier.stringify;
    var result = '';
    stringifier(this, function (i) {
      result += i;
    });
    return result;
  }
  /**
   * Returns an exact clone of the node.
   *
   * The resulting cloned node and its (cloned) children will retain
   * code style properties.
   *
   * @param {object} [overrides] New properties to override in the clone.
   *
   * @example
   * decl.raws.before    //=> "\n  "
   * const cloned = decl.clone({ prop: '-moz-' + decl.prop })
   * cloned.raws.before  //=> "\n  "
   * cloned.toString()   //=> -moz-transform: scale(0)
   *
   * @return {Node} Clone of the node.
   */
  ;

  _proto.clone = function clone(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = cloneNode(this);

    for (var name in overrides) {
      cloned[name] = overrides[name];
    }

    return cloned;
  }
  /**
   * Shortcut to clone the node and insert the resulting cloned node
   * before the current node.
   *
   * @param {object} [overrides] Mew properties to override in the clone.
   *
   * @example
   * decl.cloneBefore({ prop: '-moz-' + decl.prop })
   *
   * @return {Node} New node
   */
  ;

  _proto.cloneBefore = function cloneBefore(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = this.clone(overrides);
    this.parent.insertBefore(this, cloned);
    return cloned;
  }
  /**
   * Shortcut to clone the node and insert the resulting cloned node
   * after the current node.
   *
   * @param {object} [overrides] New properties to override in the clone.
   *
   * @return {Node} New node.
   */
  ;

  _proto.cloneAfter = function cloneAfter(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = this.clone(overrides);
    this.parent.insertAfter(this, cloned);
    return cloned;
  }
  /**
   * Inserts node(s) before the current node and removes the current node.
   *
   * @param {...Node} nodes Mode(s) to replace current one.
   *
   * @example
   * if (atrule.name === 'mixin') {
   *   atrule.replaceWith(mixinRules[atrule.params])
   * }
   *
   * @return {Node} Current node to methods chain.
   */
  ;

  _proto.replaceWith = function replaceWith() {
    if (this.parent) {
      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {
        nodes[_key] = arguments[_key];
      }

      for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {
        var node = _nodes[_i];
        this.parent.insertBefore(this, node);
      }

      this.remove();
    }

    return this;
  }
  /**
   * Returns the next child of the node’s parent.
   * Returns `undefined` if the current node is the last child.
   *
   * @return {Node|undefined} Next node.
   *
   * @example
   * if (comment.text === 'delete next') {
   *   const next = comment.next()
   *   if (next) {
   *     next.remove()
   *   }
   * }
   */
  ;

  _proto.next = function next() {
    if (!this.parent) return undefined;
    var index = this.parent.index(this);
    return this.parent.nodes[index + 1];
  }
  /**
   * Returns the previous child of the node’s parent.
   * Returns `undefined` if the current node is the first child.
   *
   * @return {Node|undefined} Previous node.
   *
   * @example
   * const annotation = decl.prev()
   * if (annotation.type === 'comment') {
   *   readAnnotation(annotation.text)
   * }
   */
  ;

  _proto.prev = function prev() {
    if (!this.parent) return undefined;
    var index = this.parent.index(this);
    return this.parent.nodes[index - 1];
  }
  /**
   * Insert new node before current node to current node’s parent.
   *
   * Just alias for `node.parent.insertBefore(node, add)`.
   *
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * decl.before('content: ""')
   */
  ;

  _proto.before = function before(add) {
    this.parent.insertBefore(this, add);
    return this;
  }
  /**
   * Insert new node after current node to current node’s parent.
   *
   * Just alias for `node.parent.insertAfter(node, add)`.
   *
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * decl.after('color: black')
   */
  ;

  _proto.after = function after(add) {
    this.parent.insertAfter(this, add);
    return this;
  };

  _proto.toJSON = function toJSON() {
    var fixed = {};

    for (var name in this) {
      if (!this.hasOwnProperty(name)) continue;
      if (name === 'parent') continue;
      var value = this[name];

      if (value instanceof Array) {
        fixed[name] = value.map(function (i) {
          if (typeof i === 'object' && i.toJSON) {
            return i.toJSON();
          } else {
            return i;
          }
        });
      } else if (typeof value === 'object' && value.toJSON) {
        fixed[name] = value.toJSON();
      } else {
        fixed[name] = value;
      }
    }

    return fixed;
  }
  /**
   * Returns a {@link Node#raws} value. If the node is missing
   * the code style property (because the node was manually built or cloned),
   * PostCSS will try to autodetect the code style property by looking
   * at other nodes in the tree.
   *
   * @param {string} prop          Name of code style property.
   * @param {string} [defaultType] Name of default value, it can be missed
   *                               if the value is the same as prop.
   *
   * @example
   * const root = postcss.parse('a { background: white }')
   * root.nodes[0].append({ prop: 'color', value: 'black' })
   * root.nodes[0].nodes[1].raws.before   //=> undefined
   * root.nodes[0].nodes[1].raw('before') //=> ' '
   *
   * @return {string} Code style value.
   */
  ;

  _proto.raw = function raw(prop, defaultType) {
    var str = new _stringifier.default();
    return str.raw(this, prop, defaultType);
  }
  /**
   * Finds the Root instance of the node’s tree.
   *
   * @example
   * root.nodes[0].nodes[0].root() === root
   *
   * @return {Root} Root parent.
   */
  ;

  _proto.root = function root() {
    var result = this;

    while (result.parent) {
      result = result.parent;
    }

    return result;
  }
  /**
   * Clear the code style properties for the node and its children.
   *
   * @param {boolean} [keepBetween] Keep the raws.between symbols.
   *
   * @return {undefined}
   *
   * @example
   * node.raws.before  //=> ' '
   * node.cleanRaws()
   * node.raws.before  //=> undefined
   */
  ;

  _proto.cleanRaws = function cleanRaws(keepBetween) {
    delete this.raws.before;
    delete this.raws.after;
    if (!keepBetween) delete this.raws.between;
  };

  _proto.positionInside = function positionInside(index) {
    var string = this.toString();
    var column = this.source.start.column;
    var line = this.source.start.line;

    for (var i = 0; i < index; i++) {
      if (string[i] === '\n') {
        column = 1;
        line += 1;
      } else {
        column += 1;
      }
    }

    return {
      line: line,
      column: column
    };
  };

  _proto.positionBy = function positionBy(opts) {
    var pos = this.source.start;

    if (opts.index) {
      pos = this.positionInside(opts.index);
    } else if (opts.word) {
      var index = this.toString().indexOf(opts.word);
      if (index !== -1) pos = this.positionInside(index);
    }

    return pos;
  }
  /**
   * @memberof Node#
   * @member {string} type String representing the node’s type.
   *                       Possible values are `root`, `atrule`, `rule`,
   *                       `decl`, or `comment`.
   *
   * @example
   * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'
   */

  /**
   * @memberof Node#
   * @member {Container} parent The node’s parent node.
   *
   * @example
   * root.nodes[0].parent === root
   */

  /**
   * @memberof Node#
   * @member {source} source The input source of the node.
   *
   * The property is used in source map generation.
   *
   * If you create a node manually (e.g., with `postcss.decl()`),
   * that node will not have a `source` property and will be absent
   * from the source map. For this reason, the plugin developer should
   * consider cloning nodes to create new ones (in which case the new node’s
   * source will reference the original, cloned node) or setting
   * the `source` property manually.
   *
   * ```js
   * // Bad
   * const prefixed = postcss.decl({
   *   prop: '-moz-' + decl.prop,
   *   value: decl.value
   * })
   *
   * // Good
   * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })
   * ```
   *
   * ```js
   * if (atrule.name === 'add-link') {
   *   const rule = postcss.rule({ selector: 'a', source: atrule.source })
   *   atrule.parent.insertBefore(atrule, rule)
   * }
   * ```
   *
   * @example
   * decl.source.input.from //=> '/home/ai/a.sass'
   * decl.source.start      //=> { line: 10, column: 2 }
   * decl.source.end        //=> { line: 10, column: 12 }
   */

  /**
   * @memberof Node#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node. It also stores `*`
   *   and `_` symbols before the declaration (IE hack).
   * * `after`: the space symbols after the last child of the node
   *   to the end of the node.
   * * `between`: the symbols between the property and value
   *   for declarations, selector and `{` for rules, or last parameter
   *   and `{` for at-rules.
   * * `semicolon`: contains true if the last child has
   *   an (optional) semicolon.
   * * `afterName`: the space between the at-rule name and its parameters.
   * * `left`: the space symbols between `/*` and the comment’s text.
   * * `right`: the space symbols between the comment’s text
   *   and <code>*&#47;</code>.
   * * `important`: the content of the important statement,
   *   if it is not just `!important`.
   *
   * PostCSS cleans selectors, declaration values and at-rule parameters
   * from comments and extra spaces, but it stores origin content in raws
   * properties. As such, if you don’t change a declaration’s value,
   * PostCSS will use the raw value with comments.
   *
   * @example
   * const root = postcss.parse('a {\n  color:black\n}')
   * root.first.first.raws //=> { before: '\n  ', between: ':' }
   */
  ;

  return Node;
}();

var _default = Node;
/**
 * @typedef {object} position
 * @property {number} line   Source line in file.
 * @property {number} column Source column in file.
 */

/**
 * @typedef {object} source
 * @property {Input} input    {@link Input} with input file
 * @property {position} start The starting position of the node’s source.
 * @property {position} end   The ending position of the node’s source.
 */

exports.default = _default;
module.exports = exports.default;

});

var declaration = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _node = _interopRequireDefault(node$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a CSS declaration.
 *
 * @extends Node
 *
 * @example
 * const root = postcss.parse('a { color: black }')
 * const decl = root.first.first
 * decl.type       //=> 'decl'
 * decl.toString() //=> ' color: black'
 */
var Declaration =
/*#__PURE__*/
function (_Node) {
  _inheritsLoose(Declaration, _Node);

  function Declaration(defaults) {
    var _this;

    _this = _Node.call(this, defaults) || this;
    _this.type = 'decl';
    return _this;
  }
  /**
   * @memberof Declaration#
   * @member {string} prop The declaration’s property name.
   *
   * @example
   * const root = postcss.parse('a { color: black }')
   * const decl = root.first.first
   * decl.prop //=> 'color'
   */

  /**
   * @memberof Declaration#
   * @member {string} value The declaration’s value.
   *
   * @example
   * const root = postcss.parse('a { color: black }')
   * const decl = root.first.first
   * decl.value //=> 'black'
   */

  /**
   * @memberof Declaration#
   * @member {boolean} important `true` if the declaration
   *                             has an !important annotation.
   *
   * @example
   * const root = postcss.parse('a { color: black !important; color: red }')
   * root.first.first.important //=> true
   * root.first.last.important  //=> undefined
   */

  /**
   * @memberof Declaration#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node. It also stores `*`
   *   and `_` symbols before the declaration (IE hack).
   * * `between`: the symbols between the property and value
   *   for declarations.
   * * `important`: the content of the important statement,
   *   if it is not just `!important`.
   *
   * PostCSS cleans declaration from comments and extra spaces,
   * but it stores origin content in raws properties.
   * As such, if you don’t change a declaration’s value,
   * PostCSS will use the raw value with comments.
   *
   * @example
   * const root = postcss.parse('a {\n  color:black\n}')
   * root.first.first.raws //=> { before: '\n  ', between: ':' }
   */


  return Declaration;
}(_node.default);

var _default = Declaration;
exports.default = _default;
module.exports = exports.default;

});

var mapGenerator = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _sourceMap = _interopRequireDefault(sourceMap);

var _path = _interopRequireDefault(path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MapGenerator =
/*#__PURE__*/
function () {
  function MapGenerator(stringify, root, opts) {
    this.stringify = stringify;
    this.mapOpts = opts.map || {};
    this.root = root;
    this.opts = opts;
  }

  var _proto = MapGenerator.prototype;

  _proto.isMap = function isMap() {
    if (typeof this.opts.map !== 'undefined') {
      return !!this.opts.map;
    }

    return this.previous().length > 0;
  };

  _proto.previous = function previous() {
    var _this = this;

    if (!this.previousMaps) {
      this.previousMaps = [];
      this.root.walk(function (node) {
        if (node.source && node.source.input.map) {
          var map = node.source.input.map;

          if (_this.previousMaps.indexOf(map) === -1) {
            _this.previousMaps.push(map);
          }
        }
      });
    }

    return this.previousMaps;
  };

  _proto.isInline = function isInline() {
    if (typeof this.mapOpts.inline !== 'undefined') {
      return this.mapOpts.inline;
    }

    var annotation = this.mapOpts.annotation;

    if (typeof annotation !== 'undefined' && annotation !== true) {
      return false;
    }

    if (this.previous().length) {
      return this.previous().some(function (i) {
        return i.inline;
      });
    }

    return true;
  };

  _proto.isSourcesContent = function isSourcesContent() {
    if (typeof this.mapOpts.sourcesContent !== 'undefined') {
      return this.mapOpts.sourcesContent;
    }

    if (this.previous().length) {
      return this.previous().some(function (i) {
        return i.withContent();
      });
    }

    return true;
  };

  _proto.clearAnnotation = function clearAnnotation() {
    if (this.mapOpts.annotation === false) return;
    var node;

    for (var i = this.root.nodes.length - 1; i >= 0; i--) {
      node = this.root.nodes[i];
      if (node.type !== 'comment') continue;

      if (node.text.indexOf('# sourceMappingURL=') === 0) {
        this.root.removeChild(i);
      }
    }
  };

  _proto.setSourcesContent = function setSourcesContent() {
    var _this2 = this;

    var already = {};
    this.root.walk(function (node) {
      if (node.source) {
        var from = node.source.input.from;

        if (from && !already[from]) {
          already[from] = true;

          var relative = _this2.relative(from);

          _this2.map.setSourceContent(relative, node.source.input.css);
        }
      }
    });
  };

  _proto.applyPrevMaps = function applyPrevMaps() {
    for (var _iterator = this.previous(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var prev = _ref;
      var from = this.relative(prev.file);

      var root = prev.root || _path.default.dirname(prev.file);

      var map = void 0;

      if (this.mapOpts.sourcesContent === false) {
        map = new _sourceMap.default.SourceMapConsumer(prev.text);

        if (map.sourcesContent) {
          map.sourcesContent = map.sourcesContent.map(function () {
            return null;
          });
        }
      } else {
        map = prev.consumer();
      }

      this.map.applySourceMap(map, from, this.relative(root));
    }
  };

  _proto.isAnnotation = function isAnnotation() {
    if (this.isInline()) {
      return true;
    }

    if (typeof this.mapOpts.annotation !== 'undefined') {
      return this.mapOpts.annotation;
    }

    if (this.previous().length) {
      return this.previous().some(function (i) {
        return i.annotation;
      });
    }

    return true;
  };

  _proto.toBase64 = function toBase64(str) {
    if (Buffer) {
      return Buffer.from(str).toString('base64');
    }

    return window.btoa(unescape(encodeURIComponent(str)));
  };

  _proto.addAnnotation = function addAnnotation() {
    var content;

    if (this.isInline()) {
      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());
    } else if (typeof this.mapOpts.annotation === 'string') {
      content = this.mapOpts.annotation;
    } else {
      content = this.outputFile() + '.map';
    }

    var eol = '\n';
    if (this.css.indexOf('\r\n') !== -1) eol = '\r\n';
    this.css += eol + '/*# sourceMappingURL=' + content + ' */';
  };

  _proto.outputFile = function outputFile() {
    if (this.opts.to) {
      return this.relative(this.opts.to);
    }

    if (this.opts.from) {
      return this.relative(this.opts.from);
    }

    return 'to.css';
  };

  _proto.generateMap = function generateMap() {
    this.generateString();
    if (this.isSourcesContent()) this.setSourcesContent();
    if (this.previous().length > 0) this.applyPrevMaps();
    if (this.isAnnotation()) this.addAnnotation();

    if (this.isInline()) {
      return [this.css];
    }

    return [this.css, this.map];
  };

  _proto.relative = function relative(file) {
    if (file.indexOf('<') === 0) return file;
    if (/^\w+:\/\//.test(file)) return file;
    var from = this.opts.to ? _path.default.dirname(this.opts.to) : '.';

    if (typeof this.mapOpts.annotation === 'string') {
      from = _path.default.dirname(_path.default.resolve(from, this.mapOpts.annotation));
    }

    file = _path.default.relative(from, file);

    if (_path.default.sep === '\\') {
      return file.replace(/\\/g, '/');
    }

    return file;
  };

  _proto.sourcePath = function sourcePath(node) {
    if (this.mapOpts.from) {
      return this.mapOpts.from;
    }

    return this.relative(node.source.input.from);
  };

  _proto.generateString = function generateString() {
    var _this3 = this;

    this.css = '';
    this.map = new _sourceMap.default.SourceMapGenerator({
      file: this.outputFile()
    });
    var line = 1;
    var column = 1;
    var lines, last;
    this.stringify(this.root, function (str, node, type) {
      _this3.css += str;

      if (node && type !== 'end') {
        if (node.source && node.source.start) {
          _this3.map.addMapping({
            source: _this3.sourcePath(node),
            generated: {
              line: line,
              column: column - 1
            },
            original: {
              line: node.source.start.line,
              column: node.source.start.column - 1
            }
          });
        } else {
          _this3.map.addMapping({
            source: '<no source>',
            original: {
              line: 1,
              column: 0
            },
            generated: {
              line: line,
              column: column - 1
            }
          });
        }
      }

      lines = str.match(/\n/g);

      if (lines) {
        line += lines.length;
        last = str.lastIndexOf('\n');
        column = str.length - last;
      } else {
        column += str.length;
      }

      if (node && type !== 'start') {
        var p = node.parent || {
          raws: {}
        };

        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {
          if (node.source && node.source.end) {
            _this3.map.addMapping({
              source: _this3.sourcePath(node),
              generated: {
                line: line,
                column: column - 2
              },
              original: {
                line: node.source.end.line,
                column: node.source.end.column - 1
              }
            });
          } else {
            _this3.map.addMapping({
              source: '<no source>',
              original: {
                line: 1,
                column: 0
              },
              generated: {
                line: line,
                column: column - 1
              }
            });
          }
        }
      }
    });
  };

  _proto.generate = function generate() {
    this.clearAnnotation();

    if (this.isMap()) {
      return this.generateMap();
    }

    var result = '';
    this.stringify(this.root, function (i) {
      result += i;
    });
    return [result];
  };

  return MapGenerator;
}();

var _default = MapGenerator;
exports.default = _default;
module.exports = exports.default;

});

var warnOnce_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = warnOnce;
var printed = {};

function warnOnce(message) {
  if (printed[message]) return;
  printed[message] = true;

  if (typeof console !== 'undefined' && console.warn) {
    console.warn(message);
  }
}

module.exports = exports.default;

});

var warning = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

/**
 * Represents a plugin’s warning. It can be created using {@link Node#warn}.
 *
 * @example
 * if (decl.important) {
 *   decl.warn(result, 'Avoid !important', { word: '!important' })
 * }
 */
var Warning =
/*#__PURE__*/
function () {
  /**
   * @param {string} text        Warning message.
   * @param {Object} [opts]      Warning options.
   * @param {Node}   opts.node   CSS node that caused the warning.
   * @param {string} opts.word   Word in CSS source that caused the warning.
   * @param {number} opts.index  Index in CSS node string that caused
   *                             the warning.
   * @param {string} opts.plugin Name of the plugin that created
   *                             this warning. {@link Result#warn} fills
   *                             this property automatically.
   */
  function Warning(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    /**
     * Type to filter warnings from {@link Result#messages}.
     * Always equal to `"warning"`.
     *
     * @type {string}
     *
     * @example
     * const nonWarning = result.messages.filter(i => i.type !== 'warning')
     */
    this.type = 'warning';
    /**
     * The warning message.
     *
     * @type {string}
     *
     * @example
     * warning.text //=> 'Try to avoid !important'
     */

    this.text = text;

    if (opts.node && opts.node.source) {
      var pos = opts.node.positionBy(opts);
      /**
       * Line in the input file with this warning’s source.
       * @type {number}
       *
       * @example
       * warning.line //=> 5
       */

      this.line = pos.line;
      /**
       * Column in the input file with this warning’s source.
       *
       * @type {number}
       *
       * @example
       * warning.column //=> 6
       */

      this.column = pos.column;
    }

    for (var opt in opts) {
      this[opt] = opts[opt];
    }
  }
  /**
   * Returns a warning position and message.
   *
   * @example
   * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'
   *
   * @return {string} Warning position and message.
   */


  var _proto = Warning.prototype;

  _proto.toString = function toString() {
    if (this.node) {
      return this.node.error(this.text, {
        plugin: this.plugin,
        index: this.index,
        word: this.word
      }).message;
    }

    if (this.plugin) {
      return this.plugin + ': ' + this.text;
    }

    return this.text;
  }
  /**
   * @memberof Warning#
   * @member {string} plugin The name of the plugin that created
   *                         it will fill this property automatically.
   *                         this warning. When you call {@link Node#warn}
   *
   * @example
   * warning.plugin //=> 'postcss-important'
   */

  /**
   * @memberof Warning#
   * @member {Node} node Contains the CSS node that caused the warning.
   *
   * @example
   * warning.node.toString() //=> 'color: white !important'
   */
  ;

  return Warning;
}();

var _default = Warning;
exports.default = _default;
module.exports = exports.default;

});

var result = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _warning = _interopRequireDefault(warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Provides the result of the PostCSS transformations.
 *
 * A Result instance is returned by {@link LazyResult#then}
 * or {@link Root#toResult} methods.
 *
 * @example
 * postcss([autoprefixer]).process(css).then(result => {
 *  console.log(result.css)
 * })
 *
 * @example
 * const result2 = postcss.parse(css).toResult()
 */
var Result =
/*#__PURE__*/
function () {
  /**
   * @param {Processor} processor Processor used for this transformation.
   * @param {Root}      root      Root node after all transformations.
   * @param {processOptions} opts Options from the {@link Processor#process}
   *                              or {@link Root#toResult}.
   */
  function Result(processor, root, opts) {
    /**
     * The Processor instance used for this transformation.
     *
     * @type {Processor}
     *
     * @example
     * for (const plugin of result.processor.plugins) {
     *   if (plugin.postcssPlugin === 'postcss-bad') {
     *     throw 'postcss-good is incompatible with postcss-bad'
     *   }
     * })
     */
    this.processor = processor;
    /**
     * Contains messages from plugins (e.g., warnings or custom messages).
     * Each message should have type and plugin properties.
     *
     * @type {Message[]}
     *
     * @example
     * postcss.plugin('postcss-min-browser', () => {
     *   return (root, result) => {
     *     const browsers = detectMinBrowsersByCanIUse(root)
     *     result.messages.push({
     *       type: 'min-browser',
     *       plugin: 'postcss-min-browser',
     *       browsers
     *     })
     *   }
     * })
     */

    this.messages = [];
    /**
     * Root node after all transformations.
     *
     * @type {Root}
     *
     * @example
     * root.toResult().root === root
     */

    this.root = root;
    /**
     * Options from the {@link Processor#process} or {@link Root#toResult} call
     * that produced this Result instance.
     *
     * @type {processOptions}
     *
     * @example
     * root.toResult(opts).opts === opts
     */

    this.opts = opts;
    /**
     * A CSS string representing of {@link Result#root}.
     *
     * @type {string}
     *
     * @example
     * postcss.parse('a{}').toResult().css //=> "a{}"
     */

    this.css = undefined;
    /**
     * An instance of `SourceMapGenerator` class from the `source-map` library,
     * representing changes to the {@link Result#root} instance.
     *
     * @type {SourceMapGenerator}
     *
     * @example
     * result.map.toJSON() //=> { version: 3, file: 'a.css', … }
     *
     * @example
     * if (result.map) {
     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())
     * }
     */

    this.map = undefined;
  }
  /**
   * Returns for @{link Result#css} content.
   *
   * @example
   * result + '' === result.css
   *
   * @return {string} String representing of {@link Result#root}.
   */


  var _proto = Result.prototype;

  _proto.toString = function toString() {
    return this.css;
  }
  /**
   * Creates an instance of {@link Warning} and adds it
   * to {@link Result#messages}.
   *
   * @param {string} text        Warning message.
   * @param {Object} [opts]      Warning options.
   * @param {Node}   opts.node   CSS node that caused the warning.
   * @param {string} opts.word   Word in CSS source that caused the warning.
   * @param {number} opts.index  Index in CSS node string that caused
   *                             the warning.
   * @param {string} opts.plugin Name of the plugin that created
   *                             this warning. {@link Result#warn} fills
   *                             this property automatically.
   *
   * @return {Warning} Created warning.
   */
  ;

  _proto.warn = function warn(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!opts.plugin) {
      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
        opts.plugin = this.lastPlugin.postcssPlugin;
      }
    }

    var warning = new _warning.default(text, opts);
    this.messages.push(warning);
    return warning;
  }
  /**
     * Returns warnings from plugins. Filters {@link Warning} instances
     * from {@link Result#messages}.
     *
     * @example
     * result.warnings().forEach(warn => {
     *   console.warn(warn.toString())
     * })
     *
     * @return {Warning[]} Warnings from plugins.
     */
  ;

  _proto.warnings = function warnings() {
    return this.messages.filter(function (i) {
      return i.type === 'warning';
    });
  }
  /**
   * An alias for the {@link Result#css} property.
   * Use it with syntaxes that generate non-CSS output.
   *
   * @type {string}
   *
   * @example
   * result.css === result.content
   */
  ;

  _createClass(Result, [{
    key: "content",
    get: function get() {
      return this.css;
    }
  }]);

  return Result;
}();

var _default = Result;
/**
 * @typedef  {object} Message
 * @property {string} type   Message type.
 * @property {string} plugin Source PostCSS plugin name.
 */

exports.default = _default;
module.exports = exports.default;

});

var comment = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _node = _interopRequireDefault(node$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a comment between declarations or statements (rule and at-rules).
 *
 * Comments inside selectors, at-rule parameters, or declaration values
 * will be stored in the `raws` properties explained above.
 *
 * @extends Node
 */
var Comment =
/*#__PURE__*/
function (_Node) {
  _inheritsLoose(Comment, _Node);

  function Comment(defaults) {
    var _this;

    _this = _Node.call(this, defaults) || this;
    _this.type = 'comment';
    return _this;
  }
  /**
   * @memberof Comment#
   * @member {string} text The comment’s text.
   */

  /**
   * @memberof Comment#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node.
   * * `left`: the space symbols between `/*` and the comment’s text.
   * * `right`: the space symbols between the comment’s text.
   */


  return Comment;
}(_node.default);

var _default = Comment;
exports.default = _default;
module.exports = exports.default;

});

var list_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

/**
 * Contains helpers for safely splitting lists of CSS values,
 * preserving parentheses and quotes.
 *
 * @example
 * const list = postcss.list
 *
 * @namespace list
 */
var list = {
  split: function split(string, separators, last) {
    var array = [];
    var current = '';
    var split = false;
    var func = 0;
    var quote = false;
    var escape = false;

    for (var i = 0; i < string.length; i++) {
      var letter = string[i];

      if (quote) {
        if (escape) {
          escape = false;
        } else if (letter === '\\') {
          escape = true;
        } else if (letter === quote) {
          quote = false;
        }
      } else if (letter === '"' || letter === '\'') {
        quote = letter;
      } else if (letter === '(') {
        func += 1;
      } else if (letter === ')') {
        if (func > 0) func -= 1;
      } else if (func === 0) {
        if (separators.indexOf(letter) !== -1) split = true;
      }

      if (split) {
        if (current !== '') array.push(current.trim());
        current = '';
        split = false;
      } else {
        current += letter;
      }
    }

    if (last || current !== '') array.push(current.trim());
    return array;
  },

  /**
   * Safely splits space-separated values (such as those for `background`,
   * `border-radius`, and other shorthand properties).
   *
   * @param {string} string Space-separated values.
   *
   * @return {string[]} Split values.
   *
   * @example
   * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']
   */
  space: function space(string) {
    var spaces = [' ', '\n', '\t'];
    return list.split(string, spaces);
  },

  /**
   * Safely splits comma-separated values (such as those for `transition-*`
   * and `background` properties).
   *
   * @param {string} string Comma-separated values.
   *
   * @return {string[]} Split values.
   *
   * @example
   * postcss.list.comma('black, linear-gradient(white, black)')
   * //=> ['black', 'linear-gradient(white, black)']
   */
  comma: function comma(string) {
    return list.split(string, [','], true);
  }
};
var _default = list;
exports.default = _default;
module.exports = exports.default;

});

var rule = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _container = _interopRequireDefault(container);

var _list = _interopRequireDefault(list_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a CSS rule: a selector followed by a declaration block.
 *
 * @extends Container
 *
 * @example
 * const root = postcss.parse('a{}')
 * const rule = root.first
 * rule.type       //=> 'rule'
 * rule.toString() //=> 'a{}'
 */
var Rule =
/*#__PURE__*/
function (_Container) {
  _inheritsLoose(Rule, _Container);

  function Rule(defaults) {
    var _this;

    _this = _Container.call(this, defaults) || this;
    _this.type = 'rule';
    if (!_this.nodes) _this.nodes = [];
    return _this;
  }
  /**
   * An array containing the rule’s individual selectors.
   * Groups of selectors are split at commas.
   *
   * @type {string[]}
   *
   * @example
   * const root = postcss.parse('a, b { }')
   * const rule = root.first
   *
   * rule.selector  //=> 'a, b'
   * rule.selectors //=> ['a', 'b']
   *
   * rule.selectors = ['a', 'strong']
   * rule.selector //=> 'a, strong'
   */


  _createClass(Rule, [{
    key: "selectors",
    get: function get() {
      return _list.default.comma(this.selector);
    },
    set: function set(values) {
      var match = this.selector ? this.selector.match(/,\s*/) : null;
      var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');
      this.selector = values.join(sep);
    }
    /**
     * @memberof Rule#
     * @member {string} selector The rule’s full selector represented
     *                           as a string.
     *
     * @example
     * const root = postcss.parse('a, b { }')
     * const rule = root.first
     * rule.selector //=> 'a, b'
     */

    /**
     * @memberof Rule#
     * @member {object} raws Information to generate byte-to-byte equal
     *                       node string as it was in the origin input.
     *
     * Every parser saves its own properties,
     * but the default CSS parser uses:
     *
     * * `before`: the space symbols before the node. It also stores `*`
     *   and `_` symbols before the declaration (IE hack).
     * * `after`: the space symbols after the last child of the node
     *   to the end of the node.
     * * `between`: the symbols between the property and value
     *   for declarations, selector and `{` for rules, or last parameter
     *   and `{` for at-rules.
     * * `semicolon`: contains `true` if the last child has
     *   an (optional) semicolon.
     * * `ownSemicolon`: contains `true` if there is semicolon after rule.
     *
     * PostCSS cleans selectors from comments and extra spaces,
     * but it stores origin content in raws properties.
     * As such, if you don’t change a declaration’s value,
     * PostCSS will use the raw value with comments.
     *
     * @example
     * const root = postcss.parse('a {\n  color:black\n}')
     * root.first.first.raws //=> { before: '', between: ' ', after: '\n' }
     */

  }]);

  return Rule;
}(_container.default);

var _default = Rule;
exports.default = _default;
module.exports = exports.default;

});

var container = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _declaration = _interopRequireDefault(declaration);

var _comment = _interopRequireDefault(comment);

var _node = _interopRequireDefault(node$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function cleanSource(nodes) {
  return nodes.map(function (i) {
    if (i.nodes) i.nodes = cleanSource(i.nodes);
    delete i.source;
    return i;
  });
}
/**
 * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes
 * inherit some common methods to help work with their children.
 *
 * Note that all containers can store any content. If you write a rule inside
 * a rule, PostCSS will parse it.
 *
 * @extends Node
 * @abstract
 */


var Container =
/*#__PURE__*/
function (_Node) {
  _inheritsLoose(Container, _Node);

  function Container() {
    return _Node.apply(this, arguments) || this;
  }

  var _proto = Container.prototype;

  _proto.push = function push(child) {
    child.parent = this;
    this.nodes.push(child);
    return this;
  }
  /**
   * Iterates through the container’s immediate children,
   * calling `callback` for each child.
   *
   * Returning `false` in the callback will break iteration.
   *
   * This method only iterates through the container’s immediate children.
   * If you need to recursively iterate through all the container’s descendant
   * nodes, use {@link Container#walk}.
   *
   * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe
   * if you are mutating the array of child nodes during iteration.
   * PostCSS will adjust the current index to match the mutations.
   *
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * const root = postcss.parse('a { color: black; z-index: 1 }')
   * const rule = root.first
   *
   * for (const decl of rule.nodes) {
   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })
   *   // Cycle will be infinite, because cloneBefore moves the current node
   *   // to the next index
   * }
   *
   * rule.each(decl => {
   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })
   *   // Will be executed only for color and z-index
   * })
   */
  ;

  _proto.each = function each(callback) {
    if (!this.lastEach) this.lastEach = 0;
    if (!this.indexes) this.indexes = {};
    this.lastEach += 1;
    var id = this.lastEach;
    this.indexes[id] = 0;
    if (!this.nodes) return undefined;
    var index, result;

    while (this.indexes[id] < this.nodes.length) {
      index = this.indexes[id];
      result = callback(this.nodes[index], index);
      if (result === false) break;
      this.indexes[id] += 1;
    }

    delete this.indexes[id];
    return result;
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each node.
   *
   * Like container.each(), this method is safe to use
   * if you are mutating arrays during iteration.
   *
   * If you only need to iterate through the container’s immediate children,
   * use {@link Container#each}.
   *
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walk(node => {
   *   // Traverses all descendant nodes.
   * })
   */
  ;

  _proto.walk = function walk(callback) {
    return this.each(function (child, i) {
      var result;

      try {
        result = callback(child, i);
      } catch (e) {
        e.postcssNode = child;

        if (e.stack && child.source && /\n\s{4}at /.test(e.stack)) {
          var s = child.source;
          e.stack = e.stack.replace(/\n\s{4}at /, "$&" + s.input.from + ":" + s.start.line + ":" + s.start.column + "$&");
        }

        throw e;
      }

      if (result !== false && child.walk) {
        result = child.walk(callback);
      }

      return result;
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each declaration node.
   *
   * If you pass a filter, iteration will only happen over declarations
   * with matching properties.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {string|RegExp} [prop]   String or regular expression
   *                                 to filter declarations by property name.
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walkDecls(decl => {
   *   checkPropertySupport(decl.prop)
   * })
   *
   * root.walkDecls('border-radius', decl => {
   *   decl.remove()
   * })
   *
   * root.walkDecls(/^background/, decl => {
   *   decl.value = takeFirstColorFromGradient(decl.value)
   * })
   */
  ;

  _proto.walkDecls = function walkDecls(prop, callback) {
    if (!callback) {
      callback = prop;
      return this.walk(function (child, i) {
        if (child.type === 'decl') {
          return callback(child, i);
        }
      });
    }

    if (prop instanceof RegExp) {
      return this.walk(function (child, i) {
        if (child.type === 'decl' && prop.test(child.prop)) {
          return callback(child, i);
        }
      });
    }

    return this.walk(function (child, i) {
      if (child.type === 'decl' && child.prop === prop) {
        return callback(child, i);
      }
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each rule node.
   *
   * If you pass a filter, iteration will only happen over rules
   * with matching selectors.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {string|RegExp} [selector] String or regular expression
   *                                   to filter rules by selector.
   * @param {childIterator} callback   Iterator receives each node and index.
   *
   * @return {false|undefined} returns `false` if iteration was broke.
   *
   * @example
   * const selectors = []
   * root.walkRules(rule => {
   *   selectors.push(rule.selector)
   * })
   * console.log(`Your CSS uses ${ selectors.length } selectors`)
   */
  ;

  _proto.walkRules = function walkRules(selector, callback) {
    if (!callback) {
      callback = selector;
      return this.walk(function (child, i) {
        if (child.type === 'rule') {
          return callback(child, i);
        }
      });
    }

    if (selector instanceof RegExp) {
      return this.walk(function (child, i) {
        if (child.type === 'rule' && selector.test(child.selector)) {
          return callback(child, i);
        }
      });
    }

    return this.walk(function (child, i) {
      if (child.type === 'rule' && child.selector === selector) {
        return callback(child, i);
      }
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each at-rule node.
   *
   * If you pass a filter, iteration will only happen over at-rules
   * that have matching names.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {string|RegExp} [name]   String or regular expression
   *                                 to filter at-rules by name.
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walkAtRules(rule => {
   *   if (isOld(rule.name)) rule.remove()
   * })
   *
   * let first = false
   * root.walkAtRules('charset', rule => {
   *   if (!first) {
   *     first = true
   *   } else {
   *     rule.remove()
   *   }
   * })
   */
  ;

  _proto.walkAtRules = function walkAtRules(name, callback) {
    if (!callback) {
      callback = name;
      return this.walk(function (child, i) {
        if (child.type === 'atrule') {
          return callback(child, i);
        }
      });
    }

    if (name instanceof RegExp) {
      return this.walk(function (child, i) {
        if (child.type === 'atrule' && name.test(child.name)) {
          return callback(child, i);
        }
      });
    }

    return this.walk(function (child, i) {
      if (child.type === 'atrule' && child.name === name) {
        return callback(child, i);
      }
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each comment node.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walkComments(comment => {
   *   comment.remove()
   * })
   */
  ;

  _proto.walkComments = function walkComments(callback) {
    return this.walk(function (child, i) {
      if (child.type === 'comment') {
        return callback(child, i);
      }
    });
  }
  /**
   * Inserts new nodes to the end of the container.
   *
   * @param {...(Node|object|string|Node[])} children New nodes.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })
   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })
   * rule.append(decl1, decl2)
   *
   * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule
   * root.append({ selector: 'a' })                       // rule
   * rule.append({ prop: 'color', value: 'black' })       // declaration
   * rule.append({ text: 'Comment' })                     // comment
   *
   * root.append('a {}')
   * root.first.append('color: black; z-index: 1')
   */
  ;

  _proto.append = function append() {
    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {
      children[_key] = arguments[_key];
    }

    for (var _i = 0, _children = children; _i < _children.length; _i++) {
      var child = _children[_i];
      var nodes = this.normalize(child, this.last);

      for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i2 >= _iterator.length) break;
          _ref = _iterator[_i2++];
        } else {
          _i2 = _iterator.next();
          if (_i2.done) break;
          _ref = _i2.value;
        }

        var node = _ref;
        this.nodes.push(node);
      }
    }

    return this;
  }
  /**
   * Inserts new nodes to the start of the container.
   *
   * @param {...(Node|object|string|Node[])} children New nodes.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })
   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })
   * rule.prepend(decl1, decl2)
   *
   * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule
   * root.append({ selector: 'a' })                       // rule
   * rule.append({ prop: 'color', value: 'black' })       // declaration
   * rule.append({ text: 'Comment' })                     // comment
   *
   * root.append('a {}')
   * root.first.append('color: black; z-index: 1')
   */
  ;

  _proto.prepend = function prepend() {
    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      children[_key2] = arguments[_key2];
    }

    children = children.reverse();

    for (var _iterator2 = children, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i3 >= _iterator2.length) break;
        _ref2 = _iterator2[_i3++];
      } else {
        _i3 = _iterator2.next();
        if (_i3.done) break;
        _ref2 = _i3.value;
      }

      var child = _ref2;
      var nodes = this.normalize(child, this.first, 'prepend').reverse();

      for (var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i4 >= _iterator3.length) break;
          _ref3 = _iterator3[_i4++];
        } else {
          _i4 = _iterator3.next();
          if (_i4.done) break;
          _ref3 = _i4.value;
        }

        var node = _ref3;
        this.nodes.unshift(node);
      }

      for (var id in this.indexes) {
        this.indexes[id] = this.indexes[id] + nodes.length;
      }
    }

    return this;
  };

  _proto.cleanRaws = function cleanRaws(keepBetween) {
    _Node.prototype.cleanRaws.call(this, keepBetween);

    if (this.nodes) {
      for (var _iterator4 = this.nodes, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
        var _ref4;

        if (_isArray4) {
          if (_i5 >= _iterator4.length) break;
          _ref4 = _iterator4[_i5++];
        } else {
          _i5 = _iterator4.next();
          if (_i5.done) break;
          _ref4 = _i5.value;
        }

        var node = _ref4;
        node.cleanRaws(keepBetween);
      }
    }
  }
  /**
   * Insert new node before old node within the container.
   *
   * @param {Node|number} exist             Child or child’s index.
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))
   */
  ;

  _proto.insertBefore = function insertBefore(exist, add) {
    exist = this.index(exist);
    var type = exist === 0 ? 'prepend' : false;
    var nodes = this.normalize(add, this.nodes[exist], type).reverse();

    for (var _iterator5 = nodes, _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
      var _ref5;

      if (_isArray5) {
        if (_i6 >= _iterator5.length) break;
        _ref5 = _iterator5[_i6++];
      } else {
        _i6 = _iterator5.next();
        if (_i6.done) break;
        _ref5 = _i6.value;
      }

      var node = _ref5;
      this.nodes.splice(exist, 0, node);
    }

    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (exist <= index) {
        this.indexes[id] = index + nodes.length;
      }
    }

    return this;
  }
  /**
   * Insert new node after old node within the container.
   *
   * @param {Node|number} exist             Child or child’s index.
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   */
  ;

  _proto.insertAfter = function insertAfter(exist, add) {
    exist = this.index(exist);
    var nodes = this.normalize(add, this.nodes[exist]).reverse();

    for (var _iterator6 = nodes, _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
      var _ref6;

      if (_isArray6) {
        if (_i7 >= _iterator6.length) break;
        _ref6 = _iterator6[_i7++];
      } else {
        _i7 = _iterator6.next();
        if (_i7.done) break;
        _ref6 = _i7.value;
      }

      var node = _ref6;
      this.nodes.splice(exist + 1, 0, node);
    }

    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (exist < index) {
        this.indexes[id] = index + nodes.length;
      }
    }

    return this;
  }
  /**
   * Removes node from the container and cleans the parent properties
   * from the node and its children.
   *
   * @param {Node|number} child Child or child’s index.
   *
   * @return {Node} This node for methods chain
   *
   * @example
   * rule.nodes.length  //=> 5
   * rule.removeChild(decl)
   * rule.nodes.length  //=> 4
   * decl.parent        //=> undefined
   */
  ;

  _proto.removeChild = function removeChild(child) {
    child = this.index(child);
    this.nodes[child].parent = undefined;
    this.nodes.splice(child, 1);
    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (index >= child) {
        this.indexes[id] = index - 1;
      }
    }

    return this;
  }
  /**
   * Removes all children from the container
   * and cleans their parent properties.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * rule.removeAll()
   * rule.nodes.length //=> 0
   */
  ;

  _proto.removeAll = function removeAll() {
    for (var _iterator7 = this.nodes, _isArray7 = Array.isArray(_iterator7), _i8 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {
      var _ref7;

      if (_isArray7) {
        if (_i8 >= _iterator7.length) break;
        _ref7 = _iterator7[_i8++];
      } else {
        _i8 = _iterator7.next();
        if (_i8.done) break;
        _ref7 = _i8.value;
      }

      var node = _ref7;
      node.parent = undefined;
    }

    this.nodes = [];
    return this;
  }
  /**
   * Passes all declaration values within the container that match pattern
   * through callback, replacing those values with the returned result
   * of callback.
   *
   * This method is useful if you are using a custom unit or function
   * and need to iterate through all values.
   *
   * @param {string|RegExp} pattern      Replace pattern.
   * @param {object} opts                Options to speed up the search.
   * @param {string|string[]} opts.props An array of property names.
   * @param {string} opts.fast           String that’s used to narrow down
   *                                     values and speed up the regexp search.
   * @param {function|string} callback   String to replace pattern or callback
   *                                     that returns a new value. The callback
   *                                     will receive the same arguments
   *                                     as those passed to a function parameter
   *                                     of `String#replace`.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * root.replaceValues(/\d+rem/, { fast: 'rem' }, string => {
   *   return 15 * parseInt(string) + 'px'
   * })
   */
  ;

  _proto.replaceValues = function replaceValues(pattern, opts, callback) {
    if (!callback) {
      callback = opts;
      opts = {};
    }

    this.walkDecls(function (decl) {
      if (opts.props && opts.props.indexOf(decl.prop) === -1) return;
      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;
      decl.value = decl.value.replace(pattern, callback);
    });
    return this;
  }
  /**
   * Returns `true` if callback returns `true`
   * for all of the container’s children.
   *
   * @param {childCondition} condition Iterator returns true or false.
   *
   * @return {boolean} Is every child pass condition.
   *
   * @example
   * const noPrefixes = rule.every(i => i.prop[0] !== '-')
   */
  ;

  _proto.every = function every(condition) {
    return this.nodes.every(condition);
  }
  /**
   * Returns `true` if callback returns `true` for (at least) one
   * of the container’s children.
   *
   * @param {childCondition} condition Iterator returns true or false.
   *
   * @return {boolean} Is some child pass condition.
   *
   * @example
   * const hasPrefix = rule.some(i => i.prop[0] === '-')
   */
  ;

  _proto.some = function some(condition) {
    return this.nodes.some(condition);
  }
  /**
   * Returns a `child`’s index within the {@link Container#nodes} array.
   *
   * @param {Node} child Child of the current container.
   *
   * @return {number} Child index.
   *
   * @example
   * rule.index( rule.nodes[2] ) //=> 2
   */
  ;

  _proto.index = function index(child) {
    if (typeof child === 'number') {
      return child;
    }

    return this.nodes.indexOf(child);
  }
  /**
   * The container’s first child.
   *
   * @type {Node}
   *
   * @example
   * rule.first === rules.nodes[0]
   */
  ;

  _proto.normalize = function normalize(nodes, sample) {
    var _this = this;

    if (typeof nodes === 'string') {
      var parse = parse_1;

      nodes = cleanSource(parse(nodes).nodes);
    } else if (Array.isArray(nodes)) {
      nodes = nodes.slice(0);

      for (var _iterator8 = nodes, _isArray8 = Array.isArray(_iterator8), _i9 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {
        var _ref8;

        if (_isArray8) {
          if (_i9 >= _iterator8.length) break;
          _ref8 = _iterator8[_i9++];
        } else {
          _i9 = _iterator8.next();
          if (_i9.done) break;
          _ref8 = _i9.value;
        }

        var i = _ref8;
        if (i.parent) i.parent.removeChild(i, 'ignore');
      }
    } else if (nodes.type === 'root') {
      nodes = nodes.nodes.slice(0);

      for (var _iterator9 = nodes, _isArray9 = Array.isArray(_iterator9), _i10 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {
        var _ref9;

        if (_isArray9) {
          if (_i10 >= _iterator9.length) break;
          _ref9 = _iterator9[_i10++];
        } else {
          _i10 = _iterator9.next();
          if (_i10.done) break;
          _ref9 = _i10.value;
        }

        var _i11 = _ref9;
        if (_i11.parent) _i11.parent.removeChild(_i11, 'ignore');
      }
    } else if (nodes.type) {
      nodes = [nodes];
    } else if (nodes.prop) {
      if (typeof nodes.value === 'undefined') {
        throw new Error('Value field is missed in node creation');
      } else if (typeof nodes.value !== 'string') {
        nodes.value = String(nodes.value);
      }

      nodes = [new _declaration.default(nodes)];
    } else if (nodes.selector) {
      var Rule = rule;

      nodes = [new Rule(nodes)];
    } else if (nodes.name) {
      var AtRule = atRule;

      nodes = [new AtRule(nodes)];
    } else if (nodes.text) {
      nodes = [new _comment.default(nodes)];
    } else {
      throw new Error('Unknown node type in node creation');
    }

    var processed = nodes.map(function (i) {
      if (i.parent) i.parent.removeChild(i);

      if (typeof i.raws.before === 'undefined') {
        if (sample && typeof sample.raws.before !== 'undefined') {
          i.raws.before = sample.raws.before.replace(/[^\s]/g, '');
        }
      }

      i.parent = _this;
      return i;
    });
    return processed;
  }
  /**
   * @memberof Container#
   * @member {Node[]} nodes An array containing the container’s children.
   *
   * @example
   * const root = postcss.parse('a { color: black }')
   * root.nodes.length           //=> 1
   * root.nodes[0].selector      //=> 'a'
   * root.nodes[0].nodes[0].prop //=> 'color'
   */
  ;

  _createClass(Container, [{
    key: "first",
    get: function get() {
      if (!this.nodes) return undefined;
      return this.nodes[0];
    }
    /**
     * The container’s last child.
     *
     * @type {Node}
     *
     * @example
     * rule.last === rule.nodes[rule.nodes.length - 1]
     */

  }, {
    key: "last",
    get: function get() {
      if (!this.nodes) return undefined;
      return this.nodes[this.nodes.length - 1];
    }
  }]);

  return Container;
}(_node.default);

var _default = Container;
/**
 * @callback childCondition
 * @param {Node} node    Container child.
 * @param {number} index Child index.
 * @param {Node[]} nodes All container children.
 * @return {boolean}
 */

/**
 * @callback childIterator
 * @param {Node} node    Container child.
 * @param {number} index Child index.
 * @return {false|undefined} Returning `false` will break iteration.
 */

exports.default = _default;
module.exports = exports.default;

});

var atRule = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _container = _interopRequireDefault(container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents an at-rule.
 *
 * If it’s followed in the CSS by a {} block, this node will have
 * a nodes property representing its children.
 *
 * @extends Container
 *
 * @example
 * const root = postcss.parse('@charset "UTF-8"; @media print {}')
 *
 * const charset = root.first
 * charset.type  //=> 'atrule'
 * charset.nodes //=> undefined
 *
 * const media = root.last
 * media.nodes   //=> []
 */
var AtRule =
/*#__PURE__*/
function (_Container) {
  _inheritsLoose(AtRule, _Container);

  function AtRule(defaults) {
    var _this;

    _this = _Container.call(this, defaults) || this;
    _this.type = 'atrule';
    return _this;
  }

  var _proto = AtRule.prototype;

  _proto.append = function append() {
    var _Container$prototype$;

    if (!this.nodes) this.nodes = [];

    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {
      children[_key] = arguments[_key];
    }

    return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));
  };

  _proto.prepend = function prepend() {
    var _Container$prototype$2;

    if (!this.nodes) this.nodes = [];

    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      children[_key2] = arguments[_key2];
    }

    return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));
  }
  /**
   * @memberof AtRule#
   * @member {string} name The at-rule’s name immediately follows the `@`.
   *
   * @example
   * const root  = postcss.parse('@media print {}')
   * media.name //=> 'media'
   * const media = root.first
   */

  /**
   * @memberof AtRule#
   * @member {string} params The at-rule’s parameters, the values
   *                         that follow the at-rule’s name but precede
   *                         any {} block.
   *
   * @example
   * const root  = postcss.parse('@media print, screen {}')
   * const media = root.first
   * media.params //=> 'print, screen'
   */

  /**
   * @memberof AtRule#
   * @member {object} raws Information to generate byte-to-byte equal
   *                        node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node. It also stores `*`
   *   and `_` symbols before the declaration (IE hack).
   * * `after`: the space symbols after the last child of the node
   *   to the end of the node.
   * * `between`: the symbols between the property and value
   *   for declarations, selector and `{` for rules, or last parameter
   *   and `{` for at-rules.
   * * `semicolon`: contains true if the last child has
   *   an (optional) semicolon.
   * * `afterName`: the space between the at-rule name and its parameters.
   *
   * PostCSS cleans at-rule parameters from comments and extra spaces,
   * but it stores origin content in raws properties.
   * As such, if you don’t change a declaration’s value,
   * PostCSS will use the raw value with comments.
   *
   * @example
   * const root = postcss.parse('  @media\nprint {\n}')
   * root.first.first.raws //=> { before: '  ',
   *                       //     between: ' ',
   *                       //     afterName: '\n',
   *                       //     after: '\n' }
   */
  ;

  return AtRule;
}(_container.default);

var _default = AtRule;
exports.default = _default;
module.exports = exports.default;

});

var root = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _container = _interopRequireDefault(container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a CSS file and contains all its parsed nodes.
 *
 * @extends Container
 *
 * @example
 * const root = postcss.parse('a{color:black} b{z-index:2}')
 * root.type         //=> 'root'
 * root.nodes.length //=> 2
 */
var Root =
/*#__PURE__*/
function (_Container) {
  _inheritsLoose(Root, _Container);

  function Root(defaults) {
    var _this;

    _this = _Container.call(this, defaults) || this;
    _this.type = 'root';
    if (!_this.nodes) _this.nodes = [];
    return _this;
  }

  var _proto = Root.prototype;

  _proto.removeChild = function removeChild(child, ignore) {
    var index = this.index(child);

    if (!ignore && index === 0 && this.nodes.length > 1) {
      this.nodes[1].raws.before = this.nodes[index].raws.before;
    }

    return _Container.prototype.removeChild.call(this, child);
  };

  _proto.normalize = function normalize(child, sample, type) {
    var nodes = _Container.prototype.normalize.call(this, child);

    if (sample) {
      if (type === 'prepend') {
        if (this.nodes.length > 1) {
          sample.raws.before = this.nodes[1].raws.before;
        } else {
          delete sample.raws.before;
        }
      } else if (this.first !== sample) {
        for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var node = _ref;
          node.raws.before = sample.raws.before;
        }
      }
    }

    return nodes;
  }
  /**
   * Returns a {@link Result} instance representing the root’s CSS.
   *
   * @param {processOptions} [opts] Options with only `to` and `map` keys.
   *
   * @return {Result} Result with current root’s CSS.
   *
   * @example
   * const root1 = postcss.parse(css1, { from: 'a.css' })
   * const root2 = postcss.parse(css2, { from: 'b.css' })
   * root1.append(root2)
   * const result = root1.toResult({ to: 'all.css', map: true })
   */
  ;

  _proto.toResult = function toResult(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var LazyResult = lazyResult;

    var Processor = processor;

    var lazy = new LazyResult(new Processor(), this, opts);
    return lazy.stringify();
  }
  /**
   * @memberof Root#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `after`: the space symbols after the last child to the end of file.
   * * `semicolon`: is the last child has an (optional) semicolon.
   *
   * @example
   * postcss.parse('a {}\n').raws //=> { after: '\n' }
   * postcss.parse('a {}').raws   //=> { after: '' }
   */
  ;

  return Root;
}(_container.default);

var _default = Root;
exports.default = _default;
module.exports = exports.default;

});

var parser = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _declaration = _interopRequireDefault(declaration);

var _tokenize = _interopRequireDefault(tokenize);

var _comment = _interopRequireDefault(comment);

var _atRule = _interopRequireDefault(atRule);

var _root = _interopRequireDefault(root);

var _rule = _interopRequireDefault(rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Parser =
/*#__PURE__*/
function () {
  function Parser(input) {
    this.input = input;
    this.root = new _root.default();
    this.current = this.root;
    this.spaces = '';
    this.semicolon = false;
    this.createTokenizer();
    this.root.source = {
      input: input,
      start: {
        line: 1,
        column: 1
      }
    };
  }

  var _proto = Parser.prototype;

  _proto.createTokenizer = function createTokenizer() {
    this.tokenizer = (0, _tokenize.default)(this.input);
  };

  _proto.parse = function parse() {
    var token;

    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken();

      switch (token[0]) {
        case 'space':
          this.spaces += token[1];
          break;

        case ';':
          this.freeSemicolon(token);
          break;

        case '}':
          this.end(token);
          break;

        case 'comment':
          this.comment(token);
          break;

        case 'at-word':
          this.atrule(token);
          break;

        case '{':
          this.emptyRule(token);
          break;

        default:
          this.other(token);
          break;
      }
    }

    this.endFile();
  };

  _proto.comment = function comment(token) {
    var node = new _comment.default();
    this.init(node, token[2], token[3]);
    node.source.end = {
      line: token[4],
      column: token[5]
    };
    var text = token[1].slice(2, -2);

    if (/^\s*$/.test(text)) {
      node.text = '';
      node.raws.left = text;
      node.raws.right = '';
    } else {
      var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);
      node.text = match[2];
      node.raws.left = match[1];
      node.raws.right = match[3];
    }
  };

  _proto.emptyRule = function emptyRule(token) {
    var node = new _rule.default();
    this.init(node, token[2], token[3]);
    node.selector = '';
    node.raws.between = '';
    this.current = node;
  };

  _proto.other = function other(start) {
    var end = false;
    var type = null;
    var colon = false;
    var bracket = null;
    var brackets = [];
    var tokens = [];
    var token = start;

    while (token) {
      type = token[0];
      tokens.push(token);

      if (type === '(' || type === '[') {
        if (!bracket) bracket = token;
        brackets.push(type === '(' ? ')' : ']');
      } else if (brackets.length === 0) {
        if (type === ';') {
          if (colon) {
            this.decl(tokens);
            return;
          } else {
            break;
          }
        } else if (type === '{') {
          this.rule(tokens);
          return;
        } else if (type === '}') {
          this.tokenizer.back(tokens.pop());
          end = true;
          break;
        } else if (type === ':') {
          colon = true;
        }
      } else if (type === brackets[brackets.length - 1]) {
        brackets.pop();
        if (brackets.length === 0) bracket = null;
      }

      token = this.tokenizer.nextToken();
    }

    if (this.tokenizer.endOfFile()) end = true;
    if (brackets.length > 0) this.unclosedBracket(bracket);

    if (end && colon) {
      while (tokens.length) {
        token = tokens[tokens.length - 1][0];
        if (token !== 'space' && token !== 'comment') break;
        this.tokenizer.back(tokens.pop());
      }

      this.decl(tokens);
    } else {
      this.unknownWord(tokens);
    }
  };

  _proto.rule = function rule(tokens) {
    tokens.pop();
    var node = new _rule.default();
    this.init(node, tokens[0][2], tokens[0][3]);
    node.raws.between = this.spacesAndCommentsFromEnd(tokens);
    this.raw(node, 'selector', tokens);
    this.current = node;
  };

  _proto.decl = function decl(tokens) {
    var node = new _declaration.default();
    this.init(node);
    var last = tokens[tokens.length - 1];

    if (last[0] === ';') {
      this.semicolon = true;
      tokens.pop();
    }

    if (last[4]) {
      node.source.end = {
        line: last[4],
        column: last[5]
      };
    } else {
      node.source.end = {
        line: last[2],
        column: last[3]
      };
    }

    while (tokens[0][0] !== 'word') {
      if (tokens.length === 1) this.unknownWord(tokens);
      node.raws.before += tokens.shift()[1];
    }

    node.source.start = {
      line: tokens[0][2],
      column: tokens[0][3]
    };
    node.prop = '';

    while (tokens.length) {
      var type = tokens[0][0];

      if (type === ':' || type === 'space' || type === 'comment') {
        break;
      }

      node.prop += tokens.shift()[1];
    }

    node.raws.between = '';
    var token;

    while (tokens.length) {
      token = tokens.shift();

      if (token[0] === ':') {
        node.raws.between += token[1];
        break;
      } else {
        if (token[0] === 'word' && /\w/.test(token[1])) {
          this.unknownWord([token]);
        }

        node.raws.between += token[1];
      }
    }

    if (node.prop[0] === '_' || node.prop[0] === '*') {
      node.raws.before += node.prop[0];
      node.prop = node.prop.slice(1);
    }

    node.raws.between += this.spacesAndCommentsFromStart(tokens);
    this.precheckMissedSemicolon(tokens);

    for (var i = tokens.length - 1; i > 0; i--) {
      token = tokens[i];

      if (token[1].toLowerCase() === '!important') {
        node.important = true;
        var string = this.stringFrom(tokens, i);
        string = this.spacesFromEnd(tokens) + string;
        if (string !== ' !important') node.raws.important = string;
        break;
      } else if (token[1].toLowerCase() === 'important') {
        var cache = tokens.slice(0);
        var str = '';

        for (var j = i; j > 0; j--) {
          var _type = cache[j][0];

          if (str.trim().indexOf('!') === 0 && _type !== 'space') {
            break;
          }

          str = cache.pop()[1] + str;
        }

        if (str.trim().indexOf('!') === 0) {
          node.important = true;
          node.raws.important = str;
          tokens = cache;
        }
      }

      if (token[0] !== 'space' && token[0] !== 'comment') {
        break;
      }
    }

    this.raw(node, 'value', tokens);
    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);
  };

  _proto.atrule = function atrule(token) {
    var node = new _atRule.default();
    node.name = token[1].slice(1);

    if (node.name === '') {
      this.unnamedAtrule(node, token);
    }

    this.init(node, token[2], token[3]);
    var prev;
    var shift;
    var last = false;
    var open = false;
    var params = [];

    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken();

      if (token[0] === ';') {
        node.source.end = {
          line: token[2],
          column: token[3]
        };
        this.semicolon = true;
        break;
      } else if (token[0] === '{') {
        open = true;
        break;
      } else if (token[0] === '}') {
        if (params.length > 0) {
          shift = params.length - 1;
          prev = params[shift];

          while (prev && prev[0] === 'space') {
            prev = params[--shift];
          }

          if (prev) {
            node.source.end = {
              line: prev[4],
              column: prev[5]
            };
          }
        }

        this.end(token);
        break;
      } else {
        params.push(token);
      }

      if (this.tokenizer.endOfFile()) {
        last = true;
        break;
      }
    }

    node.raws.between = this.spacesAndCommentsFromEnd(params);

    if (params.length) {
      node.raws.afterName = this.spacesAndCommentsFromStart(params);
      this.raw(node, 'params', params);

      if (last) {
        token = params[params.length - 1];
        node.source.end = {
          line: token[4],
          column: token[5]
        };
        this.spaces = node.raws.between;
        node.raws.between = '';
      }
    } else {
      node.raws.afterName = '';
      node.params = '';
    }

    if (open) {
      node.nodes = [];
      this.current = node;
    }
  };

  _proto.end = function end(token) {
    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon;
    }

    this.semicolon = false;
    this.current.raws.after = (this.current.raws.after || '') + this.spaces;
    this.spaces = '';

    if (this.current.parent) {
      this.current.source.end = {
        line: token[2],
        column: token[3]
      };
      this.current = this.current.parent;
    } else {
      this.unexpectedClose(token);
    }
  };

  _proto.endFile = function endFile() {
    if (this.current.parent) this.unclosedBlock();

    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon;
    }

    this.current.raws.after = (this.current.raws.after || '') + this.spaces;
  };

  _proto.freeSemicolon = function freeSemicolon(token) {
    this.spaces += token[1];

    if (this.current.nodes) {
      var prev = this.current.nodes[this.current.nodes.length - 1];

      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {
        prev.raws.ownSemicolon = this.spaces;
        this.spaces = '';
      }
    }
  } // Helpers
  ;

  _proto.init = function init(node, line, column) {
    this.current.push(node);
    node.source = {
      start: {
        line: line,
        column: column
      },
      input: this.input
    };
    node.raws.before = this.spaces;
    this.spaces = '';
    if (node.type !== 'comment') this.semicolon = false;
  };

  _proto.raw = function raw(node, prop, tokens) {
    var token, type;
    var length = tokens.length;
    var value = '';
    var clean = true;
    var next, prev;
    var pattern = /^([.|#])?([\w])+/i;

    for (var i = 0; i < length; i += 1) {
      token = tokens[i];
      type = token[0];

      if (type === 'comment' && node.type === 'rule') {
        prev = tokens[i - 1];
        next = tokens[i + 1];

        if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {
          value += token[1];
        } else {
          clean = false;
        }

        continue;
      }

      if (type === 'comment' || type === 'space' && i === length - 1) {
        clean = false;
      } else {
        value += token[1];
      }
    }

    if (!clean) {
      var raw = tokens.reduce(function (all, i) {
        return all + i[1];
      }, '');
      node.raws[prop] = {
        value: value,
        raw: raw
      };
    }

    node[prop] = value;
  };

  _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {
    var lastTokenType;
    var spaces = '';

    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0];
      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;
      spaces = tokens.pop()[1] + spaces;
    }

    return spaces;
  };

  _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {
    var next;
    var spaces = '';

    while (tokens.length) {
      next = tokens[0][0];
      if (next !== 'space' && next !== 'comment') break;
      spaces += tokens.shift()[1];
    }

    return spaces;
  };

  _proto.spacesFromEnd = function spacesFromEnd(tokens) {
    var lastTokenType;
    var spaces = '';

    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0];
      if (lastTokenType !== 'space') break;
      spaces = tokens.pop()[1] + spaces;
    }

    return spaces;
  };

  _proto.stringFrom = function stringFrom(tokens, from) {
    var result = '';

    for (var i = from; i < tokens.length; i++) {
      result += tokens[i][1];
    }

    tokens.splice(from, tokens.length - from);
    return result;
  };

  _proto.colon = function colon(tokens) {
    var brackets = 0;
    var token, type, prev;

    for (var i = 0; i < tokens.length; i++) {
      token = tokens[i];
      type = token[0];

      if (type === '(') {
        brackets += 1;
      }

      if (type === ')') {
        brackets -= 1;
      }

      if (brackets === 0 && type === ':') {
        if (!prev) {
          this.doubleColon(token);
        } else if (prev[0] === 'word' && prev[1] === 'progid') {
          continue;
        } else {
          return i;
        }
      }

      prev = token;
    }

    return false;
  } // Errors
  ;

  _proto.unclosedBracket = function unclosedBracket(bracket) {
    throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);
  };

  _proto.unknownWord = function unknownWord(tokens) {
    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);
  };

  _proto.unexpectedClose = function unexpectedClose(token) {
    throw this.input.error('Unexpected }', token[2], token[3]);
  };

  _proto.unclosedBlock = function unclosedBlock() {
    var pos = this.current.source.start;
    throw this.input.error('Unclosed block', pos.line, pos.column);
  };

  _proto.doubleColon = function doubleColon(token) {
    throw this.input.error('Double colon', token[2], token[3]);
  };

  _proto.unnamedAtrule = function unnamedAtrule(node, token) {
    throw this.input.error('At-rule without name', token[2], token[3]);
  };

  _proto.precheckMissedSemicolon = function precheckMissedSemicolon()
  /* tokens */
  {// Hook for Safe Parser
  };

  _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens) {
    var colon = this.colon(tokens);
    if (colon === false) return;
    var founded = 0;
    var token;

    for (var j = colon - 1; j >= 0; j--) {
      token = tokens[j];

      if (token[0] !== 'space') {
        founded += 1;
        if (founded === 2) break;
      }
    }

    throw this.input.error('Missed semicolon', token[2], token[3]);
  };

  return Parser;
}();

exports.default = Parser;
module.exports = exports.default;

});

var parse_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _parser = _interopRequireDefault(parser);

var _input = _interopRequireDefault(input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(css, opts) {
  var input = new _input.default(css, opts);
  var parser = new _parser.default(input);

  try {
    parser.parse();
  } catch (e) {
    if (process.env.NODE_ENV !== 'production') {
      if (e.name === 'CssSyntaxError' && opts && opts.from) {
        if (/\.scss$/i.test(opts.from)) {
          e.message += '\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';
        } else if (/\.sass/i.test(opts.from)) {
          e.message += '\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';
        } else if (/\.less$/i.test(opts.from)) {
          e.message += '\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';
        }
      }
    }

    throw e;
  }

  return parser.root;
}

var _default = parse;
exports.default = _default;
module.exports = exports.default;

});

var lazyResult = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _mapGenerator = _interopRequireDefault(mapGenerator);

var _stringify2 = _interopRequireDefault(stringify_1);

var _warnOnce = _interopRequireDefault(warnOnce_1);

var _result = _interopRequireDefault(result);

var _parse = _interopRequireDefault(parse_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function isPromise(obj) {
  return typeof obj === 'object' && typeof obj.then === 'function';
}
/**
 * A Promise proxy for the result of PostCSS transformations.
 *
 * A `LazyResult` instance is returned by {@link Processor#process}.
 *
 * @example
 * const lazy = postcss([autoprefixer]).process(css)
 */


var LazyResult =
/*#__PURE__*/
function () {
  function LazyResult(processor, css, opts) {
    this.stringified = false;
    this.processed = false;
    var root;

    if (typeof css === 'object' && css !== null && css.type === 'root') {
      root = css;
    } else if (css instanceof LazyResult || css instanceof _result.default) {
      root = css.root;

      if (css.map) {
        if (typeof opts.map === 'undefined') opts.map = {};
        if (!opts.map.inline) opts.map.inline = false;
        opts.map.prev = css.map;
      }
    } else {
      var parser = _parse.default;
      if (opts.syntax) parser = opts.syntax.parse;
      if (opts.parser) parser = opts.parser;
      if (parser.parse) parser = parser.parse;

      try {
        root = parser(css, opts);
      } catch (error) {
        this.error = error;
      }
    }

    this.result = new _result.default(processor, root, opts);
  }
  /**
   * Returns a {@link Processor} instance, which will be used
   * for CSS transformations.
   *
   * @type {Processor}
   */


  var _proto = LazyResult.prototype;

  /**
   * Processes input CSS through synchronous plugins
   * and calls {@link Result#warnings()}.
   *
   * @return {Warning[]} Warnings from plugins.
   */
  _proto.warnings = function warnings() {
    return this.sync().warnings();
  }
  /**
   * Alias for the {@link LazyResult#css} property.
   *
   * @example
   * lazy + '' === lazy.css
   *
   * @return {string} Output CSS.
   */
  ;

  _proto.toString = function toString() {
    return this.css;
  }
  /**
   * Processes input CSS through synchronous and asynchronous plugins
   * and calls `onFulfilled` with a Result instance. If a plugin throws
   * an error, the `onRejected` callback will be executed.
   *
   * It implements standard Promise API.
   *
   * @param {onFulfilled} onFulfilled Callback will be executed
   *                                  when all plugins will finish work.
   * @param {onRejected}  onRejected  Callback will be executed on any error.
   *
   * @return {Promise} Promise API to make queue.
   *
   * @example
   * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {
   *   console.log(result.css)
   * })
   */
  ;

  _proto.then = function then(onFulfilled, onRejected) {
    if (process.env.NODE_ENV !== 'production') {
      if (!('from' in this.opts)) {
        (0, _warnOnce.default)('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');
      }
    }

    return this.async().then(onFulfilled, onRejected);
  }
  /**
   * Processes input CSS through synchronous and asynchronous plugins
   * and calls onRejected for each error thrown in any plugin.
   *
   * It implements standard Promise API.
   *
   * @param {onRejected} onRejected Callback will be executed on any error.
   *
   * @return {Promise} Promise API to make queue.
   *
   * @example
   * postcss([autoprefixer]).process(css).then(result => {
   *   console.log(result.css)
   * }).catch(error => {
   *   console.error(error)
   * })
   */
  ;

  _proto.catch = function _catch(onRejected) {
    return this.async().catch(onRejected);
  }
  /**
   * Processes input CSS through synchronous and asynchronous plugins
   * and calls onFinally on any error or when all plugins will finish work.
   *
   * It implements standard Promise API.
   *
   * @param {onFinally} onFinally Callback will be executed on any error or
   *                              when all plugins will finish work.
   *
   * @return {Promise} Promise API to make queue.
   *
   * @example
   * postcss([autoprefixer]).process(css).finally(() => {
   *   console.log('processing ended')
   * })
   */
  ;

  _proto.finally = function _finally(onFinally) {
    return this.async().then(onFinally, onFinally);
  };

  _proto.handleError = function handleError(error, plugin) {
    try {
      this.error = error;

      if (error.name === 'CssSyntaxError' && !error.plugin) {
        error.plugin = plugin.postcssPlugin;
        error.setMessage();
      } else if (plugin.postcssVersion) {
        if (process.env.NODE_ENV !== 'production') {
          var pluginName = plugin.postcssPlugin;
          var pluginVer = plugin.postcssVersion;
          var runtimeVer = this.result.processor.version;
          var a = pluginVer.split('.');
          var b = runtimeVer.split('.');

          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');
          }
        }
      }
    } catch (err) {
      if (console && console.error) console.error(err);
    }
  };

  _proto.asyncTick = function asyncTick(resolve, reject) {
    var _this = this;

    if (this.plugin >= this.processor.plugins.length) {
      this.processed = true;
      return resolve();
    }

    try {
      var plugin = this.processor.plugins[this.plugin];
      var promise = this.run(plugin);
      this.plugin += 1;

      if (isPromise(promise)) {
        promise.then(function () {
          _this.asyncTick(resolve, reject);
        }).catch(function (error) {
          _this.handleError(error, plugin);

          _this.processed = true;
          reject(error);
        });
      } else {
        this.asyncTick(resolve, reject);
      }
    } catch (error) {
      this.processed = true;
      reject(error);
    }
  };

  _proto.async = function async() {
    var _this2 = this;

    if (this.processed) {
      return new Promise(function (resolve, reject) {
        if (_this2.error) {
          reject(_this2.error);
        } else {
          resolve(_this2.stringify());
        }
      });
    }

    if (this.processing) {
      return this.processing;
    }

    this.processing = new Promise(function (resolve, reject) {
      if (_this2.error) return reject(_this2.error);
      _this2.plugin = 0;

      _this2.asyncTick(resolve, reject);
    }).then(function () {
      _this2.processed = true;
      return _this2.stringify();
    });
    return this.processing;
  };

  _proto.sync = function sync() {
    if (this.processed) return this.result;
    this.processed = true;

    if (this.processing) {
      throw new Error('Use process(css).then(cb) to work with async plugins');
    }

    if (this.error) throw this.error;

    for (var _iterator = this.result.processor.plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var plugin = _ref;
      var promise = this.run(plugin);

      if (isPromise(promise)) {
        throw new Error('Use process(css).then(cb) to work with async plugins');
      }
    }

    return this.result;
  };

  _proto.run = function run(plugin) {
    this.result.lastPlugin = plugin;

    try {
      return plugin(this.result.root, this.result);
    } catch (error) {
      this.handleError(error, plugin);
      throw error;
    }
  };

  _proto.stringify = function stringify() {
    if (this.stringified) return this.result;
    this.stringified = true;
    this.sync();
    var opts = this.result.opts;
    var str = _stringify2.default;
    if (opts.syntax) str = opts.syntax.stringify;
    if (opts.stringifier) str = opts.stringifier;
    if (str.stringify) str = str.stringify;
    var map = new _mapGenerator.default(str, this.result.root, this.result.opts);
    var data = map.generate();
    this.result.css = data[0];
    this.result.map = data[1];
    return this.result;
  };

  _createClass(LazyResult, [{
    key: "processor",
    get: function get() {
      return this.result.processor;
    }
    /**
     * Options from the {@link Processor#process} call.
     *
     * @type {processOptions}
     */

  }, {
    key: "opts",
    get: function get() {
      return this.result.opts;
    }
    /**
     * Processes input CSS through synchronous plugins, converts `Root`
     * to a CSS string and returns {@link Result#css}.
     *
     * This property will only work with synchronous plugins.
     * If the processor contains any asynchronous plugins
     * it will throw an error. This is why this method is only
     * for debug purpose, you should always use {@link LazyResult#then}.
     *
     * @type {string}
     * @see Result#css
     */

  }, {
    key: "css",
    get: function get() {
      return this.stringify().css;
    }
    /**
     * An alias for the `css` property. Use it with syntaxes
     * that generate non-CSS output.
     *
     * This property will only work with synchronous plugins.
     * If the processor contains any asynchronous plugins
     * it will throw an error. This is why this method is only
     * for debug purpose, you should always use {@link LazyResult#then}.
     *
     * @type {string}
     * @see Result#content
     */

  }, {
    key: "content",
    get: function get() {
      return this.stringify().content;
    }
    /**
     * Processes input CSS through synchronous plugins
     * and returns {@link Result#map}.
     *
     * This property will only work with synchronous plugins.
     * If the processor contains any asynchronous plugins
     * it will throw an error. This is why this method is only
     * for debug purpose, you should always use {@link LazyResult#then}.
     *
     * @type {SourceMapGenerator}
     * @see Result#map
     */

  }, {
    key: "map",
    get: function get() {
      return this.stringify().map;
    }
    /**
     * Processes input CSS through synchronous plugins
     * and returns {@link Result#root}.
     *
     * This property will only work with synchronous plugins. If the processor
     * contains any asynchronous plugins it will throw an error.
     *
     * This is why this method is only for debug purpose,
     * you should always use {@link LazyResult#then}.
     *
     * @type {Root}
     * @see Result#root
     */

  }, {
    key: "root",
    get: function get() {
      return this.sync().root;
    }
    /**
     * Processes input CSS through synchronous plugins
     * and returns {@link Result#messages}.
     *
     * This property will only work with synchronous plugins. If the processor
     * contains any asynchronous plugins it will throw an error.
     *
     * This is why this method is only for debug purpose,
     * you should always use {@link LazyResult#then}.
     *
     * @type {Message[]}
     * @see Result#messages
     */

  }, {
    key: "messages",
    get: function get() {
      return this.sync().messages;
    }
  }]);

  return LazyResult;
}();

var _default = LazyResult;
/**
 * @callback onFulfilled
 * @param {Result} result
 */

/**
 * @callback onRejected
 * @param {Error} error
 */

exports.default = _default;
module.exports = exports.default;

});

var processor = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _lazyResult = _interopRequireDefault(lazyResult);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Contains plugins to process CSS. Create one `Processor` instance,
 * initialize its plugins, and then use that instance on numerous CSS files.
 *
 * @example
 * const processor = postcss([autoprefixer, precss])
 * processor.process(css1).then(result => console.log(result.css))
 * processor.process(css2).then(result => console.log(result.css))
 */
var Processor =
/*#__PURE__*/
function () {
  /**
   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.
   *        See {@link Processor#use} for plugin format.
   */
  function Processor(plugins) {
    if (plugins === void 0) {
      plugins = [];
    }

    /**
     * Current PostCSS version.
     *
     * @type {string}
     *
     * @example
     * if (result.processor.version.split('.')[0] !== '6') {
     *   throw new Error('This plugin works only with PostCSS 6')
     * }
     */
    this.version = '7.0.32';
    /**
     * Plugins added to this processor.
     *
     * @type {pluginFunction[]}
     *
     * @example
     * const processor = postcss([autoprefixer, precss])
     * processor.plugins.length //=> 2
     */

    this.plugins = this.normalize(plugins);
  }
  /**
   * Adds a plugin to be used as a CSS processor.
   *
   * PostCSS plugin can be in 4 formats:
   * * A plugin created by {@link postcss.plugin} method.
   * * A function. PostCSS will pass the function a @{link Root}
   *   as the first argument and current {@link Result} instance
   *   as the second.
   * * An object with a `postcss` method. PostCSS will use that method
   *   as described in #2.
   * * Another {@link Processor} instance. PostCSS will copy plugins
   *   from that instance into this one.
   *
   * Plugins can also be added by passing them as arguments when creating
   * a `postcss` instance (see [`postcss(plugins)`]).
   *
   * Asynchronous plugins should return a `Promise` instance.
   *
   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin
   *                                                 or {@link Processor}
   *                                                 with plugins.
   *
   * @example
   * const processor = postcss()
   *   .use(autoprefixer)
   *   .use(precss)
   *
   * @return {Processes} Current processor to make methods chain.
   */


  var _proto = Processor.prototype;

  _proto.use = function use(plugin) {
    this.plugins = this.plugins.concat(this.normalize([plugin]));
    return this;
  }
  /**
   * Parses source CSS and returns a {@link LazyResult} Promise proxy.
   * Because some plugins can be asynchronous it doesn’t make
   * any transformations. Transformations will be applied
   * in the {@link LazyResult} methods.
   *
   * @param {string|toString|Result} css String with input CSS or any object
   *                                     with a `toString()` method,
   *                                     like a Buffer. Optionally, send
   *                                     a {@link Result} instance
   *                                     and the processor will take
   *                                     the {@link Root} from it.
   * @param {processOptions} [opts]      Options.
   *
   * @return {LazyResult} Promise proxy.
   *
   * @example
   * processor.process(css, { from: 'a.css', to: 'a.out.css' })
   *   .then(result => {
   *      console.log(result.css)
   *   })
   */
  ;

  _proto.process = function (_process) {
    function process(_x) {
      return _process.apply(this, arguments);
    }

    process.toString = function () {
      return _process.toString();
    };

    return process;
  }(function (css, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {
      if (process.env.NODE_ENV !== 'production') {
        if (typeof console !== 'undefined' && console.warn) {
          console.warn('You did not set any plugins, parser, or stringifier. ' + 'Right now, PostCSS does nothing. Pick plugins for your case ' + 'on https://www.postcss.parts/ and use them in postcss.config.js.');
        }
      }
    }

    return new _lazyResult.default(this, css, opts);
  });

  _proto.normalize = function normalize(plugins) {
    var normalized = [];

    for (var _iterator = plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var i = _ref;
      if (i.postcss) i = i.postcss;

      if (typeof i === 'object' && Array.isArray(i.plugins)) {
        normalized = normalized.concat(i.plugins);
      } else if (typeof i === 'function') {
        normalized.push(i);
      } else if (typeof i === 'object' && (i.parse || i.stringify)) {
        if (process.env.NODE_ENV !== 'production') {
          throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');
        }
      } else {
        throw new Error(i + ' is not a PostCSS plugin');
      }
    }

    return normalized;
  };

  return Processor;
}();

var _default = Processor;
/**
 * @callback builder
 * @param {string} part          Part of generated CSS connected to this node.
 * @param {Node}   node          AST node.
 * @param {"start"|"end"} [type] Node’s part type.
 */

/**
 * @callback parser
 *
 * @param {string|toString} css   String with input CSS or any object
 *                                with toString() method, like a Buffer.
 * @param {processOptions} [opts] Options with only `from` and `map` keys.
 *
 * @return {Root} PostCSS AST
 */

/**
 * @callback stringifier
 *
 * @param {Node} node       Start node for stringifing. Usually {@link Root}.
 * @param {builder} builder Function to concatenate CSS from node’s parts
 *                          or generate string and source map.
 *
 * @return {void}
 */

/**
 * @typedef {object} syntax
 * @property {parser} parse          Function to generate AST by string.
 * @property {stringifier} stringify Function to generate string by AST.
 */

/**
 * @typedef {object} toString
 * @property {function} toString
 */

/**
 * @callback pluginFunction
 * @param {Root} root     Parsed input CSS.
 * @param {Result} result Result to set warnings or check other plugins.
 */

/**
 * @typedef {object} Plugin
 * @property {function} postcss PostCSS plugin function.
 */

/**
 * @typedef {object} processOptions
 * @property {string} from             The path of the CSS source file.
 *                                     You should always set `from`,
 *                                     because it is used in source map
 *                                     generation and syntax error messages.
 * @property {string} to               The path where you’ll put the output
 *                                     CSS file. You should always set `to`
 *                                     to generate correct source maps.
 * @property {parser} parser           Function to generate AST by string.
 * @property {stringifier} stringifier Class to generate string by AST.
 * @property {syntax} syntax           Object with `parse` and `stringify`.
 * @property {object} map              Source map options.
 * @property {boolean} map.inline                    Does source map should
 *                                                   be embedded in the output
 *                                                   CSS as a base64-encoded
 *                                                   comment.
 * @property {string|object|false|function} map.prev Source map content
 *                                                   from a previous
 *                                                   processing step
 *                                                   (for example, Sass).
 *                                                   PostCSS will try to find
 *                                                   previous map automatically,
 *                                                   so you could disable it by
 *                                                   `false` value.
 * @property {boolean} map.sourcesContent            Does PostCSS should set
 *                                                   the origin content to map.
 * @property {string|false} map.annotation           Does PostCSS should set
 *                                                   annotation comment to map.
 * @property {string} map.from                       Override `from` in map’s
 *                                                   sources`.
 */

exports.default = _default;
module.exports = exports.default;

});

var vendor_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

/**
 * Contains helpers for working with vendor prefixes.
 *
 * @example
 * const vendor = postcss.vendor
 *
 * @namespace vendor
 */
var vendor = {
  /**
   * Returns the vendor prefix extracted from an input string.
   *
   * @param {string} prop String with or without vendor prefix.
   *
   * @return {string} vendor prefix or empty string
   *
   * @example
   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'
   * postcss.vendor.prefix('tab-size')      //=> ''
   */
  prefix: function prefix(prop) {
    var match = prop.match(/^(-\w+-)/);

    if (match) {
      return match[0];
    }

    return '';
  },

  /**
     * Returns the input string stripped of its vendor prefix.
     *
     * @param {string} prop String with or without vendor prefix.
     *
     * @return {string} String name without vendor prefixes.
     *
     * @example
     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'
     */
  unprefixed: function unprefixed(prop) {
    return prop.replace(/^-\w+-/, '');
  }
};
var _default = vendor;
exports.default = _default;
module.exports = exports.default;

});

var postcss_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;
exports.default = void 0;

var _declaration = _interopRequireDefault(declaration);

var _processor = _interopRequireDefault(processor);

var _stringify = _interopRequireDefault(stringify_1);

var _comment = _interopRequireDefault(comment);

var _atRule = _interopRequireDefault(atRule);

var _vendor = _interopRequireDefault(vendor_1);

var _parse = _interopRequireDefault(parse_1);

var _list = _interopRequireDefault(list_1);

var _rule = _interopRequireDefault(rule);

var _root = _interopRequireDefault(root);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Create a new {@link Processor} instance that will apply `plugins`
 * as CSS processors.
 *
 * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.
 *        See {@link Processor#use} for plugin format.
 *
 * @return {Processor} Processor to process multiple CSS.
 *
 * @example
 * import postcss from 'postcss'
 *
 * postcss(plugins).process(css, { from, to }).then(result => {
 *   console.log(result.css)
 * })
 *
 * @namespace postcss
 */
function postcss() {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins.length === 1 && Array.isArray(plugins[0])) {
    plugins = plugins[0];
  }

  return new _processor.default(plugins);
}
/**
 * Creates a PostCSS plugin with a standard API.
 *
 * The newly-wrapped function will provide both the name and PostCSS
 * version of the plugin.
 *
 * ```js
 * const processor = postcss([replace])
 * processor.plugins[0].postcssPlugin  //=> 'postcss-replace'
 * processor.plugins[0].postcssVersion //=> '6.0.0'
 * ```
 *
 * The plugin function receives 2 arguments: {@link Root}
 * and {@link Result} instance. The function should mutate the provided
 * `Root` node. Alternatively, you can create a new `Root` node
 * and override the `result.root` property.
 *
 * ```js
 * const cleaner = postcss.plugin('postcss-cleaner', () => {
 *   return (root, result) => {
 *     result.root = postcss.root()
 *   }
 * })
 * ```
 *
 * As a convenience, plugins also expose a `process` method so that you can use
 * them as standalone tools.
 *
 * ```js
 * cleaner.process(css, processOpts, pluginOpts)
 * // This is equivalent to:
 * postcss([ cleaner(pluginOpts) ]).process(css, processOpts)
 * ```
 *
 * Asynchronous plugins should return a `Promise` instance.
 *
 * ```js
 * postcss.plugin('postcss-import', () => {
 *   return (root, result) => {
 *     return new Promise( (resolve, reject) => {
 *       fs.readFile('base.css', (base) => {
 *         root.prepend(base)
 *         resolve()
 *       })
 *     })
 *   }
 * })
 * ```
 *
 * Add warnings using the {@link Node#warn} method.
 * Send data to other plugins using the {@link Result#messages} array.
 *
 * ```js
 * postcss.plugin('postcss-caniuse-test', () => {
 *   return (root, result) => {
 *     root.walkDecls(decl => {
 *       if (!caniuse.support(decl.prop)) {
 *         decl.warn(result, 'Some browsers do not support ' + decl.prop)
 *       }
 *     })
 *   }
 * })
 * ```
 *
 * @param {string} name          PostCSS plugin name. Same as in `name`
 *                               property in `package.json`. It will be saved
 *                               in `plugin.postcssPlugin` property.
 * @param {function} initializer Will receive plugin options
 *                               and should return {@link pluginFunction}
 *
 * @return {Plugin} PostCSS plugin.
 */


postcss.plugin = function plugin(name, initializer) {
  function creator() {
    var transformer = initializer.apply(void 0, arguments);
    transformer.postcssPlugin = name;
    transformer.postcssVersion = new _processor.default().version;
    return transformer;
  }

  var cache;
  Object.defineProperty(creator, 'postcss', {
    get: function get() {
      if (!cache) cache = creator();
      return cache;
    }
  });

  creator.process = function (css, processOpts, pluginOpts) {
    return postcss([creator(pluginOpts)]).process(css, processOpts);
  };

  return creator;
};
/**
 * Default function to convert a node tree into a CSS string.
 *
 * @param {Node} node       Start node for stringifing. Usually {@link Root}.
 * @param {builder} builder Function to concatenate CSS from node’s parts
 *                          or generate string and source map.
 *
 * @return {void}
 *
 * @function
 */


postcss.stringify = _stringify.default;
/**
 * Parses source css and returns a new {@link Root} node,
 * which contains the source CSS nodes.
 *
 * @param {string|toString} css   String with input CSS or any object
 *                                with toString() method, like a Buffer
 * @param {processOptions} [opts] Options with only `from` and `map` keys.
 *
 * @return {Root} PostCSS AST.
 *
 * @example
 * // Simple CSS concatenation with source map support
 * const root1 = postcss.parse(css1, { from: file1 })
 * const root2 = postcss.parse(css2, { from: file2 })
 * root1.append(root2).toResult().css
 *
 * @function
 */

postcss.parse = _parse.default;
/**
 * Contains the {@link vendor} module.
 *
 * @type {vendor}
 *
 * @example
 * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']
 */

postcss.vendor = _vendor.default;
/**
 * Contains the {@link list} module.
 *
 * @member {list}
 *
 * @example
 * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']
 */

postcss.list = _list.default;
/**
 * Creates a new {@link Comment} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Comment} New comment node
 *
 * @example
 * postcss.comment({ text: 'test' })
 */

postcss.comment = function (defaults) {
  return new _comment.default(defaults);
};
/**
 * Creates a new {@link AtRule} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {AtRule} new at-rule node
 *
 * @example
 * postcss.atRule({ name: 'charset' }).toString() //=> "@charset"
 */


postcss.atRule = function (defaults) {
  return new _atRule.default(defaults);
};
/**
 * Creates a new {@link Declaration} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Declaration} new declaration node
 *
 * @example
 * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> "color: red"
 */


postcss.decl = function (defaults) {
  return new _declaration.default(defaults);
};
/**
 * Creates a new {@link Rule} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Rule} new rule node
 *
 * @example
 * postcss.rule({ selector: 'a' }).toString() //=> "a {\n}"
 */


postcss.rule = function (defaults) {
  return new _rule.default(defaults);
};
/**
 * Creates a new {@link Root} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Root} new root node.
 *
 * @example
 * postcss.root({ after: '\n' }).toString() //=> "\n"
 */


postcss.root = function (defaults) {
  return new _root.default(defaults);
};

var _default = postcss;
exports.default = _default;
module.exports = exports.default;

});

var aac={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB","132":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E","16":"A B"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"132":"N"},N:{"1":"A","2":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"132":"RC"}},B:6,C:"AAC audio file format"};

var abortcontroller={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H Q"},C:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB"},E:{"1":"O H BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB","130":"C R"},F:{"1":"5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"MC XB NC OC","2":"G IC JC KC LC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"AbortController & AbortSignal"};

var ac3Ec3={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L","2":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB","132":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D","132":"A"},K:{"2":"A B C P R VB","132":"BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"132":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs"};

var accelerometer={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"AB LB CB JB EB FB GB HB DB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Accelerometer"};

var addeventlistener={A:{A:{"1":"E A B","130":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","257":"sB KB G W I pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"EventTarget.addEventListener()"};

var alternateStylesheet={A:{A:{"1":"F E A B","2":"I D iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"E B C lB mB nB oB R VB qB BB","16":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"16":"S"},M:{"16":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"16":"QC"},S:{"1":"RC"}},B:1,C:"Alternate stylesheet"};

var ambientLight={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O","132":"H Q J K L","322":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB","132":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB","194":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","322":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"132":"RC"}},B:4,C:"Ambient Light Sensor"};

var apng={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB"},D:{"1":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB"},E:{"1":"F E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:7,C:"Animated PNG (APNG)"};

var arrayFindIndex={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","2":"G W I D 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","16":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Array.prototype.findIndex"};

var arrayFind={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","16":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","2":"G W I D 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","16":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Array.prototype.find"};

var arrayFlat={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB pB hB"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N"},E:{"1":"C O H BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB R"},F:{"1":"8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 6 7 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"XB NC OC","2":"G IC JC KC LC MC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"flat & flatMap array methods"};

var arrayIncludes={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Array.prototype.includes"};

var arrowFunctions={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Arrow functions"};

var asmjs={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L","132":"V y M WB S","322":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f","132":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","132":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","132":"P"},L:{"132":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G","132":"IC JC KC LC MC XB NC OC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"1":"RC"}},B:6,C:"asm.js"};

var asyncClipboard={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","66":"AB LB CB JB"},E:{"1":"H jB kB","2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","16":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T"},G:{"1":"8B 9B","2":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B","16":"YB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Asynchronous Clipboard API"};

var asyncFunctions={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C O","194":"H"},C:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB","514":"XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB","514":"ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Async functions"};

var asyncIterationsAndGenerators={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB"},E:{"1":"C O H BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB R"},F:{"1":"2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Async iterators and generators"};

var atobBtoa={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB mB","16":"nB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","16":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Base64 encoding and decoding"};

var audioApi={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E","33":"A B C O H Q J K L X Y Z a b c d e f g h i j k l"},E:{"2":"G W 0B YB cB","33":"I D F E A B C O H dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z"},G:{"2":"YB rB IB tB","33":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Web Audio API"};

var audio={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","132":"G W I D F E A B C O H Q J K L X pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E","4":"lB mB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","2":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Audio element"};

var audiotracks={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L","322":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB","194":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w","322":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W I 0B YB cB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j lB mB nB oB R VB qB BB","322":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","322":"P"},L:{"322":"S"},M:{"2":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"194":"RC"}},B:1,C:"Audio Tracks"};

var autofocus={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:1,C:"Autofocus attribute"};

var auxclick={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","129":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","16":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"Auxclick"};

var av1={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K","194":"L"},C:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","66":"7 8 9 AB LB CB","1090":"JB EB FB GB","1284":"HB","1540":"DB"},D:{"1":"MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB","66":"U N T"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 6 7 8 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1090":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"AV1 video format"};

var avif={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB pB hB","194":"TB UB V y M"},D:{"1":"gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"AVIF image format"};

var backgroundAttachment={A:{A:{"1":"E A B","132":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","132":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","132":"E lB mB"},G:{"2":"YB rB IB","772":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC FC GC","132":"EC IB"},J:{"260":"D A"},K:{"1":"B C P R VB BB","132":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"2":"G","1028":"IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1028":"QC"},S:{"1":"RC"}},B:4,C:"CSS background-attachment"};

var backgroundClipText={A:{A:{"2":"I D F E A B iB"},B:{"36":"V y M WB S","257":"Q J K L","548":"C O H"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","130":"0"},D:{"36":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"16":"0B YB","36":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"16":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"16":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"16":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"16":"S"},M:{"16":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"130":"RC"}},B:1,C:"CSS3 Background-clip: text"};

var backgroundImgOpts={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB","36":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","516":"G W I D F E A B C O H"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","772":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB","36":"mB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","4":"YB rB IB uB","516":"tB"},H:{"132":"AC"},I:{"1":"M FC GC","36":"BC","516":"KB G EC IB","548":"CC DC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 Background-image options"};

var backgroundPositionXY={A:{A:{"1":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:7,C:"background-position-x & background-position-y"};

var backgroundRepeatRoundSpace={A:{A:{"1":"A B","2":"I D F iB","132":"E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E Q J K L lB mB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:4,C:"CSS background-repeat round and space"};

var backgroundSync={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V pB hB","16":"y M"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Background Sync API"};

var batteryStatus={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 v w x P z","2":"4 5 6 7 8 9 sB KB G W I D F E AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","132":"J K L X Y Z a b c d e f g h i j k l m n o p q r s t u","164":"A B C O H Q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o","66":"p"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Battery Status API"};

var beacon={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Beacon API"};

var beforeafterprint={A:{A:{"1":"I D F E A B","16":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB"},D:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"2":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:1,C:"Printing Events"};

var bigint={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB pB hB","194":"HB DB U"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB"},E:{"1":"H kB","2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB jB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"MC XB NC OC","2":"G IC JC KC LC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"BigInt"};

var blobbuilder={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB","36":"I D F E A B C"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D","36":"F E A B C O H Q J K L X"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"M","2":"BC CC DC","36":"KB G EC IB FC GC"},J:{"1":"A","2":"D"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Blob constructing"};

var bloburls={A:{A:{"2":"I D F E iB","129":"A B"},B:{"1":"Q J K L V y M WB S","129":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D","33":"F E A B C O H Q J K L X Y Z a"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","33":"uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB BC CC DC","33":"G EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Blob URLs"};

var borderImage={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"H Q J K L V y M WB S","129":"C O"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","260":"0 1 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","804":"G W I D F E A B C O H pB hB"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","260":"3 4 5 6 7","388":"0 1 2 i j k l m n o p q r s t u v w x P z","1412":"Q J K L X Y Z a b c d e f g h","1956":"G W I D F E A B C O H"},E:{"129":"A B C O H fB XB R BB jB kB","1412":"I D F E dB eB","1956":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T","2":"E lB mB","260":"q r s t u","388":"Q J K L X Y Z a b c d e f g h i j k l m n o p","1796":"nB oB","1828":"B C R VB qB BB"},G:{"129":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","1412":"F uB vB wB xB","1956":"YB rB IB tB"},H:{"1828":"AC"},I:{"388":"M FC GC","1956":"KB G BC CC DC EC IB"},J:{"1412":"A","1924":"D"},K:{"2":"A","388":"P","1828":"B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"388":"HC"},P:{"1":"KC LC MC XB NC OC","260":"IC JC","388":"G"},Q:{"260":"PC"},R:{"260":"QC"},S:{"260":"RC"}},B:4,C:"CSS3 Border images"};

var borderRadius={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","257":"0 1 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","289":"KB pB hB","292":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G"},E:{"1":"W D F E A B C O H eB fB XB R BB jB kB","33":"G 0B YB","129":"I cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"YB"},H:{"2":"AC"},I:{"1":"KB G M CC DC EC IB FC GC","33":"BC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"257":"RC"}},B:4,C:"CSS3 Border-radius (rounded corners)"};

var broadcastchannel={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p pB hB"},D:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:1,C:"BroadcastChannel"};

var brotli={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v pB hB"},D:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"1","257":"2"},E:{"1":"O H jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB","513":"B C R BB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB","194":"o p"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:6,C:"Brotli Accept-Encoding/Content-Encoding"};

var calc={A:{A:{"2":"I D F iB","260":"E","516":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","33":"G W I D F E A B C O H Q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L","33":"X Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","33":"uB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB","132":"FC GC"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"calc() as CSS unit value"};

var canvasBlending={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W I 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Canvas blend modes"};

var canvasText={A:{A:{"1":"E A B","2":"iB","8":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","8":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","8":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","8":"E lB mB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","8":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Text API for Canvas"};

var canvas={A:{A:{"1":"E A B","2":"iB","8":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","132":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","132":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"260":"AC"},I:{"1":"KB G M EC IB FC GC","132":"BC CC DC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Canvas (basic support)"};

var chUnit={A:{A:{"2":"I D F iB","132":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"ch (character) unit"};

var chacha20Poly1305={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k","129":"0 l m n o p q r s t u v w x P z"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC","16":"GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ChaCha20-Poly1305 cipher suites for TLS"};

var channelMessaging={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d pB hB","194":"e f g h i j k l m n o p q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB mB","16":"nB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Channel messaging"};

var childnodeRemove={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","16":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"ChildNode.remove()"};

var classlist={A:{A:{"8":"I D F E iB","1924":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB pB","516":"c d","772":"G W I D F E A B C O H Q J K L X Y Z a b hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G W I D","516":"c d e f","772":"b","900":"F E A B C O H Q J K L X Y Z a"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","8":"G W 0B YB","900":"I cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","8":"E B lB mB nB oB R","900":"C VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB","900":"tB uB"},H:{"900":"AC"},I:{"1":"M FC GC","8":"BC CC DC","900":"KB G EC IB"},J:{"1":"A","900":"D"},K:{"1":"P","8":"A B","900":"C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"900":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"classList (DOMTokenList)"};

var clearSiteDataHeader={A:{A:{"16":"I D F E A B iB"},B:{"1":"V y M WB S","16":"C O H Q J K L"},C:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB pB hB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB"},E:{"16":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","16":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"16":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"1":"M","16":"KB G BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"16":"RC"}},B:5,C:"Clear-Site-Data Header"};

var clientHintsDprWidthViewport={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:6,C:"Client Hints: DPR, Width, Viewport-Width"};

var clipboard={A:{A:{"2436":"I D F E A B iB"},B:{"260":"K L","2436":"C O H Q J","10244":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB","772":"a b c d e f g h i j k l m n o p q r s","4100":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C","2564":"O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u","10244":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"C O H BB jB kB","16":"0B YB","2308":"A B XB R","2820":"G W I D F E cB dB eB fB"},F:{"2":"E B lB mB nB oB R VB qB","16":"C","516":"BB","2564":"Q J K L X Y Z a b c d e f g h","10244":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","2820":"F tB uB vB wB xB yB zB ZB 1B 2B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","2308":"M FC GC"},J:{"2":"D","2308":"A"},K:{"2":"A B C R VB","16":"BB","3076":"P"},L:{"2052":"S"},M:{"1028":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2052":"IC JC KC LC MC XB NC OC","2308":"G"},Q:{"10244":"PC"},R:{"2052":"QC"},S:{"4100":"RC"}},B:5,C:"Synchronous Clipboard API"};

var comparedocumentposition={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","132":"Q J K L X Y Z a b c d e f g h"},E:{"1":"A B C O H XB R BB jB kB","16":"G W I 0B YB","132":"D F E dB eB fB","260":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","16":"E B lB mB nB oB R VB","132":"Q J"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB","132":"F rB IB tB uB vB wB xB yB"},H:{"1":"AC"},I:{"1":"M FC GC","16":"BC CC","132":"KB G DC EC IB"},J:{"132":"D A"},K:{"1":"C P BB","16":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Node.compareDocumentPosition()"};

var consoleBasic={A:{A:{"1":"A B","2":"I D iB","132":"F E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E lB mB nB oB"},G:{"1":"YB rB IB tB","513":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"4097":"AC"},I:{"1025":"KB G M BC CC DC EC IB FC GC"},J:{"258":"D A"},K:{"2":"A","258":"B C P R VB BB"},L:{"1025":"S"},M:{"2049":"N"},N:{"258":"A B"},O:{"258":"HC"},P:{"1025":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1025":"QC"},S:{"1":"RC"}},B:1,C:"Basic console logging functions"};

var consoleTime={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E lB mB nB oB","16":"B"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"P","16":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"console.time and console.timeEnd"};

var _const={A:{A:{"2":"I D F E A iB","2052":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"sB KB G W I D F E A B C pB hB","260":"O H Q J K L X Y Z a b c d e f g h i j k l m n"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","260":"G W I D F E A B C O H Q J K L X Y","772":"Z a b c d e f g h i j k l m n o p q r s","1028":"0 t u v w x P z"},E:{"1":"A B C O H XB R BB jB kB","260":"G W 0B YB","772":"I D F E cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E lB","132":"B mB nB oB R VB","644":"C qB BB","772":"Q J K L X Y Z a b c d e f","1028":"g h i j k l m n"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","260":"YB rB IB","772":"F tB uB vB wB xB yB"},H:{"644":"AC"},I:{"1":"M","16":"BC CC","260":"DC","772":"KB G EC IB FC GC"},J:{"772":"D A"},K:{"1":"P","132":"A B R VB","644":"C BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","1028":"G"},Q:{"1":"PC"},R:{"1028":"QC"},S:{"1":"RC"}},B:6,C:"const"};

var constraintValidation={A:{A:{"2":"I D F E iB","900":"A B"},B:{"1":"K L V y M WB S","388":"H Q J","900":"C O"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","260":"1 2","388":"0 h i j k l m n o p q r s t u v w x P z","900":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","388":"d e f g h i j k l m n o p q r","900":"Q J K L X Y Z a b c"},E:{"1":"A B C O H XB R BB jB kB","16":"G W 0B YB","388":"F E eB fB","900":"I D cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E B lB mB nB oB R VB","388":"Q J K L X Y Z a b c d e","900":"C qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB","388":"F vB wB xB yB","900":"tB uB"},H:{"2":"AC"},I:{"1":"M","16":"KB BC CC DC","388":"FC GC","900":"G EC IB"},J:{"16":"D","388":"A"},K:{"1":"P","16":"A B R VB","900":"C BB"},L:{"1":"S"},M:{"1":"N"},N:{"900":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"388":"RC"}},B:1,C:"Constraint Validation API"};

var contenteditable={A:{A:{"1":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB","4":"KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"contenteditable attribute (basic support)"};

var contentsecuritypolicy={A:{A:{"2":"I D F E iB","132":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","129":"G W I D F E A B C O H Q J K L X Y Z a"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O","257":"H Q J K L X Y Z a b c"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W 0B YB","257":"I dB","260":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","257":"uB","260":"tB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D","257":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"257":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Content Security Policy 1.0"};

var contentsecuritypolicy2={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H","32772":"Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB","132":"j k l m","260":"n","516":"o p q r s t u v w","8196":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n","1028":"o p q","2052":"r"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a lB mB nB oB R VB qB BB","1028":"b c d","2052":"e"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"4100":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"8196":"RC"}},B:2,C:"Content Security Policy Level 2"};

var cors={A:{A:{"1":"B","2":"I D iB","132":"A","260":"F E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB","1025":"JB EB FB GB HB DB U N T MB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C"},E:{"2":"0B YB","513":"I D F E A B C O H dB eB fB XB R BB jB kB","644":"G W cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB"},G:{"513":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","644":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"M FC GC","132":"KB G BC CC DC EC IB"},J:{"1":"A","132":"D"},K:{"1":"C P BB","2":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","132":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Cross-Origin Resource Sharing"};

var createimagebitmap={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t pB hB","3076":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","132":"2 3","260":"4 5","516":"6 7 8 9 AB"},E:{"2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB","16":"H jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o lB mB nB oB R VB qB BB","132":"p q","260":"r s","516":"t u v w x"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"3076":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","16":"G IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"3076":"RC"}},B:1,C:"createImageBitmap"};

var credentialManagement={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","66":"0 1 2","129":"3 4 5 6 7 8"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Credential Management API"};

var cryptography={A:{A:{"2":"iB","8":"I D F E A","164":"B"},B:{"1":"V y M WB S","513":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j pB hB","66":"k l"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o"},E:{"1":"B C O H R BB jB kB","8":"G W I D 0B YB cB dB","289":"F E A eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","8":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB tB uB vB","289":"F wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","8":"KB G BC CC DC EC IB FC GC"},J:{"8":"D A"},K:{"1":"P","8":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A","164":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Web Cryptography"};

var cssAll={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"1":"M GC","2":"KB G BC CC DC EC IB FC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS all property"};

var cssAnimation={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G pB hB","33":"W I D F E A B C O H Q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"0B YB","33":"I D F cB dB eB","292":"G W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB","33":"C Q J K L X Y Z a b c d e f g h"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"F uB vB wB","164":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"M","33":"G EC IB FC GC","164":"KB BC CC DC"},J:{"33":"D A"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS Animation"};

var cssAnyLink={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB","33":"0 1 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB"},E:{"1":"E A B C O H fB XB R BB jB kB","16":"G W I 0B YB cB","33":"D F dB eB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB","33":"F uB vB wB"},H:{"2":"AC"},I:{"1":"M","16":"KB G BC CC DC EC IB","33":"FC GC"},J:{"16":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"33":"HC"},P:{"1":"MC XB NC OC","16":"G","33":"IC JC KC LC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"33":"RC"}},B:5,C:"CSS :any-link selector"};

var cssAppearance={A:{A:{"2":"I D F E A B iB"},B:{"1":"S","33":"WB","164":"V y M","388":"C O H Q J K L"},C:{"1":"y M","164":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","676":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m pB hB"},D:{"1":"S gB bB aB","33":"WB","164":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},E:{"164":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","164":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"164":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"164":"KB G M BC CC DC EC IB FC GC"},J:{"164":"D A"},K:{"2":"A B C R VB BB","164":"P"},L:{"1":"S"},M:{"164":"N"},N:{"2":"A","388":"B"},O:{"164":"HC"},P:{"164":"G IC JC KC LC MC XB NC OC"},Q:{"164":"PC"},R:{"164":"QC"},S:{"164":"RC"}},B:5,C:"CSS Appearance"};

var cssApplyRule={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","194":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p lB mB nB oB R VB qB BB","194":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","194":"P"},L:{"194":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G","194":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"194":"QC"},S:{"2":"RC"}},B:7,C:"CSS @apply rule"};

var cssAtCounterStyle={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB","132":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"132":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"132":"RC"}},B:4,C:"CSS Counter Styles"};

var cssBackdropFilter={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J","257":"K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T pB hB","578":"MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P","194":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB"},E:{"2":"G W I D F 0B YB cB dB eB","33":"E A B C O H fB XB R BB jB kB"},F:{"1":"GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l lB mB nB oB R VB qB BB","194":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB CB EB FB"},G:{"2":"F YB rB IB tB uB vB wB","33":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","194":"P"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"OC","2":"G","194":"IC JC KC LC MC XB NC"},Q:{"194":"PC"},R:{"194":"QC"},S:{"2":"RC"}},B:7,C:"CSS Backdrop Filter"};

var cssBackgroundOffsets={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS background-position edge offsets"};

var cssBackgroundblendmode={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m","260":"P"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D 0B YB cB dB","132":"F E A eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z lB mB nB oB R VB qB BB","260":"l"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","132":"F wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","260":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS background-blend-mode"};

var cssBoxdecorationbreak={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","164":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z","164":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I 0B YB cB","164":"D F E A B C O H dB eB fB XB R BB jB kB"},F:{"2":"E lB mB nB oB","129":"B C R VB qB BB","164":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB IB tB uB","164":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"132":"AC"},I:{"2":"KB G BC CC DC EC IB","164":"M FC GC"},J:{"2":"D","164":"A"},K:{"2":"A","129":"B C R VB BB","164":"P"},L:{"164":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"164":"G IC JC KC LC MC XB NC OC"},Q:{"164":"PC"},R:{"164":"QC"},S:{"1":"RC"}},B:5,C:"CSS box-decoration-break"};

var cssBoxshadow={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","33":"pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","33":"W","164":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"rB IB","164":"YB"},H:{"2":"AC"},I:{"1":"G M EC IB FC GC","164":"KB BC CC DC"},J:{"1":"A","33":"D"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 Box-shadow"};

var cssCanvas={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","16":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"0B YB","33":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a b c d e f g h i j k l m"},G:{"33":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"M","33":"KB G BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"IC JC KC LC MC XB NC OC","33":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"CSS Canvas Drawings"};

var cssCaretColor={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"CSS caret-color"};

var cssCaseInsensitive={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:5,C:"Case-insensitive CSS attribute selectors"};

var cssClipPath={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K","260":"V y M WB S","3138":"L"},C:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB","644":"0 1 2 3 4 5 z"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b","260":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","292":"0 1 2 3 4 5 6 c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I 0B YB cB dB","292":"D F E A B C O H eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","260":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","292":"Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t"},G:{"2":"YB rB IB tB uB","292":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","260":"M","292":"FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","292":"P"},L:{"260":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"292":"HC"},P:{"292":"G IC JC KC LC MC XB NC OC"},Q:{"292":"PC"},R:{"260":"QC"},S:{"644":"RC"}},B:4,C:"CSS clip-path property (for HTML)"};

var cssColorAdjust={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","33":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"16":"G W I D F E A B C O H Q J K L","33":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W 0B YB cB","33":"I D F E A B C O H dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"16":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"16":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"2":"A B C P R VB BB"},L:{"16":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"16":"QC"},S:{"1":"RC"}},B:5,C:"CSS color-adjust"};

var cssColorFunction={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS color function"};

var cssConicGradients={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB pB hB","578":"RB SB TB UB V y M"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB","194":"LB CB JB EB FB GB HB DB U N"},E:{"1":"O H BB jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"1":"GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x lB mB nB oB R VB qB BB","194":"0 1 2 3 4 5 6 7 8 9 P z AB CB EB FB"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"XB NC OC","2":"G IC JC KC LC MC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Conical Gradients"};

var cssContainment={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s pB hB","322":"0 1 2 3 t u v w x P z","336":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N"},D:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"3"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p lB mB nB oB R VB qB BB","194":"q r"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"322":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"322":"RC"}},B:4,C:"CSS Containment"};

var cssCounters={A:{A:{"1":"F E A B","2":"I D iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS Counters"};

var cssCrispEdges={A:{A:{"2":"I iB","2340":"D F E A B"},B:{"2":"C O H Q J K L","1025":"V y M WB S"},C:{"2":"sB KB pB","513":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M","545":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s","1025":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H XB R BB jB kB","2":"G W 0B YB cB","164":"I","4644":"D F E dB eB fB"},F:{"2":"E B Q J K L X Y Z a b c d e f lB mB nB oB R VB","545":"C qB BB","1025":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","4260":"tB uB","4644":"F vB wB xB yB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","1025":"M"},J:{"2":"D","4260":"A"},K:{"2":"A B R VB","545":"C BB","1025":"P"},L:{"1025":"S"},M:{"545":"N"},N:{"2340":"A B"},O:{"1":"HC"},P:{"1025":"G IC JC KC LC MC XB NC OC"},Q:{"1025":"PC"},R:{"1025":"QC"},S:{"4097":"RC"}},B:7,C:"Crisp edges/pixelated images"};

var cssCrossFade={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","33":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"G W I D F E A B C O H Q J","33":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H XB R BB jB kB","2":"G W 0B YB","33":"I D F E cB dB eB fB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","33":"F tB uB vB wB xB yB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","33":"M FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","33":"P"},L:{"33":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"33":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"33":"QC"},S:{"2":"RC"}},B:4,C:"CSS Cross-Fade Function"};

var cssDefaultPseudo={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB KB pB hB"},D:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","132":"0 1 2 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","16":"G W 0B YB","132":"I D F E A cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E B lB mB nB oB R VB","132":"Q J K L X Y Z a b c d e f g h i j k l m n o p","260":"C qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB uB","132":"F vB wB xB yB zB"},H:{"260":"AC"},I:{"1":"M","16":"KB BC CC DC","132":"G EC IB FC GC"},J:{"16":"D","132":"A"},K:{"1":"P","16":"A B C R VB","260":"BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"132":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","132":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:7,C:":default CSS pseudo-class"};

var cssDescendantGtgt={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L y M WB S","16":"V"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","16":"gB bB aB"},E:{"1":"B","2":"G W I D F E A C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Explicit descendant combinator >>"};

var cssDeviceadaptation={A:{A:{"2":"I D F E iB","164":"A B"},B:{"66":"V y M WB S","164":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g","66":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r lB mB nB oB R VB qB BB","66":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"292":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A P","292":"B C R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"164":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"66":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Device Adaptation"};

var cssDirPseudo={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J pB hB","33":"0 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"33":"RC"}},B:5,C:":dir() CSS pseudo-class"};

var cssDisplayContents={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","260":"V y M WB S"},C:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o pB hB","260":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"AB LB CB JB EB FB GB","260":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"H jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB","260":"O","772":"C R BB"},F:{"2":"0 1 2 3 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","260":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T"},G:{"1":"8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B","260":"2B 3B 4B 5B 6B 7B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","260":"M"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"260":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC","260":"MC XB NC OC"},Q:{"260":"PC"},R:{"2":"QC"},S:{"260":"RC"}},B:5,C:"CSS display: contents"};

var cssElementFunction={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"33":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","164":"sB KB pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"33":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"33":"RC"}},B:5,C:"CSS element() function"};

var cssEnvFunction={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB pB hB"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB","132":"B"},F:{"1":"8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 6 7 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB","132":"1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"XB NC OC","2":"G IC JC KC LC MC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"CSS Environment Variables env()"};

var cssExclusions={A:{A:{"2":"I D F E iB","33":"A B"},B:{"2":"V y M WB S","33":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"33":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Exclusions Level 1"};

var cssFeaturequeries={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS Feature Queries"};

var cssFilterFunction={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB","33":"E"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB","33":"xB yB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS filter() function"};

var cssFilters={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","1028":"O H Q J K L","1346":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB","196":"m","516":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l hB"},D:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K","33":"0 1 2 3 4 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W 0B YB cB","33":"I D F E dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a b c d e f g h i j k l m n o p q r"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","33":"F uB vB wB xB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB","33":"FC GC"},J:{"2":"D","33":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","33":"G IC JC"},Q:{"1":"PC"},R:{"33":"QC"},S:{"1":"RC"}},B:5,C:"CSS Filter Effects"};

var cssFirstLetter={A:{A:{"1":"E A B","16":"iB","516":"F","1540":"I D"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","132":"KB","260":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"W I D F","132":"G"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"W 0B","132":"G YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","16":"E lB","260":"B mB nB oB R VB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"1":"AC"},I:{"1":"KB G M EC IB FC GC","16":"BC CC","132":"DC"},J:{"1":"D A"},K:{"1":"C P BB","260":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"::first-letter CSS pseudo-element selector"};

var cssFirstLine={A:{A:{"1":"E A B","132":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS first-line pseudo-element"};

var cssFixed={A:{A:{"1":"D F E A B","2":"iB","8":"I"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB XB R BB jB kB","1025":"fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","132":"tB uB vB"},H:{"2":"AC"},I:{"1":"KB M FC GC","260":"BC CC DC","513":"G EC IB"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS position:fixed"};

var cssFocusVisible={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","328":"V y M WB S"},C:{"2":"sB KB pB hB","161":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB","328":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB lB mB nB oB R VB qB BB","328":"DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"328":"S"},M:{"161":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"161":"RC"}},B:7,C:":focus-visible CSS pseudo-class"};

var cssFocusWithin={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB","194":"LB"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x lB mB nB oB R VB qB BB","194":"P"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"16":"QC"},S:{"2":"RC"}},B:7,C:":focus-within CSS pseudo-class"};

var cssFontRenderingControls={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x pB hB","322":"0 1 2 3 4 5 6 7 8 9 P z"},D:{"1":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"1 2 3 4 5 6 7 8 9 AB LB"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB","194":"o p q r s t u v w x P"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","194":"P"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G","194":"IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"322":"RC"}},B:5,C:"CSS font-rendering controls"};

var cssFontStretch={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS font-stretch"};

var cssGencontent={A:{A:{"1":"E A B","2":"I D iB","132":"F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS Generated content for pseudo-elements"};

var cssGradients={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB","260":"J K L X Y Z a b c d e f g h i j k l m n","292":"G W I D F E A B C O H Q hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"A B C O H Q J K L X Y Z a b c d","548":"G W I D F E"},E:{"2":"0B YB","260":"D F E A B C O H dB eB fB XB R BB jB kB","292":"I cB","804":"G W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB","33":"C qB","164":"R VB"},G:{"260":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","292":"tB uB","804":"YB rB IB"},H:{"2":"AC"},I:{"1":"M FC GC","33":"G EC IB","548":"KB BC CC DC"},J:{"1":"A","548":"D"},K:{"1":"P BB","2":"A B","33":"C","164":"R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS Gradients"};

var cssGrid={A:{A:{"2":"I D F iB","8":"E","292":"A B"},B:{"1":"J K L V y M WB S","292":"C O H Q"},C:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L pB hB","8":"X Y Z a b c d e f g h i j k l m n o p q r","584":"0 1 2 3 s t u v w x P z","1025":"4 5"},D:{"1":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c","8":"d e f g","200":"0 1 2 3 4 5 6 7 8 h i j k l m n o p q r s t u v w x P z","1025":"9"},E:{"1":"B C O H XB R BB jB kB","2":"G W 0B YB cB","8":"I D F E A dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB","200":"g h i j k l m n o p q r s t u v"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","8":"F uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC","8":"IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"292":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"IC","8":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:4,C:"CSS Grid Layout (level 1)"};

var cssHangingPunctuation={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS hanging-punctuation"};

var cssHas={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:":has() CSS relational pseudo-class"};

var cssHyphenate={A:{A:{"16":"I D F E A B iB"},B:{"1":"V y M WB S","16":"C O H Q J K L"},C:{"16":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"16":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"16":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"16":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"16":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"16":"S"},M:{"16":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"16":"RC"}},B:5,C:"CSS4 Hyphenation"};

var cssHyphens={A:{A:{"2":"I D F E iB","33":"A B"},B:{"33":"C O H Q J K L","132":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB","33":"I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u"},D:{"2":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","132":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W 0B YB","33":"I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB","33":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","132":"M"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"132":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"4":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G","132":"IC"},Q:{"2":"PC"},R:{"132":"QC"},S:{"1":"RC"}},B:5,C:"CSS Hyphenation"};

var cssImageOrientation={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y","257":"M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y","257":"M WB S gB bB aB"},E:{"1":"H kB","2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB jB"},F:{"1":"N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U lB mB nB oB R VB qB BB"},G:{"1":"9B","132":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 image-orientation"};

var cssImageSet={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","33":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y","33":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W 0B YB cB","33":"I D F E dB eB fB","129":"A B C O H XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB IB tB","33":"F uB vB wB xB yB","129":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","33":"M FC GC"},J:{"2":"D","33":"A"},K:{"2":"A B C R VB BB","33":"P"},L:{"33":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"33":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"33":"QC"},S:{"2":"RC"}},B:5,C:"CSS image-set"};

var cssInOutOfRange={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C","260":"O H Q J K L"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB","516":"0 1 h i j k l m n o p q r s t u v w x P z"},D:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G","16":"W I D F E A B C O H","260":"4","772":"0 1 2 3 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G 0B YB","16":"W","772":"I D F E A cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E lB","260":"B C r mB nB oB R VB qB BB","772":"Q J K L X Y Z a b c d e f g h i j k l m n o p q"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","772":"F tB uB vB wB xB yB zB"},H:{"132":"AC"},I:{"1":"M","2":"KB BC CC DC","260":"G EC IB FC GC"},J:{"2":"D","260":"A"},K:{"1":"P","260":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","260":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"516":"RC"}},B:5,C:":in-range and :out-of-range CSS pseudo-classes"};

var cssIndeterminatePseudo={A:{A:{"2":"I D F iB","132":"A B","388":"E"},B:{"1":"V y M WB S","132":"C O H Q J K L"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB KB pB hB","132":"0 1 2 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","388":"G W"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","132":"Q J K L X Y Z a b c d e f g h i j k l m n o p q"},E:{"1":"B C O H XB R BB jB kB","16":"G W I 0B YB","132":"D F E A dB eB fB","388":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E B lB mB nB oB R VB","132":"Q J K L X Y Z a b c d","516":"C qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB uB","132":"F vB wB xB yB zB"},H:{"516":"AC"},I:{"1":"M","16":"KB BC CC DC GC","132":"FC","388":"G EC IB"},J:{"16":"D","132":"A"},K:{"1":"P","16":"A B C R VB","516":"BB"},L:{"1":"S"},M:{"132":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"132":"RC"}},B:7,C:":indeterminate CSS pseudo-class"};

var cssInitialLetter={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F 0B YB cB dB eB","4":"E","164":"A B C O H fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB","164":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Initial Letter"};

var cssInitialValue={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","33":"G W I D F E A B C O H Q J K L pB hB","164":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","16":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS initial value"};

var cssLetterSpacing={A:{A:{"1":"E A B","16":"iB","132":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","16":"0B","132":"G W I YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E lB","132":"B C Q J mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"2":"AC"},I:{"1":"M FC GC","16":"BC CC","132":"KB G DC EC IB"},J:{"132":"D A"},K:{"1":"P","132":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"letter-spacing CSS property"};

var cssLineClamp={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J","33":"V y M WB S","129":"K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U pB hB","33":"N T MB NB OB PB QB RB SB TB UB V y M"},D:{"16":"G W I D F E A B C O","33":"0 1 2 3 4 5 6 7 8 9 H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G 0B YB","33":"W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB IB","33":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"16":"BC CC","33":"KB G M DC EC IB FC GC"},J:{"33":"D A"},K:{"2":"A B C R VB BB","33":"P"},L:{"33":"S"},M:{"33":"N"},N:{"2":"A B"},O:{"33":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"33":"QC"},S:{"2":"RC"}},B:7,C:"CSS line-clamp"};

var cssLogicalProps={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB","164":"KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s pB hB"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","292":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N"},E:{"1":"O H BB jB kB","292":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"1":"DB U N T","2":"E B C lB mB nB oB R VB qB BB","292":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB"},G:{"1":"4B 5B 6B 7B 8B 9B","292":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"1":"M","292":"KB G BC CC DC EC IB FC GC"},J:{"292":"D A"},K:{"2":"A B C R VB BB","292":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"292":"HC"},P:{"1":"XB NC OC","292":"G IC JC KC LC MC"},Q:{"292":"PC"},R:{"292":"QC"},S:{"1":"RC"}},B:5,C:"CSS Logical Properties"};

var cssMarkerPseudo={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U pB hB"},D:{"1":"bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB"},E:{"2":"G W I D F E A B 0B YB cB dB eB fB XB","129":"C O H R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS ::marker pseudo-element"};

var cssMasks={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J","164":"V y M WB S","3138":"K","12292":"L"},C:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","260":"0 1 2 3 4 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"164":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"0B YB","164":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","164":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"164":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"164":"M FC GC","676":"KB G BC CC DC EC IB"},J:{"164":"D A"},K:{"2":"A B C R VB BB","164":"P"},L:{"164":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"164":"HC"},P:{"164":"G IC JC KC LC MC XB NC OC"},Q:{"164":"PC"},R:{"164":"QC"},S:{"260":"RC"}},B:4,C:"CSS Masks"};

var cssMatchesPseudo={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","8388":"V y M WB S"},C:{"16":"sB KB pB hB","548":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB","4097":"UB V y M"},D:{"16":"G W I D F E A B C O H","164":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB","196":"HB DB U","8388":"N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G 0B YB","16":"W","164":"I D F cB dB eB","260":"E A B C O fB XB R BB jB","3073":"H kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","164":"0 1 2 3 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","196":"4 5 6","8388":"7 8 9 AB CB EB FB GB HB DB U N T"},G:{"16":"YB rB IB tB uB","164":"F vB wB","260":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B","3073":"9B"},H:{"2":"AC"},I:{"16":"KB BC CC DC","164":"G M EC IB FC GC"},J:{"16":"D","164":"A"},K:{"2":"A B C R VB BB","164":"P"},L:{"8388":"S"},M:{"548":"N"},N:{"2":"A B"},O:{"164":"HC"},P:{"164":"G IC JC KC LC MC XB NC OC"},Q:{"8388":"PC"},R:{"164":"QC"},S:{"548":"RC"}},B:5,C:":is() CSS pseudo-class"};

var cssMathFunctions={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB pB hB"},D:{"1":"V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB"},E:{"1":"H jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB","132":"C O R BB"},F:{"1":"DB U N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB lB mB nB oB R VB qB BB"},G:{"1":"8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B","132":"2B 3B 4B 5B 6B 7B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"OC","2":"G IC JC KC LC MC XB NC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS math functions min(), max() and clamp()"};

var cssMediaInteraction={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"Media Queries: interaction media features"};

var cssMediaResolution={A:{A:{"2":"I D F iB","132":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","260":"G W I D F E A B C O H Q pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","548":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g"},E:{"2":"0B YB","548":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E","548":"B C lB mB nB oB R VB qB"},G:{"16":"YB","548":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"132":"AC"},I:{"1":"M FC GC","16":"BC CC","548":"KB G DC EC IB"},J:{"548":"D A"},K:{"1":"P BB","548":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Media Queries: resolution feature"};

var cssMediaScripting={A:{A:{"2":"I D F E A B iB"},B:{"16":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","16":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","16":"gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Media Queries: scripting media feature"};

var cssMediaqueries={A:{A:{"8":"I D F iB","129":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","129":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","129":"G W I cB","388":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","129":"YB rB IB tB uB"},H:{"1":"AC"},I:{"1":"M FC GC","129":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"129":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS3 Media Queries"};

var cssMixblendmode={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g","194":"h i j k l m n o p q r s"},E:{"2":"G W I D 0B YB cB dB","260":"F E A B C O H eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB tB uB vB","260":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Blending of HTML/SVG elements"};

var cssMotionPaths={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u","194":"v w x"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB","194":"i j k"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"CSS Motion Path"};

var cssNamespaces={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS namespaces"};

var cssNotSelList={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L y M WB S","16":"V"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V pB hB","16":"y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","16":"gB bB aB"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"selector list argument of :not()"};

var cssNthChildOf={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"selector list argument of :nth-child and :nth-last-child CSS pseudo-classes"};

var cssOpacity={A:{A:{"1":"E A B","4":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS3 Opacity"};

var cssOptionalPseudo={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E lB","132":"B C mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"132":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"P","132":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:":optional CSS pseudo-class"};

var cssOverflowAnchor={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB pB hB"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"CSS overflow-anchor (Scroll Anchoring)"};

var cssOverflow={A:{A:{"388":"I D F E A B iB"},B:{"260":"V y M WB S","388":"C O H Q J K L"},C:{"260":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","388":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB pB hB"},D:{"260":"N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","388":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U"},E:{"260":"H jB kB","388":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB"},F:{"260":"7 8 9 AB CB EB FB GB HB DB U N T","388":"0 1 2 3 4 5 6 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"260":"8B 9B","388":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B"},H:{"388":"AC"},I:{"388":"KB G M BC CC DC EC IB FC GC"},J:{"388":"D A"},K:{"388":"A B C P R VB BB"},L:{"260":"S"},M:{"260":"N"},N:{"388":"A B"},O:{"388":"HC"},P:{"388":"G IC JC KC LC MC XB NC OC"},Q:{"388":"PC"},R:{"388":"QC"},S:{"388":"RC"}},B:5,C:"CSS overflow property"};

var cssOverscrollBehavior={A:{A:{"2":"I D F E iB","132":"A B"},B:{"1":"V y M WB S","132":"C O H Q J K","516":"L"},C:{"1":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB pB hB"},D:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB","260":"FB GB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","260":"2 3"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"132":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"CSS overscroll-behavior"};

var cssPageBreak={A:{A:{"388":"A B","900":"I D F E iB"},B:{"388":"C O H Q J K L","900":"V y M WB S"},C:{"772":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M","900":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB pB hB"},D:{"900":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"772":"A","900":"G W I D F E B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"16":"E lB","129":"B C mB nB oB R VB qB BB","900":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"900":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"129":"AC"},I:{"900":"KB G M BC CC DC EC IB FC GC"},J:{"900":"D A"},K:{"129":"A B C R VB BB","900":"P"},L:{"900":"S"},M:{"900":"N"},N:{"388":"A B"},O:{"900":"HC"},P:{"900":"G IC JC KC LC MC XB NC OC"},Q:{"900":"PC"},R:{"900":"QC"},S:{"900":"RC"}},B:2,C:"CSS page-break properties"};

var cssPagedMedia={A:{A:{"2":"I D iB","132":"F E A B"},B:{"1":"V y M WB S","132":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L pB hB","132":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","132":"E B C lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"16":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C R VB BB","258":"P"},L:{"1":"S"},M:{"132":"N"},N:{"258":"A B"},O:{"258":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"132":"RC"}},B:5,C:"CSS Paged Media (@page)"};

var cssPaintApi={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB"},E:{"2":"G W I D F E A B C 0B YB cB dB eB fB XB R","194":"O H BB jB kB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Paint API"};

var cssPlaceholderShown={A:{A:{"2":"I D F E iB","292":"A B"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","164":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"164":"RC"}},B:5,C:":placeholder-shown CSS pseudo-class"};

var cssPlaceholder={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","36":"C O H Q J K L"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L pB hB","33":"0 1 2 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","36":"0 1 2 3 4 5 6 7 8 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G 0B YB","36":"W I D F E A cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","36":"Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB","36":"F IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","36":"KB G BC CC DC EC IB FC GC"},J:{"36":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"36":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","36":"G IC JC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"33":"RC"}},B:5,C:"::placeholder CSS pseudo-element"};

var cssReadOnlyWrite={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"UB V y M","16":"sB","33":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","132":"Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"1":"E A B C O H fB XB R BB jB kB","16":"0B YB","132":"G W I D F cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E B lB mB nB oB R","132":"C Q J K L X Y Z a VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB","132":"F IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","16":"BC CC","132":"KB G DC EC IB FC GC"},J:{"1":"A","132":"D"},K:{"1":"P","2":"A B R","132":"C VB BB"},L:{"1":"S"},M:{"33":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"33":"RC"}},B:1,C:"CSS :read-only and :read-write selectors"};

var cssRebeccapurple={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB","16":"dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Rebeccapurple color"};

var cssReflections={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","33":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"0B YB","33":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"33":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"33":"KB G M BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"2":"A B C R VB BB","33":"P"},L:{"33":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"33":"QC"},S:{"2":"RC"}},B:7,C:"CSS Reflections"};

var cssRegions={A:{A:{"2":"I D F E iB","420":"A B"},B:{"2":"V y M WB S","420":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","36":"Q J K L","66":"X Y Z a b c d e f g h i j k l m"},E:{"2":"G W I C O H 0B YB cB R BB jB kB","33":"D F E A B dB eB fB XB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB tB uB 2B 3B 4B 5B 6B 7B 8B 9B","33":"F vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"420":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Regions"};

var cssRepeatingGradients={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB","33":"G W I D F E A B C O H Q hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E","33":"A B C O H Q J K L X Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB","33":"I cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB","33":"C qB","36":"R VB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","33":"tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB BC CC DC","33":"G EC IB"},J:{"1":"A","2":"D"},K:{"1":"P BB","2":"A B","33":"C","36":"R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS Repeating Gradients"};

var cssResize={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","33":"G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB","132":"BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:4,C:"CSS resize property"};

var cssRevertValue={A:{A:{"2":"I D F E A B iB"},B:{"1":"S","2":"C O H Q J K L V y M WB"},C:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB pB hB"},D:{"1":"S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS revert value"};

var cssRrggbbaa={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"4 5 6 7 8 9 AB LB CB JB"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q lB mB nB oB R VB qB BB","194":"0 1 2 3 r s t u v w x P z"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G","194":"IC JC KC"},Q:{"2":"PC"},R:{"194":"QC"},S:{"2":"RC"}},B:7,C:"#rrggbbaa hex color notation"};

var cssScrollBehavior={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","129":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s","129":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","450":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB","129":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","450":"g h i j k l m n o p q r s t u v w x P z"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"129":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"129":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSSOM Scroll-behavior"};

var cssScrollbar={A:{A:{"132":"I D F E A B iB"},B:{"2":"C O H Q J K L","292":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB pB hB","3074":"FB","4100":"GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"292":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"16":"G W 0B YB","292":"I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","292":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"16":"YB rB IB tB uB","292":"vB","804":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"16":"BC CC","292":"KB G M DC EC IB FC GC"},J:{"292":"D A"},K:{"2":"A B C R VB BB","292":"P"},L:{"292":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"292":"HC"},P:{"292":"G IC JC KC LC MC XB NC OC"},Q:{"292":"PC"},R:{"292":"QC"},S:{"2":"RC"}},B:7,C:"CSS scrollbar styling"};

var cssSel2={A:{A:{"1":"D F E A B","2":"iB","8":"I"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS 2.1 selectors"};

var cssSel3={A:{A:{"1":"E A B","2":"iB","8":"I","132":"D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","2":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS3 selectors"};

var cssSelection={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","33":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"C P VB BB","16":"A B R"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"33":"RC"}},B:5,C:"::selection CSS pseudo-element"};

var cssShapes={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","322":"3 4 5 6 7 8 9 AB LB CB JB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l","194":"m n o"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D 0B YB cB dB","33":"F E A eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","33":"F wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:4,C:"CSS Shapes Level 1"};

var cssSnappoints={A:{A:{"2":"I D F E iB","6308":"A","6436":"B"},B:{"1":"V y M WB S","6436":"C O H Q J K L"},C:{"1":"N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q pB hB","2052":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB","8258":"DB U N"},E:{"1":"B C O H R BB jB kB","2":"G W I D F 0B YB cB dB eB","3108":"E A fB XB"},F:{"1":"GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","8258":"6 7 8 9 AB CB EB FB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB","3108":"xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2052":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"XB NC OC","2":"G IC JC KC LC MC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2052":"RC"}},B:4,C:"CSS Scroll Snap"};

var cssSticky={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q","1028":"V y M WB S","4100":"J K L"},C:{"1":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d pB hB","194":"e f g h i j","516":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB"},D:{"2":"0 1 2 3 G W I D F E A B C O H Q J K L X Y Z a p q r s t u v w x P z","322":"4 5 6 7 b c d e f g h i j k l m n o","1028":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"O H jB kB","2":"G W I 0B YB cB","33":"F E A B C eB fB XB R BB","2084":"D dB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q lB mB nB oB R VB qB BB","322":"r s t","1028":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"5B 6B 7B 8B 9B","2":"YB rB IB tB","33":"F wB xB yB zB ZB 1B 2B 3B 4B","2084":"uB vB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","1028":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","1028":"P"},L:{"1028":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1028":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"1028":"PC"},R:{"2":"QC"},S:{"516":"RC"}},B:5,C:"CSS position:sticky"};

var cssSubgrid={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Subgrid"};

var cssSupportsApi={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","260":"C O H Q J K L"},C:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X pB hB","66":"Y Z","260":"0 1 2 3 4 5 6 a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f","260":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB","132":"BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"132":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB","132":"BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS.supports() API"};

var cssTable={A:{A:{"1":"F E A B","2":"I D iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","132":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS Table display"};

var cssTextAlignLast={A:{A:{"132":"I D F E A B iB"},B:{"1":"V y M WB S","4":"C O H Q J K L"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B pB hB","33":"0 C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m","322":"n o p q r s t u v w x P"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z lB mB nB oB R VB qB BB","578":"a b c d e f g h i j k l"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"1":"QC"},S:{"33":"RC"}},B:5,C:"CSS3 text-align-last"};

var cssTextIndent={A:{A:{"132":"I D F E A B iB"},B:{"132":"C O H Q J K L","388":"V y M WB S"},C:{"132":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p","388":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"132":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"132":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB","388":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"132":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"132":"AC"},I:{"132":"KB G M BC CC DC EC IB FC GC"},J:{"132":"D A"},K:{"132":"A B C R VB BB","388":"P"},L:{"388":"S"},M:{"132":"N"},N:{"132":"A B"},O:{"132":"HC"},P:{"132":"G","388":"IC JC KC LC MC XB NC OC"},Q:{"388":"PC"},R:{"388":"QC"},S:{"132":"RC"}},B:5,C:"CSS text-indent"};

var cssTextJustify={A:{A:{"16":"I D iB","132":"F E A B"},B:{"132":"C O H Q J K L","322":"V y M WB S"},C:{"2":"0 1 2 3 4 5 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","1025":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","1602":"6"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u","322":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB","322":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","322":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","322":"P"},L:{"322":"S"},M:{"1025":"N"},N:{"132":"A B"},O:{"2":"HC"},P:{"2":"G","322":"IC JC KC LC MC XB NC OC"},Q:{"322":"PC"},R:{"322":"QC"},S:{"2":"RC"}},B:5,C:"CSS text-justify"};

var cssTextOrientation={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p pB hB","194":"q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I D F E 0B YB cB dB eB fB","16":"A","33":"B C O H XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS text-orientation"};

var cssTextSpacing={A:{A:{"2":"I D iB","161":"F E A B"},B:{"2":"V y M WB S","161":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"16":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"CSS Text 4 text-spacing"};

var cssTextshadow={A:{A:{"2":"I D F E iB","129":"A B"},B:{"1":"V y M WB S","129":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","260":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"4":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"A","4":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"129":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 Text-shadow"};

var cssTouchAction2={A:{A:{"2":"I D F E iB","132":"B","164":"A"},B:{"1":"V y M WB S","132":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","260":"7"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB","260":"u"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"132":"B","164":"A"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"CSS touch-action level 2 values"};

var cssTouchAction={A:{A:{"1":"B","2":"I D F E iB","289":"A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB","194":"0 1 2 3 h i j k l m n o p q r s t u v w x P z","1025":"4 5 6 7 8"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a lB mB nB oB R VB qB BB"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB","516":"yB zB ZB 1B 2B 3B 4B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","289":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"194":"RC"}},B:2,C:"CSS touch-action property"};

var cssTransitions={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","33":"W I D F E A B C O H Q","164":"G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","33":"I cB","164":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E lB mB","33":"C","164":"B nB oB R VB qB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"uB","164":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"M FC GC","33":"KB G BC CC DC EC IB"},J:{"1":"A","33":"D"},K:{"1":"P BB","33":"C","164":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS3 Transitions"};

var cssUnicodeBidi={A:{A:{"132":"I D F E A B iB"},B:{"1":"V y M WB S","132":"C O H Q J K L"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","33":"0 1 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","132":"sB KB G W I D F E pB hB","292":"A B C O H Q J"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J","548":"K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"132":"G W I D F 0B YB cB dB eB","548":"E A B C O H fB XB R BB jB kB"},F:{"132":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"132":"F YB rB IB tB uB vB wB","548":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"1":"M","16":"KB G BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"16":"PC"},R:{"16":"QC"},S:{"33":"RC"}},B:4,C:"CSS unicode-bidi property"};

var cssUnsetValue={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS unset value"};

var cssVariables={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H","260":"Q"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"0"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m lB mB nB oB R VB qB BB","194":"n"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:4,C:"CSS Variables (Custom Properties)"};

var cssWidowsOrphans={A:{A:{"1":"A B","2":"I D iB","129":"F E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","129":"E B lB mB nB oB R VB qB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"2":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:2,C:"CSS widows & orphans"};

var cssWritingMode={A:{A:{"132":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB","322":"o p q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I","16":"D","33":"F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G 0B YB","16":"W","33":"I D F E A cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a b c d e f g h i j k l m"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB","33":"F tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"BC CC DC","33":"KB G EC IB FC GC"},J:{"33":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"36":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","33":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS writing-mode property"};

var cssZoom={A:{A:{"1":"I D iB","129":"F E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"129":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:7,C:"CSS zoom"};

var css3Attr={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"CSS3 attr() function for all properties"};

var css3Boxsizing={A:{A:{"1":"F E A B","8":"I D iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","33":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","33":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"YB rB IB"},H:{"1":"AC"},I:{"1":"G M EC IB FC GC","33":"KB BC CC DC"},J:{"1":"A","33":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS3 Box-sizing"};

var css3Colors={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","4":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","2":"E","4":"lB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS3 Colors"};

var css3CursorsGrab={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","33":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e pB hB"},D:{"1":"N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U"},E:{"1":"B C O H R BB jB kB","33":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"7 8 9 C AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB","33":"0 1 2 3 4 5 6 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"2":"A B C R VB BB","33":"P"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:3,C:"CSS grab & grabbing cursors"};

var css3CursorsNewer={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","33":"sB KB G W I D F E A B C O H Q J K L X Y Z a b pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o"},E:{"1":"E A B C O H fB XB R BB jB kB","33":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB","33":"Q J K L X Y Z a b"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"CSS3 Cursors: zoom-in & zoom-out"};

var css3Cursors={A:{A:{"1":"E A B","132":"I D F iB"},B:{"1":"H Q J K L V y M WB S","260":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","4":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","4":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","260":"E B C lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","16":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"CSS3 Cursors (original values)"};

var css3Tabsize={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"sB KB pB hB","33":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","164":"0 1 2 3 4 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y","132":"Z a b c d e f g h i j k l m n o p q r s t"},E:{"1":"H jB kB","2":"G W I 0B YB cB","132":"D F E A B C O dB eB fB XB R BB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E lB mB nB","132":"Q J K L X Y Z a b c d e f g","164":"B C oB R VB qB BB"},G:{"1":"8B 9B","2":"YB rB IB tB uB","132":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B"},H:{"164":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB","132":"FC GC"},J:{"132":"D A"},K:{"1":"P","2":"A","164":"B C R VB BB"},L:{"1":"S"},M:{"33":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"164":"RC"}},B:5,C:"CSS3 tab-size"};

var currentcolor={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS currentColor value"};

var customElements={A:{A:{"2":"I D F E iB","8":"A B"},B:{"1":"V","2":"y M WB S","8":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","66":"b c d e f g h","72":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e y M WB S gB bB aB","66":"f g h i j k"},E:{"2":"G W 0B YB cB","8":"I D F E A B C O H dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB","2":"E B C U N T lB mB nB oB R VB qB BB","66":"Q J K L X"},G:{"2":"YB rB IB tB uB","8":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"GC","2":"KB G M BC CC DC EC IB FC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"72":"RC"}},B:7,C:"Custom Elements (deprecated V0 spec)"};

var customElementsv1={A:{A:{"2":"I D F E iB","8":"A B"},B:{"1":"V y M WB S","8":"C O H Q J K L"},C:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h pB hB","8":"0 1 i j k l m n o p q r s t u v w x P z","456":"2 3 4 5 6 7 8 9 AB","712":"LB CB JB EB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","8":"4 5","132":"6 7 8 9 AB LB CB JB EB FB GB HB DB"},E:{"2":"G W I D 0B YB cB dB eB","8":"F E A fB","132":"B C O H XB R BB jB kB"},F:{"1":"GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB CB EB FB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB","132":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","132":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G","132":"IC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"8":"RC"}},B:1,C:"Custom Elements (V1)"};

var customevent={A:{A:{"2":"I D F iB","132":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB","132":"I D F E A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G","16":"W I D F O H","388":"E A B C"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G 0B YB","16":"W I","388":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E lB mB nB oB","132":"B R VB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"rB","16":"YB IB","388":"tB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"BC CC DC","388":"KB G EC IB"},J:{"1":"A","388":"D"},K:{"1":"C P BB","2":"A","132":"B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"CustomEvent"};

var datalist={A:{A:{"2":"iB","8":"I D F E","260":"A B"},B:{"1":"V y M WB S","260":"C O H Q","1284":"J K L"},C:{"8":"sB KB pB hB","4612":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G W I D F E A B C O H Q J K L X","132":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N"},E:{"1":"O H BB jB kB","8":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"1":"E B C GB HB DB U N T lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB"},G:{"8":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B","2049":"4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"GC","8":"KB G BC CC DC EC IB FC","132":"M"},J:{"1":"A","8":"D"},K:{"1":"A B C R VB BB","8":"P"},L:{"1":"S"},M:{"516":"N"},N:{"8":"A B"},O:{"8":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"132":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:1,C:"Datalist element"};

var dataset={A:{A:{"1":"B","4":"I D F E A iB"},B:{"1":"C O H Q J","129":"K L V y M WB S"},C:{"1":"0 1 2 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","4":"sB KB G W pB hB","129":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 x P z","4":"G W I","129":"7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"4":"G W 0B YB","129":"I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"1":"C k l m n o p q r s t R VB qB BB","4":"E B lB mB nB oB","129":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j u v w x P z AB CB EB FB GB HB DB U N T"},G:{"4":"YB rB IB","129":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"4":"AC"},I:{"4":"BC CC DC","129":"KB G M EC IB FC GC"},J:{"129":"D A"},K:{"1":"C R VB BB","4":"A B","129":"P"},L:{"129":"S"},M:{"129":"N"},N:{"1":"B","4":"A"},O:{"129":"HC"},P:{"129":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"129":"QC"},S:{"1":"RC"}},B:1,C:"dataset & data-* attributes"};

var datauri={A:{A:{"2":"I D iB","132":"F","260":"E A B"},B:{"1":"V y M WB S","260":"C O Q J K L","772":"H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"260":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Data URIs"};

var dateTolocaledatestring={A:{A:{"16":"iB","132":"I D F E A B"},B:{"1":"L V y M WB S","132":"C O H Q J K"},C:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB","260":"4 5 6 7","772":"0 1 2 3 h i j k l m n o p q r s t u v w x P z"},D:{"1":"MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b","260":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T","772":"c d e f g h i j k l m n o p"},E:{"1":"C O H BB jB kB","16":"G W 0B YB","132":"I D F E A cB dB eB fB","260":"B XB R"},F:{"1":"9 AB CB EB FB GB HB DB U N T","16":"E B C lB mB nB oB R VB qB","132":"BB","260":"0 1 2 3 4 5 6 7 8 d e f g h i j k l m n o p q r s t u v w x P z","772":"Q J K L X Y Z a b c"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB","132":"F uB vB wB xB yB zB"},H:{"132":"AC"},I:{"1":"M","16":"KB BC CC DC","132":"G EC IB","772":"FC GC"},J:{"132":"D A"},K:{"1":"P","16":"A B C R VB","132":"BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"260":"HC"},P:{"1":"MC XB NC OC","260":"G IC JC KC LC"},Q:{"260":"PC"},R:{"132":"QC"},S:{"132":"RC"}},B:6,C:"Date.prototype.toLocaleDateString"};

var details={A:{A:{"2":"E A B iB","8":"I D F"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB","8":"KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB","194":"0 z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G W I D F E A B","257":"X Y Z a b c d e f g h i j k l m n","769":"C O H Q J K L"},E:{"1":"C O H BB jB kB","8":"G W 0B YB cB","257":"I D F E A dB eB fB","1025":"B XB R"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"C R VB qB BB","8":"E B lB mB nB oB"},G:{"1":"F uB vB wB xB yB 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB tB","1025":"zB ZB 1B"},H:{"8":"AC"},I:{"1":"G M EC IB FC GC","8":"KB BC CC DC"},J:{"1":"A","8":"D"},K:{"1":"P","8":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"769":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Details & Summary elements"};

var deviceorientation={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"C O H Q J K L","4":"V y M WB S"},C:{"2":"sB KB pB","4":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"G W hB"},D:{"2":"G W I","4":"0 1 2 3 4 5 6 7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","4":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB","4":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"BC CC DC","4":"KB G M EC IB FC GC"},J:{"2":"D","4":"A"},K:{"1":"C BB","2":"A B R VB","4":"P"},L:{"4":"S"},M:{"4":"N"},N:{"1":"B","2":"A"},O:{"4":"HC"},P:{"4":"G IC JC KC LC MC XB NC OC"},Q:{"4":"PC"},R:{"4":"QC"},S:{"4":"RC"}},B:4,C:"DeviceOrientation & DeviceMotion events"};

var devicepixelratio={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"C P BB","2":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Window.devicePixelRatio"};

var dialog={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","194":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","1218":"y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j","322":"k l m n o"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L lB mB nB oB R VB qB BB","578":"X Y Z a b"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:1,C:"Dialog element"};

var dispatchevent={A:{A:{"1":"B","16":"iB","129":"E A","130":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","16":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","129":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"EventTarget.dispatchEvent"};

var dnssec={A:{A:{"132":"I D F E A B iB"},B:{"132":"C O H Q J K L V y M WB S"},C:{"132":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"132":"0 1 2 3 4 5 6 7 8 9 G W j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","388":"I D F E A B C O H Q J K L X Y Z a b c d e f g h i"},E:{"132":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"132":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"132":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"132":"AC"},I:{"132":"KB G M BC CC DC EC IB FC GC"},J:{"132":"D A"},K:{"132":"A B C P R VB BB"},L:{"132":"S"},M:{"132":"N"},N:{"132":"A B"},O:{"132":"HC"},P:{"132":"G IC JC KC LC MC XB NC OC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"132":"RC"}},B:6,C:"DNSSEC and DANE"};

var doNotTrack={A:{A:{"2":"I D F iB","164":"E A","260":"B"},B:{"1":"K L V y M WB S","260":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F pB hB","516":"E A B C O H Q J K L X Y Z a b c d e f g h i j"},D:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a"},E:{"1":"I A B C cB fB XB R","2":"G W O H 0B YB BB jB kB","1028":"D F E dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB"},G:{"1":"xB yB zB ZB 1B 2B 3B","2":"YB rB IB tB uB 4B 5B 6B 7B 8B 9B","1028":"F vB wB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"16":"D","1028":"A"},K:{"1":"P BB","16":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"164":"A","260":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Do Not Track API"};

var documentCurrentscript={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g"},E:{"1":"F E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"document.currentScript"};

var documentEvaluateXpath={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","16":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"document.evaluate & XPath"};

var documentExeccommand={A:{A:{"1":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","16":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","16":"E lB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB","16":"IB tB uB"},H:{"2":"AC"},I:{"1":"M EC IB FC GC","2":"KB G BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"Document.execCommand()"};

var documentPolicy={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Document Policy"};

var documentScrollingelement={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","16":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"document.scrollingElement"};

var documenthead={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB","16":"W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E lB mB nB oB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"document.head"};

var domManipConvenience={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"4 5"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r lB mB nB oB R VB qB BB","194":"s"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"194":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"DOM manipulation convenience methods"};

var domRange={A:{A:{"1":"E A B","2":"iB","8":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Document Object Model Range"};

var domcontentloaded={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"DOMContentLoaded"};

var domfocusinDomfocusoutEvents={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB","16":"W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","16":"E B lB mB nB oB R VB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB uB"},H:{"16":"AC"},I:{"1":"G M EC IB FC GC","16":"KB BC CC DC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"DOMFocusIn & DOMFocusOut events"};

var dommatrix={A:{A:{"2":"I D F E iB","132":"A B"},B:{"132":"C O H Q J K L","1028":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB","2564":"0 l m n o p q r s t u v w x P z","3076":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"16":"G W I D","132":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB","388":"F","1028":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"16":"G 0B YB","132":"W I D F E A cB dB eB fB XB","1028":"B C O H R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","132":"Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","1028":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T"},G:{"16":"YB rB IB","132":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","132":"G EC IB FC GC","292":"KB BC CC DC"},J:{"16":"D","132":"A"},K:{"2":"A B C R VB BB","132":"P"},L:{"1028":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"132":"HC"},P:{"132":"G IC JC KC LC MC XB NC OC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"2564":"RC"}},B:4,C:"DOMMatrix"};

var download={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Download attribute"};

var dragndrop={A:{A:{"644":"I D F E iB","772":"A B"},B:{"1":"L V y M WB S","260":"C O H Q J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","8":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","8":"E B lB mB nB oB R VB qB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","1025":"M"},J:{"2":"D A"},K:{"1":"BB","8":"A B C R VB","1025":"P"},L:{"1025":"S"},M:{"2":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"Drag and Drop"};

var elementClosest={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Element.closest()"};

var elementFromPoint={A:{A:{"1":"I D F E A B","16":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","16":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","16":"E lB mB nB oB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"C P BB","16":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"document.elementFromPoint()"};

var elementScrollMethods={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB"},E:{"2":"G W I D F E 0B YB cB dB eB fB","132":"A B C O H XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB","132":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:5,C:"Scroll methods on elements (scroll, scrollTo, scrollBy)"};

var eme={A:{A:{"2":"I D F E A iB","164":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m","132":"n o p q r s t"},E:{"1":"C O H BB jB kB","2":"G W I 0B YB cB dB","164":"D F E A B eB fB XB R"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z lB mB nB oB R VB qB BB","132":"a b c d e f g"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"16":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:2,C:"Encrypted Media Extensions"};

var eot={A:{A:{"1":"I D F E A B","2":"iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"EOT - Embedded OpenType fonts"};

var es5={A:{A:{"1":"A B","2":"I D iB","260":"E","1026":"F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","4":"sB KB pB hB","132":"G W I D F E A B C O H Q J K L X Y"},D:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G W I D F E A B C O H Q J K L","132":"X Y Z a"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","4":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","4":"E B C lB mB nB oB R VB qB","132":"BB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","4":"YB rB IB tB"},H:{"132":"AC"},I:{"1":"M FC GC","4":"KB BC CC DC","132":"EC IB","900":"G"},J:{"1":"A","4":"D"},K:{"1":"P","4":"A B C R VB","132":"BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ECMAScript 5"};

var es6Class={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t","132":"0 u v w x P z"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g lB mB nB oB R VB qB BB","132":"h i j k l m n"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ES6 classes"};

var es6Generators={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ES6 Generators"};

var es6ModuleDynamicImport={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB pB hB","194":"DB"},D:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"JavaScript modules: dynamic import()"};

var es6Module={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H","4097":"J K L","4290":"Q"},C:{"1":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","322":"6 7 8 9 AB LB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB","194":"CB"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB","3076":"XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P lB mB nB oB R VB qB BB","194":"z"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB","3076":"ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"JavaScript modules via script tag"};

var es6Number={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q pB hB","132":"J K L X Y Z a b c","260":"d e f g h i","516":"j"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L","1028":"X Y Z a b c d e f g h i j k l"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","1028":"Q J K L X Y"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC","1028":"EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ES6 Number"};

var es6StringIncludes={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"String.prototype.includes"};

var es6={A:{A:{"2":"I D F E A iB","388":"B"},B:{"257":"V y M WB S","260":"C O H","769":"Q J K L"},C:{"2":"sB KB G W pB hB","4":"0 1 2 3 4 5 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","257":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y","4":"0 1 2 Z a b c d e f g h i j k l m n o p q r s t u v w x P z","257":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D 0B YB cB dB","4":"F E eB fB"},F:{"2":"E B C lB mB nB oB R VB qB BB","4":"Q J K L X Y Z a b c d e f g h i j k l m n o p","257":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB","4":"F vB wB xB yB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","4":"FC GC","257":"M"},J:{"2":"D","4":"A"},K:{"2":"A B C R VB BB","257":"P"},L:{"257":"S"},M:{"257":"N"},N:{"2":"A","388":"B"},O:{"257":"HC"},P:{"4":"G","257":"IC JC KC LC MC XB NC OC"},Q:{"257":"PC"},R:{"4":"QC"},S:{"4":"RC"}},B:6,C:"ECMAScript 2015 (ES6)"};

var eventsource={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","4":"E lB mB nB oB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"C P R VB BB","4":"A B"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Server-sent events"};

var extendedSystemFonts={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"H jB kB","2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family"};

var featurePolicy={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB pB hB","260":"QB RB SB TB UB V y M"},D:{"1":"QB RB SB TB UB V y M WB S gB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB","132":"CB JB EB FB GB HB DB U N T MB NB OB PB","1025":"bB aB"},E:{"2":"G W I D F E A B 0B YB cB dB eB fB XB","772":"C O H R BB jB kB"},F:{"1":"EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 7 8 9 z AB CB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B","772":"2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"NC OC","2":"G IC JC KC","132":"LC MC XB"},Q:{"132":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Feature Policy"};

var fetch={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l pB hB","1025":"r","1218":"m n o p q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r","260":"s","772":"t"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e lB mB nB oB R VB qB BB","260":"f","772":"g"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Fetch"};

var fieldsetDisabled={A:{A:{"16":"iB","132":"F E","388":"I D A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q","16":"J K L X"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","16":"E lB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"388":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A","260":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"disabled attribute of the fieldset element"};

var fileapi={A:{A:{"2":"I D F E iB","260":"A B"},B:{"1":"V y M WB S","260":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB","260":"G W I D F E A B C O H Q J K L X Y Z a b c d e f hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W","260":"O H Q J K L X Y Z a b c d e f g h i j k l m n o p","388":"I D F E A B C"},E:{"1":"A B C O H XB R BB jB kB","2":"G W 0B YB","260":"I D F E dB eB fB","388":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B lB mB nB oB","260":"C Q J K L X Y Z a b c R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","260":"F uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M GC","2":"BC CC DC","260":"FC","388":"KB G EC IB"},J:{"260":"A","388":"D"},K:{"1":"P","2":"A B","260":"C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A","260":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"File API"};

var filereader={A:{A:{"2":"I D F E iB","132":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E B lB mB nB oB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"C P R VB BB","2":"A B"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"FileReader API"};

var filereadersync={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E lB mB","16":"B nB oB R VB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"C P VB BB","2":"A","16":"B R"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"FileReaderSync"};

var filesystem={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","33":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"G W I D","33":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","36":"F E A B C"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D","33":"A"},K:{"2":"A B C R VB BB","33":"P"},L:{"33":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G","33":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Filesystem & FileWriter API"};

var flac={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H Q"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v","16":"w x P","388":"0 1 2 3 4 5 6 7 z"},E:{"1":"O H jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB","516":"B C R BB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"BC CC DC","16":"KB G EC IB FC GC"},J:{"1":"A","2":"D"},K:{"1":"BB","16":"A B C R VB","129":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","129":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:6,C:"FLAC audio format"};

var flexboxGap={A:{A:{"2":"I D F E A B iB"},B:{"1":"S","2":"C O H Q J K L V y M WB"},C:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB pB hB"},D:{"1":"S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"gap property for Flexbox"};

var flexbox={A:{A:{"2":"I D F E iB","1028":"B","1316":"A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","164":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB","516":"a b c d e f"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"Z a b c d e f g","164":"G W I D F E A B C O H Q J K L X Y"},E:{"1":"E A B C O H fB XB R BB jB kB","33":"D F dB eB","164":"G W I 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB","33":"Q J"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"F vB wB","164":"YB rB IB tB uB"},H:{"1":"AC"},I:{"1":"M FC GC","164":"KB G BC CC DC EC IB"},J:{"1":"A","164":"D"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","292":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS Flexible Box Layout Module"};

var flowRoot={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"O H jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R BB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w lB mB nB oB R VB qB BB"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"display: flow-root"};

var focusinFocusoutEvents={A:{A:{"1":"I D F E A B","2":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E lB mB nB oB","16":"B R VB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"G M EC IB FC GC","2":"BC CC DC","16":"KB"},J:{"1":"D A"},K:{"1":"C P BB","2":"A","16":"B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"focusin & focusout events"};

var focusoptionsPreventscroll={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"preventScroll support in focus"};

var fontFamilySystemUi={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u pB hB","132":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","260":"5 6 7"},E:{"1":"B C O H R BB jB kB","2":"G W I D F 0B YB cB dB eB","16":"E","132":"A fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB","132":"xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"132":"RC"}},B:5,C:"system-ui value for font-family"};

var fontFeature={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","33":"Q J K L X Y Z a b c d e f g h i j k l","164":"G W I D F E A B C O H"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q","33":"Z a b c d e f g h i j k l m n o p q r s t u v w x P z","292":"J K L X Y"},E:{"1":"A B C O H fB XB R BB jB kB","2":"D F E 0B YB dB eB","4":"G W I cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a b c d e f g h i j k l m"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F vB wB xB","4":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB","33":"FC GC"},J:{"2":"D","33":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","33":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS font-feature-settings"};

var fontKerning={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b pB hB","194":"c d e f g h i j k l"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g","33":"h i j k"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I 0B YB cB dB","33":"D F E eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q lB mB nB oB R VB qB BB","33":"J K L X"},G:{"2":"YB rB IB tB uB vB","33":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M GC","2":"KB G BC CC DC EC IB","33":"FC"},J:{"2":"D","33":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 font-kerning"};

var fontLoading={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m pB hB","194":"n o p q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS Font Loading"};

var fontSizeAdjust={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","194":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u","194":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB","194":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"258":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"194":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"CSS font-size-adjust"};

var fontSmooth={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","676":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB","804":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G","676":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"0B YB","676":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","676":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"804":"RC"}},B:7,C:"CSS font-smooth"};

var fontUnicodeRange={A:{A:{"2":"I D F iB","4":"E A B"},B:{"1":"K L V y M WB S","4":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB","194":"o p q r s t u v"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"1":"A B C O H XB R BB jB kB","4":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","4":"Q J K L X Y Z a"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","4":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","4":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","4":"A"},K:{"2":"A B C R VB BB","4":"P"},L:{"1":"S"},M:{"1":"N"},N:{"4":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","4":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:4,C:"Font unicode-range subsetting"};

var fontVariantAlternates={A:{A:{"2":"I D F E iB","130":"A B"},B:{"130":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","130":"G W I D F E A B C O H Q J K L X Y Z a b","322":"c d e f g h i j k l"},D:{"2":"G W I D F E A B C O H Q","130":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H fB XB R BB jB kB","2":"D F E 0B YB dB eB","130":"G W I cB"},F:{"2":"E B C lB mB nB oB R VB qB BB","130":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB vB wB xB","130":"rB IB tB uB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","130":"M FC GC"},J:{"2":"D","130":"A"},K:{"2":"A B C R VB BB","130":"P"},L:{"130":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"130":"HC"},P:{"130":"G IC JC KC LC MC XB NC OC"},Q:{"130":"PC"},R:{"130":"QC"},S:{"1":"RC"}},B:5,C:"CSS font-variant-alternates"};

var fontVariantEastAsian={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b pB hB","132":"c d e f g h i j k l"},D:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"132":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:4,C:"CSS font-variant-east-asian "};

var fontVariantNumeric={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l pB hB"},D:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q lB mB nB oB R VB qB BB"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","16":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:2,C:"CSS font-variant-numeric"};

var fontface={A:{A:{"1":"E A B","132":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","2":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","2":"E lB"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","260":"YB rB"},H:{"2":"AC"},I:{"1":"G M EC IB FC GC","2":"BC","4":"KB CC DC"},J:{"1":"A","4":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"@font-face Web fonts"};

var formAttribute={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H Q"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB","16":"W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Form attribute"};

var formSubmitAttributes={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB","16":"mB nB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"G M EC IB FC GC","2":"BC CC DC","16":"KB"},J:{"1":"A","2":"D"},K:{"1":"B C P R VB BB","16":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Attributes for form submission"};

var formValidation={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E"},E:{"1":"B C O H XB R BB jB kB","2":"G 0B YB","132":"W I D F E A cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","2":"E lB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB","132":"F rB IB tB uB vB wB xB yB zB"},H:{"516":"AC"},I:{"1":"M GC","2":"KB BC CC DC","132":"G EC IB FC"},J:{"1":"A","132":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"260":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"132":"RC"}},B:1,C:"Form validation"};

var forms={A:{A:{"2":"iB","4":"A B","8":"I D F E"},B:{"1":"J K L V y M WB S","4":"C O H Q"},C:{"4":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB pB hB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB"},E:{"4":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","8":"0B YB"},F:{"1":"4 5 6 7 8 9 E B C AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","4":"0 1 2 3 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},G:{"2":"YB","4":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB","4":"FC GC"},J:{"2":"D","4":"A"},K:{"1":"A B C R VB BB","4":"P"},L:{"1":"S"},M:{"4":"N"},N:{"4":"A B"},O:{"1":"HC"},P:{"1":"LC MC XB NC OC","4":"G IC JC KC"},Q:{"1":"PC"},R:{"4":"QC"},S:{"4":"RC"}},B:1,C:"HTML5 form features"};

var fullscreen={A:{A:{"2":"I D F E A iB","548":"B"},B:{"1":"V y M WB S","516":"C O H Q J K L"},C:{"1":"GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E pB hB","676":"A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P","1700":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB"},D:{"1":"NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H","676":"Q J K L X","804":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB"},E:{"2":"G W 0B YB","676":"cB","804":"I D F E A B C O H dB eB fB XB R BB jB kB"},F:{"1":"GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB","804":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B","2052":"3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D","292":"A"},K:{"2":"A B C R VB BB","804":"P"},L:{"804":"S"},M:{"1":"N"},N:{"2":"A","548":"B"},O:{"804":"HC"},P:{"1":"XB NC OC","804":"G IC JC KC LC MC"},Q:{"804":"PC"},R:{"804":"QC"},S:{"1":"RC"}},B:1,C:"Full Screen API"};

var gamepad={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y","33":"Z a b c"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"Gamepad API"};

var geolocation={A:{A:{"1":"E A B","2":"iB","8":"I D F"},B:{"1":"C O H Q J K L","129":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","8":"sB KB","129":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","4":"G","129":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E B C O H cB dB eB fB XB R BB jB kB","8":"G 0B YB","129":"A"},F:{"1":"B C J K L X Y Z a b c d e f g h i j k l m n o p q oB R VB qB BB","2":"E Q lB","8":"mB nB","129":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"F YB rB IB tB uB vB wB xB yB","129":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G BC CC DC EC IB FC GC","129":"M"},J:{"1":"D A"},K:{"1":"B C P R VB BB","8":"A"},L:{"129":"S"},M:{"129":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G","129":"IC JC KC LC MC XB NC OC"},Q:{"129":"PC"},R:{"129":"QC"},S:{"1":"RC"}},B:2,C:"Geolocation"};

var getboundingclientrect={A:{A:{"644":"I D iB","2049":"E A B","2692":"F"},B:{"1":"V y M WB S","2049":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB","260":"G W I D F E A B","1156":"KB","1284":"pB","1796":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","16":"E lB","132":"mB nB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","132":"A"},L:{"1":"S"},M:{"1":"N"},N:{"2049":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Element.getBoundingClientRect()"};

var getcomputedstyle={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB","132":"KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","260":"G W I D F E A"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","260":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","260":"E lB mB nB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","260":"YB rB IB"},H:{"260":"AC"},I:{"1":"G M EC IB FC GC","260":"KB BC CC DC"},J:{"1":"A","260":"D"},K:{"1":"B C P R VB BB","260":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"getComputedStyle"};

var getelementsbyclassname={A:{A:{"1":"E A B","2":"iB","8":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","8":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"getElementsByClassName"};

var getrandomvalues={A:{A:{"2":"I D F E A iB","33":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W I 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A","33":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"crypto.getRandomValues()"};

var gyroscope={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"AB LB CB JB EB FB GB HB DB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Gyroscope"};

var hardwareconcurrency={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o"},E:{"2":"G W I D 0B YB cB dB eB","129":"B C O H XB R BB jB kB","194":"F E A fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB tB uB vB","129":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","194":"F wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"navigator.hardwareConcurrency"};

var hashchange={A:{A:{"1":"F E A B","8":"I D iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","8":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","8":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","8":"E lB mB nB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"2":"AC"},I:{"1":"KB G M CC DC EC IB FC GC","2":"BC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","8":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Hashchange event"};

var heif={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A 0B YB cB dB eB fB XB","130":"B C O H R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB","130":"1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"HEIF/ISO Base Media File Format"};

var hevc={A:{A:{"2":"I D F E A iB","132":"B"},B:{"2":"V y M WB S","132":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"O H jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB","516":"B C R BB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","258":"M"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"258":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G","258":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"HEVC/H.265 video format"};

var hidden$1={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E B lB mB nB oB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"G M EC IB FC GC","2":"KB BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"C P R VB BB","2":"A B"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"hidden attribute"};

var highResolutionTime={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X","33":"Y Z a b"},E:{"1":"F E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"High Resolution Time API"};

var history={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G 0B YB","4":"W cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T VB qB BB","2":"E B lB mB nB oB R"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB","4":"IB"},H:{"2":"AC"},I:{"1":"M CC DC IB FC GC","2":"KB G BC EC"},J:{"1":"D A"},K:{"1":"C P R VB BB","2":"A B"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Session history management"};

var htmlMediaCapture={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB tB","129":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC","257":"CC DC"},J:{"1":"A","16":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"516":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:4,C:"HTML Media Capture"};

var html5semantic={A:{A:{"2":"iB","8":"I D F","260":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB","132":"KB pB hB","260":"G W I D F E A B C O H Q J K L X Y"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W","260":"I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","132":"G 0B YB","260":"W I cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","132":"E B lB mB nB oB","260":"C R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"YB","260":"rB IB tB uB"},H:{"132":"AC"},I:{"1":"M FC GC","132":"BC","260":"KB G CC DC EC IB"},J:{"260":"D A"},K:{"1":"P","132":"A","260":"B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"260":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"HTML5 semantic elements"};

var httpLiveStreaming={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L","2":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:7,C:"HTTP Live Streaming (HLS)"};

var http2={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"C O H Q J K L","513":"V y M WB S"},C:{"1":"0 1 2 3 4 o p q r s t u v w x P z","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB","513":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 t u v w x P z","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s","513":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"B C O H R BB jB kB","2":"G W I D F 0B YB cB dB eB","260":"E A fB XB"},F:{"1":"g h i j k l m n o p","2":"E B C Q J K L X Y Z a b c d e f lB mB nB oB R VB qB BB","513":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","513":"M"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"513":"S"},M:{"513":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G","513":"IC JC KC LC MC XB NC OC"},Q:{"513":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"HTTP/2 protocol"};

var http3={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB pB hB","194":"OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB","322":"V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB jB","66":"H kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B","66":"9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"HTTP/3 protocol"};

var iframeSandbox={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J pB hB","4":"K L X Y Z a b c d e f"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB"},H:{"2":"AC"},I:{"1":"KB G M CC DC EC IB FC GC","2":"BC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"sandbox attribute for iframes"};

var iframeSeamless={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","66":"Y Z a b c d e"},E:{"2":"G W I F E A B C O H 0B YB cB dB fB XB R BB jB kB","130":"D eB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","130":"vB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"seamless attribute for iframes"};

var iframeSrcdoc={A:{A:{"2":"iB","8":"I D F E A B"},B:{"1":"V y M WB S","8":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB","8":"KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O","8":"H Q J K L X"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"0B YB","8":"G W cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B lB mB nB oB","8":"C R VB qB BB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB","8":"rB IB tB"},H:{"2":"AC"},I:{"1":"M FC GC","8":"KB G BC CC DC EC IB"},J:{"1":"A","8":"D"},K:{"1":"P","2":"A B","8":"C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"srcdoc attribute for iframes"};

var imagecapture={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","322":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m pB hB","194":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","322":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r lB mB nB oB R VB qB BB","322":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"322":"PC"},R:{"1":"QC"},S:{"194":"RC"}},B:5,C:"ImageCapture API"};

var ime={A:{A:{"2":"I D F E A iB","161":"B"},B:{"2":"V y M WB S","161":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A","161":"B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Input Method Editor API"};

var imgNaturalwidthNaturalheight={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"naturalWidth & naturalHeight image properties"};

var imports={A:{A:{"2":"I D F E iB","8":"A B"},B:{"1":"V","2":"y M WB S","8":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h pB hB","8":"8 9 i j AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","72":"0 1 2 3 4 5 6 7 k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h y M WB S gB bB aB","66":"i j k l m","72":"n"},E:{"2":"G W 0B YB cB","8":"I D F E A B C O H dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB","2":"E B C Q J U N T lB mB nB oB R VB qB BB","66":"K L X Y Z","72":"a"},G:{"2":"YB rB IB tB uB","8":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"2":"S"},M:{"8":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"HTML Imports"};

var indeterminateCheckbox={A:{A:{"1":"I D F E A B","16":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB","16":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"indeterminate checkbox"};

var indexeddb={A:{A:{"2":"I D F E iB","132":"A B"},B:{"1":"V y M WB S","132":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","33":"A B C O H Q","36":"G W I D F E"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"A","8":"G W I D F E","33":"b","36":"B C O H Q J K L X Y Z a"},E:{"1":"A B C O H XB R BB jB kB","8":"G W I D 0B YB cB dB","260":"F E eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E lB mB","8":"B C nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB tB uB vB","260":"F wB xB yB"},H:{"2":"AC"},I:{"1":"M FC GC","8":"KB G BC CC DC EC IB"},J:{"1":"A","8":"D"},K:{"1":"P","2":"A","8":"B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"IndexedDB"};

var indexeddb2={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v pB hB","132":"w x P","260":"0 1 2 z"},D:{"1":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","132":"0 1 2 3","260":"4 5 6 7 8 9"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m lB mB nB oB R VB qB BB","132":"n o p q","260":"r s t u v w"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB","16":"zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G","260":"IC JC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"260":"RC"}},B:4,C:"IndexedDB 2.0"};

var inlineBlock={A:{A:{"1":"F E A B","4":"iB","132":"I D"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","36":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS inline-block"};

var innertext={A:{A:{"1":"I D F E A B","16":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","16":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"HTMLElement.innerText"};

var inputAutocompleteOnoff={A:{A:{"1":"I D F E A iB","132":"B"},B:{"132":"C O H Q J K L","260":"V y M WB S"},C:{"1":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h pB hB","516":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"K L X Y Z a b c d e","2":"G W I D F E A B C O H Q J","132":"f g h i j k l m n o p q r s","260":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I cB dB","2":"G W 0B YB","2052":"D F E A B C O H eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB","1025":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1025":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2052":"A B"},O:{"1025":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"260":"PC"},R:{"1":"QC"},S:{"516":"RC"}},B:1,C:"autocomplete attribute: on & off values"};

var inputColor={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X"},E:{"1":"O H BB jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E Q J lB mB nB oB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B","129":"4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:1,C:"Color input type"};

var inputDatetime={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","132":"C"},C:{"2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","1090":"5 6 7 8","2052":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X","2052":"Y Z a b c"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB","260":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB BC CC DC","514":"G EC IB"},J:{"1":"A","2":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2052":"RC"}},B:1,C:"Date and time input types"};

var inputEmailTelUrl={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","132":"BC CC DC"},J:{"1":"A","132":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Email, telephone & URL input types"};

var inputEvent={A:{A:{"2":"I D F iB","2561":"A B","2692":"E"},B:{"1":"V y M WB S","2561":"C O H Q J K L"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB","1537":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z hB","1796":"KB pB"},D:{"1":"DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H","1025":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB","1537":"Q J K L X Y Z a b c d e f g h i j k l m"},E:{"1":"H jB kB","16":"G W I 0B YB","1025":"D F E A B C dB eB fB XB R","1537":"cB","4097":"O BB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T BB","16":"E B C lB mB nB oB R VB","260":"qB","1025":"0 1 2 3 a b c d e f g h i j k l m n o p q r s t u v w x P z","1537":"Q J K L X Y Z"},G:{"16":"YB rB IB","1025":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","1537":"tB uB vB"},H:{"2":"AC"},I:{"16":"BC CC","1025":"M GC","1537":"KB G DC EC IB FC"},J:{"1025":"A","1537":"D"},K:{"1":"A B C R VB BB","1025":"P"},L:{"1":"S"},M:{"1537":"N"},N:{"2561":"A B"},O:{"1537":"HC"},P:{"1025":"G IC JC KC LC MC XB NC OC"},Q:{"1025":"PC"},R:{"1025":"QC"},S:{"1537":"RC"}},B:1,C:"input event"};

var inputFileAccept={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G","16":"W I D F Z a b c d","132":"E A B C O H Q J K L X Y"},E:{"1":"C O H R BB jB kB","2":"G W 0B YB cB","132":"I D F E A B dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"2":"uB vB","132":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","514":"YB rB IB tB"},H:{"2":"AC"},I:{"2":"BC CC DC","260":"KB G EC IB","514":"M FC GC"},J:{"132":"A","260":"D"},K:{"2":"A B C R VB BB","260":"P"},L:{"260":"S"},M:{"2":"N"},N:{"514":"A","1028":"B"},O:{"2":"HC"},P:{"260":"G IC JC KC LC MC XB NC OC"},Q:{"260":"PC"},R:{"260":"QC"},S:{"1":"RC"}},B:1,C:"accept attribute for file input"};

var inputFileDirectory={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Directory selection from file input"};

var inputFileMultiple={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB mB nB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"130":"AC"},I:{"130":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"130":"A B C P R VB BB"},L:{"132":"S"},M:{"130":"N"},N:{"2":"A B"},O:{"130":"HC"},P:{"130":"G","132":"IC JC KC LC MC XB NC OC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"2":"RC"}},B:1,C:"Multiple file selection"};

var inputInputmode={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J pB hB","4":"K L X Y","194":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","66":"8 9 AB LB CB JB EB FB GB HB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u lB mB nB oB R VB qB BB","66":"0 1 2 3 4 v w x P z"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"194":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"MC XB NC OC","2":"G IC JC KC LC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"194":"RC"}},B:1,C:"inputmode attribute"};

var inputMinlength={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:1,C:"Minimum length attribute for input fields"};

var inputNumber={A:{A:{"2":"I D F E iB","129":"A B"},B:{"1":"V y M WB S","129":"C O","1025":"H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB","513":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"388":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB BC CC DC","388":"G M EC IB FC GC"},J:{"2":"D","388":"A"},K:{"1":"A B C R VB BB","388":"P"},L:{"388":"S"},M:{"641":"N"},N:{"388":"A B"},O:{"388":"HC"},P:{"388":"G IC JC KC LC MC XB NC OC"},Q:{"388":"PC"},R:{"388":"QC"},S:{"513":"RC"}},B:1,C:"Number input type"};

var inputPattern={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E"},E:{"1":"B C O H XB R BB jB kB","2":"G 0B YB","16":"W","388":"I D F E A cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB","388":"F tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M GC","2":"KB G BC CC DC EC IB FC"},J:{"1":"A","2":"D"},K:{"1":"A B C R VB BB","132":"P"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Pattern attribute for input fields"};

var inputPlaceholder={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","132":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T VB qB BB","2":"E lB mB nB oB","132":"B R"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB M BC CC DC IB FC GC","4":"G EC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"input placeholder attribute"};

var inputRange={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"M IB FC GC","4":"KB G BC CC DC EC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Range input type"};

var inputSearch={A:{A:{"2":"I D F E iB","129":"A B"},B:{"1":"V y M WB S","129":"C O H Q J K L"},C:{"2":"sB KB pB hB","129":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Z a b c d","129":"Q J K L X Y"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E lB mB nB oB","16":"B R VB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"129":"AC"},I:{"1":"M FC GC","16":"BC CC","129":"KB G DC EC IB"},J:{"1":"D","129":"A"},K:{"1":"C","2":"A","16":"B R VB","129":"P BB"},L:{"1":"S"},M:{"129":"N"},N:{"129":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"129":"RC"}},B:1,C:"Search input type"};

var inputSelection={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","16":"E lB mB nB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Selection controls for input & textarea"};

var insertAdjacent={A:{A:{"1":"I D F E A B","16":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Element.insertAdjacentElement() & Element.insertAdjacentText()"};

var insertadjacenthtml={A:{A:{"1":"A B","16":"iB","132":"I D F E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","16":"E lB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Element.insertAdjacentHTML()"};

var internationalization={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:6,C:"Internationalization API"};

var intersectionobserverV2={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"EB FB GB HB DB U N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"NC OC","2":"G IC JC KC LC MC XB"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"IntersectionObserver V2"};

var intersectionobserver={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L","2":"C O H","516":"Q","1025":"V y M WB S"},C:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","194":"4 5 6"},D:{"1":"AB LB CB JB EB FB GB","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","516":"3 4 5 6 7 8 9","1025":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"O H BB jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB CB EB FB","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p lB mB nB oB R VB qB BB","516":"q r s t u v w","1025":"GB HB DB U N T"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","1025":"M"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"516":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G","516":"IC JC"},Q:{"1025":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"IntersectionObserver"};

var intlPluralrules={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K","130":"L"},C:{"1":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB"},E:{"1":"O H jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R BB"},F:{"1":"2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Intl.PluralRules API"};

var intrinsicWidth={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","1537":"V y M WB S"},C:{"2":"sB","932":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB pB hB","2308":"DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z","545":"a b c d e f g h i j k l m n o p q r s t u v w x","1537":"0 1 2 3 4 5 6 7 8 9 P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I 0B YB cB","516":"B C O H R BB jB kB","548":"E A fB XB","676":"D F dB eB"},F:{"2":"E B C lB mB nB oB R VB qB BB","513":"m","545":"Q J K L X Y Z a b c d e f g h i j k","1537":"0 1 2 3 4 5 6 7 8 9 l n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB IB tB uB","548":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","676":"F vB wB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","545":"FC GC","1537":"M"},J:{"2":"D","545":"A"},K:{"2":"A B C R VB BB","1537":"P"},L:{"1537":"S"},M:{"2340":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"545":"G","1537":"IC JC KC LC MC XB NC OC"},Q:{"545":"PC"},R:{"1537":"QC"},S:{"932":"RC"}},B:5,C:"Intrinsic & Extrinsic Sizing"};

var jpeg2000={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G 0B YB","129":"W cB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"JPEG 2000 image format"};

var jpegxr={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L","2":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"JPEG XR image format"};

var jsRegexpLookbehind={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB pB hB"},D:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Lookbehind in JS regular expressions"};

var json={A:{A:{"1":"E A B","2":"I D iB","129":"F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"JSON parsing"};

var justifyContentSpaceEvenly={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q","132":"J K L"},C:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","132":"9 AB LB"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB","132":"XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v lB mB nB oB R VB qB BB","132":"w x P"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB","132":"ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"132":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC","132":"KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"132":"RC"}},B:5,C:"CSS justify-content: space-evenly"};

var kerningPairsLigatures={A:{A:{"2":"I D F E A B iB"},B:{"1":"L V y M WB S","2":"C O H Q J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"BC CC DC","132":"KB G EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"High-quality kerning pairs & ligatures"};

var keyboardeventCharcode={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","16":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB","16":"C"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"BB","2":"A B R VB","16":"C","130":"P"},L:{"1":"S"},M:{"130":"N"},N:{"130":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"KeyboardEvent.charCode"};

var keyboardeventCode={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t","194":"u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g lB mB nB oB R VB qB BB","194":"h i j k l m"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","194":"P"},L:{"194":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G","194":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"194":"QC"},S:{"1":"RC"}},B:5,C:"KeyboardEvent.code"};

var keyboardeventGetmodifierstate={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B Q J lB mB nB oB R VB qB","16":"C"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P BB","2":"A B R VB","16":"C"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"KeyboardEvent.getModifierState()"};

var keyboardeventKey={A:{A:{"2":"I D F iB","260":"E A B"},B:{"1":"V y M WB S","260":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a pB hB","132":"b c d e f g"},D:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B Q J K L X Y Z a b c d e f g h i j k l m n o p lB mB nB oB R VB qB","16":"C"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"1":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"BB","2":"A B R VB","16":"C P"},L:{"1":"S"},M:{"1":"N"},N:{"260":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:5,C:"KeyboardEvent.key"};

var keyboardeventLocation={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","16":"I 0B YB","132":"G W cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB","16":"C","132":"Q J"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB","132":"tB uB vB"},H:{"2":"AC"},I:{"1":"M FC GC","16":"BC CC","132":"KB G DC EC IB"},J:{"132":"D A"},K:{"1":"P BB","2":"A B R VB","16":"C"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"KeyboardEvent.location"};

var keyboardeventWhich={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB","16":"W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","16":"E lB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB","16":"BC CC","132":"FC GC"},J:{"1":"D A"},K:{"1":"A B C R VB BB","132":"P"},L:{"132":"S"},M:{"132":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"2":"G","132":"IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"132":"QC"},S:{"1":"RC"}},B:7,C:"KeyboardEvent.which"};

var lazyload={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L","2":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"1":"B","2":"A"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Resource Hints: Lazyload"};

var _let={A:{A:{"2":"I D F E A iB","2052":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","194":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L","322":"X Y Z a b c d e f g h i j k l m n o p q r s","516":"0 t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB","1028":"A XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","322":"Q J K L X Y Z a b c d e f","516":"g h i j k l m n"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB","1028":"zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","516":"G"},Q:{"1":"PC"},R:{"516":"QC"},S:{"1":"RC"}},B:6,C:"let"};

var linkIconPng={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L","129":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"129":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"257":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"129":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","513":"E B C lB mB nB oB R VB qB BB"},G:{"1026":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1026":"AC"},I:{"1":"KB G BC CC DC EC IB","513":"M FC GC"},J:{"1":"D","1026":"A"},K:{"1026":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1026":"A B"},O:{"257":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","513":"G"},Q:{"129":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"PNG favicons"};

var linkIconSvg={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V","3073":"y M WB S"},C:{"2":"sB KB pB hB","260":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s","1025":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","3073":"y M WB S gB bB aB"},E:{"2":"G W I D F 0B YB cB dB eB","516":"E A B C O H fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 w x P z","2":"6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v AB CB EB FB GB HB DB lB mB nB oB R VB qB BB","3073":"U N T"},G:{"130":"F YB rB IB tB uB vB wB","516":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"130":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D","130":"A"},K:{"130":"A B C P R VB BB"},L:{"3073":"S"},M:{"2":"N"},N:{"130":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1025":"RC"}},B:1,C:"SVG favicons"};

var linkRelDnsPrefetch={A:{A:{"1":"A B","2":"I D F iB","132":"E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"2":"sB KB","260":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"16":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"16":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Resource Hints: dns-prefetch"};

var linkRelModulepreload={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"MC XB NC OC","2":"G IC JC KC LC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"2":"RC"}},B:1,C:"Resource Hints: modulepreload"};

var linkRelPreconnect={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H","260":"Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q pB hB","129":"r"},D:{"1":"0 1 2 3 4 5 6 7 8 9 P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"16":"N"},N:{"2":"A B"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Resource Hints: preconnect"};

var linkRelPrefetch={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D"},E:{"2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB","194":"H jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B","194":"8B 9B"},H:{"2":"AC"},I:{"1":"G M FC GC","2":"KB BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Resource Hints: prefetch"};

var linkRelPreload={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J","1028":"K L"},C:{"2":"0 1 2 3 4 5 6 7 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","132":"8","578":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB","322":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB","322":"1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"578":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Resource Hints: preload"};

var linkRelPrerender={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"1":"B","2":"A"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"Resource Hints: prerender"};

var loadingLazyAttr={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB pB hB"},D:{"1":"SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB","194":"RB"},E:{"2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB","322":"H jB kB"},F:{"1":"GB HB DB U N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B","322":"8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"OC","2":"G IC JC KC LC MC XB NC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"Lazy loading via attribute for images & iframes"};

var localecompare={A:{A:{"1":"B","16":"iB","132":"I D F E A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b"},E:{"1":"A B C O H XB R BB jB kB","132":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E B C lB mB nB oB R VB qB","132":"BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"F YB rB IB tB uB vB wB xB yB"},H:{"132":"AC"},I:{"1":"M FC GC","132":"KB G BC CC DC EC IB"},J:{"132":"D A"},K:{"1":"P","16":"A B C R VB","132":"BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","132":"A"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","132":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"4":"RC"}},B:6,C:"localeCompare()"};

var magnetometer={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"AB LB CB JB EB FB GB HB DB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"194":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Magnetometer"};

var matchesselector={A:{A:{"2":"I D F iB","36":"E A B"},B:{"1":"Q J K L V y M WB S","36":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB","36":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","36":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","2":"G 0B YB","36":"W I D cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B lB mB nB oB R","36":"C Q J K L X Y VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB","36":"rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M","2":"BC","36":"KB G CC DC EC IB FC GC"},J:{"36":"D A"},K:{"1":"P","2":"A B","36":"C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"36":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","36":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"matches() DOM method"};

var matchmedia={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"matchMedia"};

var mathml={A:{A:{"2":"E A B iB","8":"I D F"},B:{"2":"C O H Q J K L","8":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","129":"sB KB pB hB"},D:{"1":"c","8":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H XB R BB jB kB","260":"G W I D F E 0B YB cB dB eB fB"},F:{"2":"E","4":"B C lB mB nB oB R VB qB BB","8":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB"},H:{"8":"AC"},I:{"8":"KB G M BC CC DC EC IB FC GC"},J:{"1":"A","8":"D"},K:{"8":"A B C P R VB BB"},L:{"8":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"4":"HC"},P:{"8":"G IC JC KC LC MC XB NC OC"},Q:{"8":"PC"},R:{"8":"QC"},S:{"1":"RC"}},B:2,C:"MathML"};

var maxlength={A:{A:{"1":"A B","16":"iB","900":"I D F E"},B:{"1":"V y M WB S","1025":"C O H Q J K L"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","900":"sB KB pB hB","1025":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"W 0B","900":"G YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E","132":"B C lB mB nB oB R VB qB BB"},G:{"1":"rB IB tB uB vB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB","2052":"F wB"},H:{"132":"AC"},I:{"1":"KB G DC EC IB FC GC","16":"BC CC","4097":"M"},J:{"1":"D A"},K:{"132":"A B C R VB BB","4100":"P"},L:{"4097":"S"},M:{"4097":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"4097":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1025":"RC"}},B:1,C:"maxlength attribute for input and textarea elements"};

var mediaAttribute={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L","16":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l","2":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","16":"gB bB aB"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G W 0B YB"},F:{"1":"B C Q J K L X Y Z a b c mB nB oB R VB qB BB","2":"0 1 2 3 4 5 6 7 8 9 E d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"16":"AC"},I:{"1":"G M EC IB FC GC","16":"KB BC CC DC"},J:{"16":"D A"},K:{"1":"C P BB","16":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Media attribute"};

var mediaFragments={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","132":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l pB hB","132":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K","132":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W 0B YB cB","132":"I D F E A B C O H dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB IB tB uB vB","132":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","132":"M FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"132":"S"},M:{"132":"N"},N:{"132":"A B"},O:{"2":"HC"},P:{"2":"G IC","132":"JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"132":"RC"}},B:2,C:"Media Fragments"};

var mediaSessionApi={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB","16":"H jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Media Session API"};

var mediacaptureFromelement={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u pB hB","260":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","324":"3 4 5 6 7 8 9 AB LB CB JB"},E:{"2":"G W I D F E A 0B YB cB dB eB fB XB","132":"B C O H R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB","324":"o p q r s t u v w x P z"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"260":"N"},N:{"2":"A B"},O:{"132":"HC"},P:{"1":"LC MC XB NC OC","2":"G","132":"IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"260":"RC"}},B:5,C:"Media Capture from DOM Elements API"};

var mediarecorder={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P","194":"0 z"},E:{"2":"G W I D F E A B C 0B YB cB dB eB fB XB R","322":"O H BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l lB mB nB oB R VB qB BB","194":"m n"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B","578":"3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:5,C:"MediaRecorder API"};

var mediasource={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB","66":"d e f g h i j k l m n o p q r s t"},D:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J","33":"b c d e f g h i","66":"K L X Y Z a"},E:{"1":"F E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B","260":"5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M GC","2":"KB G BC CC DC EC IB FC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"MC XB NC OC","2":"G IC JC KC LC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Media Source Extensions"};

var menu={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","2114":"V y M WB S"},C:{"2":"sB KB G W I D pB hB","132":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s","322":"0 1 2 3","578":"t u v w x P z","2114":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m lB mB nB oB R VB qB BB","322":"n o p q","2114":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1156":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2114":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Context menu item (menuitem element)"};

var metaThemeColor={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q","132":"PB QB RB SB TB UB V y M WB S gB bB aB","258":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"513":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G","16":"IC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"theme-color Meta Tag"};

var meter={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E lB mB nB oB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"meter element"};

var midi={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"Web MIDI API"};

var minmaxwh={A:{A:{"1":"E A B","8":"I iB","129":"D","257":"F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"CSS min/max-width/height"};

var mp3={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","132":"G W I D F E A B C O H Q J K L X Y Z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","2":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"MP3 audio format"};

var mpegDash={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L","2":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","386":"Z a"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Dynamic Adaptive Streaming over HTTP (MPEG-DASH)"};

var mpeg4={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y pB hB","4":"Z a b c d e f g h i j k l m"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","2":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M FC GC","4":"KB G BC CC EC IB","132":"DC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"260":"N"},N:{"1":"A B"},O:{"4":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"MPEG-4/H.264 video format"};

var multibackgrounds={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 Multiple backgrounds"};

var multicolumn={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L","516":"V y M WB S"},C:{"132":"4 5 6 7 8 9 AB LB CB JB EB FB GB","164":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","516":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"420":"0 1 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","516":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"A B C O H XB R BB jB kB","132":"E fB","164":"D F eB","420":"G W I 0B YB cB dB"},F:{"1":"C R VB qB BB","2":"E B lB mB nB oB","420":"Q J K L X Y Z a b c d e f g h i j k l m n o","516":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"xB yB","164":"F vB wB","420":"YB rB IB tB uB"},H:{"1":"AC"},I:{"420":"KB G BC CC DC EC IB FC GC","516":"M"},J:{"420":"D A"},K:{"1":"C R VB BB","2":"A B","132":"P"},L:{"516":"S"},M:{"132":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","420":"G"},Q:{"132":"PC"},R:{"132":"QC"},S:{"164":"RC"}},B:4,C:"CSS3 Multiple column layout"};

var mutationEvents={A:{A:{"2":"I D F iB","260":"E A B"},B:{"132":"V y M WB S","260":"C O H Q J K L"},C:{"2":"sB KB G W pB hB","260":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"16":"G W I D F E A B C O H","132":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"16":"0B YB","132":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"1":"C qB BB","2":"E lB mB nB oB","16":"B R VB","132":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"16":"YB rB","132":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"16":"BC CC","132":"KB G M DC EC IB FC GC"},J:{"132":"D A"},K:{"1":"C BB","2":"A","16":"B R VB","132":"P"},L:{"132":"S"},M:{"260":"N"},N:{"260":"A B"},O:{"132":"HC"},P:{"132":"G IC JC KC LC MC XB NC OC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"260":"RC"}},B:5,C:"Mutation events"};

var mutationobserver={A:{A:{"1":"B","2":"I D F iB","8":"E A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K","33":"L X Y Z a b c d e"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","33":"uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB BC CC DC","8":"G EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","8":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Mutation Observer"};

var namevalueStorage={A:{A:{"1":"F E A B","2":"iB","8":"I D"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","4":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Web Storage - name/value pairs"};

var nativeFilesystemApi={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","194":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB","194":"QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB lB mB nB oB R VB qB BB","194":"EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Native Filesystem API"};

var navTiming={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W","33":"I D F E A B C"},E:{"1":"F E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"G M EC IB FC GC","2":"KB BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Navigation Timing API"};

var navigatorLanguage={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H Q"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"16":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"16":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"1":"RC"}},B:2,C:"Navigator Language API"};

var netinfo={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","1028":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB","1028":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","1028":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"BC FC GC","132":"KB G CC DC EC IB"},J:{"2":"D A"},K:{"2":"A B C R VB BB","516":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","132":"G","516":"IC JC KC"},Q:{"1":"PC"},R:{"516":"QC"},S:{"260":"RC"}},B:7,C:"Network Information API"};

var nodeContains={A:{A:{"16":"iB","644":"E A B","2308":"I D F"},B:{"1":"O H Q J K L V y M WB S","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","16":"G W I 0B YB","1668":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","16":"E B C lB mB nB oB R VB","132":"qB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB uB"},H:{"16":"AC"},I:{"1":"M FC GC","16":"KB BC CC DC","1668":"G EC IB"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Node.contains()"};

var nodeParentelement={A:{A:{"16":"iB","132":"E A B","260":"I D F"},B:{"1":"O H Q J K L V y M WB S","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E B lB mB nB oB R VB","132":"C qB BB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB"},H:{"16":"AC"},I:{"1":"G M EC IB FC GC","16":"KB BC CC DC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Node.parentElement"};

var notifications={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G","36":"W I D F E A B C O H Q J K L X Y Z"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","36":"M FC GC"},J:{"1":"A","2":"D"},K:{"2":"A B C R VB BB","36":"P"},L:{"513":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"36":"G","258":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"258":"QC"},S:{"1":"RC"}},B:1,C:"Web Notifications"};

var objectEntries={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB"},D:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","16":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:6,C:"Object.entries"};

var objectFit={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q","260":"J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D 0B YB cB dB","132":"F E eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E Q J K L lB mB nB","33":"B C oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","132":"F wB xB yB"},H:{"33":"AC"},I:{"1":"M GC","2":"KB G BC CC DC EC IB FC"},J:{"2":"D A"},K:{"1":"P","2":"A","33":"B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 object-fit/object-position"};

var objectObserve={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 o p q r s t u v w x P z","2":"2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"b c d e f g h i j k l m n o","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"G","2":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:7,C:"Object.observe data binding"};

var objectValues={A:{A:{"8":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB"},D:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","8":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB CB EB FB GB HB DB U N T","8":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"F YB rB IB tB uB vB wB xB yB zB"},H:{"8":"AC"},I:{"1":"M","8":"KB G BC CC DC EC IB FC GC"},J:{"8":"D A"},K:{"1":"P","8":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","8":"G IC"},Q:{"1":"PC"},R:{"8":"QC"},S:{"1":"RC"}},B:6,C:"Object.values method"};

var objectrtc={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L","2":"C V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D","130":"A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Object RTC (ORTC) API for WebRTC"};

var offlineApps={A:{A:{"1":"A B","2":"E iB","8":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","4":"KB","8":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","2":"gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","8":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB","8":"mB nB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"Offline web applications"};

var offscreencanvas={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v pB hB","194":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","322":"AB LB CB JB EB FB GB HB DB U N"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w lB mB nB oB R VB qB BB","322":"0 1 2 3 4 5 6 7 8 9 x P z AB CB EB FB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"194":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"XB NC OC","2":"G IC JC KC LC MC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"194":"RC"}},B:1,C:"OffscreenCanvas"};

var oggVorbis={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"A","2":"D"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Ogg Vorbis audio format"};

var ogv={A:{A:{"2":"I D F iB","8":"E A B"},B:{"1":"K L V y M WB S","8":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1":"N"},N:{"8":"A B"},O:{"1":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:6,C:"Ogg/Theora video format"};

var olReversed={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q","16":"J K L X"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","16":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB","16":"C"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Reversed attribute of ordered lists"};

var onceEventListener={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H Q"},C:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"\"once\" event listener option"};

var onlineStatus={A:{A:{"1":"E A B","2":"I D iB","260":"F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB","516":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB","4":"BB"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"A","132":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Online/offline status"};

var opus={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k"},E:{"2":"G W I D F E A 0B YB cB dB eB fB XB","132":"B C O H R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB","132":"1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Opus"};

var orientationSensor={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"AB LB CB JB EB FB GB HB DB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Orientation Sensor"};

var outline={A:{A:{"2":"I D iB","260":"F","388":"E A B"},B:{"1":"Q J K L V y M WB S","388":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB","129":"BB","260":"E B lB mB nB oB R VB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"C P BB","260":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"388":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS outline properties"};

var padStartEnd={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:6,C:"String.prototype.padStart(), String.prototype.padEnd()"};

var pageTransitionEvents={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"PageTransitionEvent"};

var pagevisibility={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E pB hB","33":"A B C O H Q J K"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O","33":"H Q J K L X Y Z a b c d e f g h i j k"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W I 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB","33":"Q J K L X"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB","33":"FC GC"},J:{"1":"A","2":"D"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","33":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Page Visibility"};

var passiveEventListener={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H Q"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"Passive event listeners"};

var passwordrules={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","16":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V pB hB","16":"y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","16":"gB bB aB"},E:{"1":"C O BB","2":"G W I D F E A B 0B YB cB dB eB fB XB R","16":"H jB kB"},F:{"2":"0 1 2 3 4 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","16":"5 6 7 8 9 AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","16":"M"},J:{"2":"D","16":"A"},K:{"2":"A B C R VB BB","16":"P"},L:{"16":"S"},M:{"16":"N"},N:{"2":"A","16":"B"},O:{"16":"HC"},P:{"2":"G IC JC","16":"KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"2":"RC"}},B:1,C:"Password Rules"};

var path2d={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O","132":"H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB","132":"j k l m n o p q r s t u v w x P z"},D:{"1":"N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n","132":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB","132":"F E eB"},F:{"1":"7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a lB mB nB oB R VB qB BB","132":"0 1 2 3 4 5 6 b c d e f g h i j k l m n o p q r s t u v w x P z"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","16":"F","132":"wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"1":"A","2":"D"},K:{"2":"A B C R VB BB","132":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"132":"HC"},P:{"1":"XB NC OC","132":"G IC JC KC LC MC"},Q:{"132":"PC"},R:{"132":"QC"},S:{"1":"RC"}},B:1,C:"Path2D"};

var paymentRequest={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O","322":"H","8196":"Q J K L"},C:{"2":"0 1 2 3 4 5 6 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","4162":"7 8 9 AB LB CB JB EB FB GB HB","16452":"DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"UB V y M WB S gB bB aB","2":"0 1 2 3 4 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"5 6 7 8 9 AB","1090":"LB CB","8196":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB"},E:{"1":"O H BB jB kB","2":"G W I D F E 0B YB cB dB eB fB","514":"A B XB","8196":"C R"},F:{"1":"DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r lB mB nB oB R VB qB BB","194":"s t u v w x P z","8196":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB","514":"zB ZB 1B","8196":"2B 3B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2052":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"OC","2":"G","8196":"IC JC KC LC MC XB NC"},Q:{"8196":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Payment Request API"};

var pdfViewer={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"Q J K L V y M WB S","16":"C O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"16":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Built-in PDF viewer"};

var permissionsApi={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:7,C:"Permissions API"};

var permissionsPolicy={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","258":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB pB hB","258":"QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB","258":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB","450":"bB aB"},E:{"2":"G W I D F E A B 0B YB cB dB eB fB XB","258":"C O H R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P lB mB nB oB R VB qB BB","258":"0 1 2 3 4 5 6 7 8 9 z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B","258":"2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","258":"M"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"258":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC","258":"LC MC XB NC OC"},Q:{"258":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Permissions Policy"};

var pictureInPicture={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB pB hB","132":"OB PB QB RB SB TB UB V y M","1090":"U","1412":"NB","1668":"N T MB"},D:{"1":"MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N","2114":"T"},E:{"1":"H jB kB","2":"G W I D F E 0B YB cB dB eB fB","4100":"A B C O XB R BB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o lB mB nB oB R VB qB BB","8196":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"9B","2":"F YB rB IB tB uB vB wB","4100":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"16388":"S"},M:{"16388":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Picture-in-Picture"};

var picture={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l pB hB","578":"m n o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o","194":"p"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB","322":"c"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Picture element"};

var ping={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"2":"sB","194":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"194":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"194":"RC"}},B:1,C:"Ping attribute"};

var pngAlpha={A:{A:{"1":"D F E A B","2":"iB","8":"I"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"PNG alpha transparency"};

var pointerEvents={A:{A:{"1":"B","2":"I D F E A iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"CSS pointer-events (for HTML)"};

var pointer={A:{A:{"1":"B","2":"I D F E iB","164":"A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB","8":"I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s","328":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB"},D:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z","8":"0 1 2 3 a b c d e f g h i j k l m n o p q r s t u v w x P z","584":"4 5 6"},E:{"1":"O H jB kB","2":"G W I 0B YB cB","8":"D F E A B C dB eB fB XB R","1096":"BB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","8":"Q J K L X Y Z a b c d e f g h i j k l m n o p q","584":"r s t"},G:{"1":"6B 7B 8B 9B","8":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B","6148":"5B"},H:{"2":"AC"},I:{"1":"M","8":"KB G BC CC DC EC IB FC GC"},J:{"8":"D A"},K:{"1":"P","2":"A","8":"B C R VB BB"},L:{"1":"S"},M:{"328":"N"},N:{"1":"B","36":"A"},O:{"8":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"IC","8":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"328":"RC"}},B:2,C:"Pointer events"};

var pointerlock={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O pB hB","33":"H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q","33":"a b c d e f g h i j k l m n o","66":"J K L X Y Z"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a b"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:2,C:"Pointer Lock API"};

var portals={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB","194":"RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB lB mB nB oB R VB qB BB","194":"EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"194":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Portals"};

var prefersColorScheme={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB pB hB"},D:{"1":"SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB"},E:{"1":"O H BB jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"1":"EB FB GB HB DB U N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB lB mB nB oB R VB qB BB"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"OC","2":"G IC JC KC LC MC XB NC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"prefers-color-scheme media query"};

var prefersReducedMotion={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB pB hB"},D:{"1":"QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"GB HB DB U N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"NC OC","2":"G IC JC KC LC MC XB"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"prefers-reduced-motion media query"};

var privateClassFields={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Private class fields"};

var privateMethodsAndAccessors={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Public class fields"};

var progress={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E lB mB nB oB"},G:{"2":"YB rB IB tB uB","132":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"progress element"};

var promiseFinally={A:{A:{"2":"I D F E A B iB"},B:{"1":"L V y M WB S","2":"C O H Q J K"},C:{"1":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Promise.prototype.finally"};

var promises={A:{A:{"8":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","4":"f g","8":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"k","8":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","8":"G W I D 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","4":"X","8":"E B C Q J K L lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB tB uB vB"},H:{"8":"AC"},I:{"1":"M GC","8":"KB G BC CC DC EC IB FC"},J:{"8":"D A"},K:{"1":"P","8":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Promises"};

var proximity={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:4,C:"Proximity API"};

var proxy={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L q r s t u v w x P z","66":"X Y Z a b c d e f g h i j k l m n o p"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C d e f g h i j k l m n lB mB nB oB R VB qB BB","66":"Q J K L X Y Z a b c"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:6,C:"Proxy object"};

var publicClassFields={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Public class fields"};

var publickeypinning={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB","2":"E B C Q J K L X DB U N T lB mB nB oB R VB qB BB","4":"b","16":"Y Z a c"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB","2":"NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Public Key Pinning"};

var pushApi={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L","2":"C O H Q J","257":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v pB hB","257":"0 1 2 3 5 6 7 8 9 w P z AB LB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","1281":"4 x CB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v","257":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","388":"0 1 w x P z"},E:{"2":"G W I D F E 0B YB cB dB eB","514":"A B C O H fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o lB mB nB oB R VB qB BB","16":"p q r s t","257":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"257":"RC"}},B:5,C:"Push API"};

var queryselector={A:{A:{"1":"E A B","2":"iB","8":"I D","132":"F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","8":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","8":"E lB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"querySelector/querySelectorAll"};

var readonlyAttr={A:{A:{"1":"I D F E A B","16":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","16":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E lB","132":"B C mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB uB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"P","132":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"257":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"readonly attribute of input and textarea elements"};

var referrerPolicy={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"V y M WB","132":"C O H Q J K L","513":"S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB","2":"G W I D F E A B C O H Q J K L X Y","260":"0 1 2 3 4 5 6 7 8 9 Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB","513":"S gB bB aB"},E:{"1":"C O H R BB jB kB","2":"G W I D 0B YB cB dB","132":"F E A B eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","132":"F wB xB yB zB ZB 1B 2B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"513":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Referrer Policy"};

var registerprotocolhandler={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","129":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB"},D:{"2":"G W I D F E A B C","129":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B lB mB nB oB R VB","129":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D","129":"A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"Custom protocol handling"};

var relNoopener={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:1,C:"rel=noopener"};

var relNoreferrer={A:{A:{"2":"I D F E A iB","132":"B"},B:{"1":"O H Q J K L V y M WB S","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Link type \"noreferrer\""};

var rellist={A:{A:{"2":"I D F E A B iB"},B:{"1":"L V y M WB S","2":"C O H Q J","132":"K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h pB hB"},D:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","132":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D F 0B YB cB dB eB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o lB mB nB oB R VB qB BB","132":"0 1 2 3 p q r s t u v w x P z"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"132":"HC"},P:{"1":"MC XB NC OC","2":"G","132":"IC JC KC LC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:1,C:"relList (DOMTokenList)"};

var rem={A:{A:{"1":"B","2":"I D F iB","132":"E A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB"},G:{"1":"F rB IB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB","260":"tB"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"C P BB","2":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"rem (root em) units"};

var replaceAll={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"H jB kB","2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"16":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"16":"QC"},S:{"16":"RC"}},B:7,C:"String.prototype.replaceAll()"};

var requestanimationframe={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","33":"B C O H Q J K L X Y Z a","164":"G W I D F E A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E","33":"a b","164":"L X Y Z","420":"A B C O H Q J K"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","33":"uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"requestAnimationFrame"};

var requestidlecallback={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","194":"5 6"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:5,C:"requestIdleCallback"};

var resizeobserver={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N pB hB"},D:{"1":"GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","194":"6 7 8 9 AB LB CB JB EB FB"},E:{"1":"H jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R BB","66":"O"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s lB mB nB oB R VB qB BB","194":"0 1 2 3 t u v w x P z"},G:{"1":"8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"MC XB NC OC","2":"G IC JC KC LC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Resize Observer"};

var resourceTiming={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB","194":"j k l m"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB","260":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Resource Timing"};

var restParameters={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v","194":"w x P"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i lB mB nB oB R VB qB BB","194":"j k l"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Rest parameters"};

var rtcpeerconnection={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H","516":"Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB","33":"a b c d e f g h i j k l m n o p q r s t u v"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a","33":"0 1 2 3 4 5 6 7 b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K lB mB nB oB R VB qB BB","33":"L X Y Z a b c d e f g h i j k l m n o p q r s t u"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","130":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"33":"QC"},S:{"1":"RC"}},B:5,C:"WebRTC Peer-to-peer connections"};

var ruby={A:{A:{"4":"I D F E A B iB"},B:{"4":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p pB hB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G"},E:{"4":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","8":"G 0B YB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","8":"E B C lB mB nB oB R VB qB BB"},G:{"4":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB"},H:{"8":"AC"},I:{"4":"KB G M EC IB FC GC","8":"BC CC DC"},J:{"4":"A","8":"D"},K:{"4":"P","8":"A B C R VB BB"},L:{"4":"S"},M:{"1":"N"},N:{"4":"A B"},O:{"4":"HC"},P:{"4":"G IC JC KC LC MC XB NC OC"},Q:{"4":"PC"},R:{"4":"QC"},S:{"1":"RC"}},B:1,C:"Ruby annotation"};

var runIn={A:{A:{"1":"F E A B","2":"I D iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j","2":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I cB","2":"D F E A B C O H eB fB XB R BB jB kB","16":"dB","129":"G 0B YB"},F:{"1":"E B C Q J K L lB mB nB oB R VB qB BB","2":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"rB IB tB uB vB","2":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","129":"YB"},H:{"1":"AC"},I:{"1":"KB G BC CC DC EC IB FC","2":"M GC"},J:{"1":"D A"},K:{"1":"A B C R VB BB","2":"P"},L:{"2":"S"},M:{"2":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"display: run-in"};

var sameSiteCookieAttribute={A:{A:{"2":"I D F E A iB","388":"B"},B:{"1":"L V y M WB S","2":"C O H Q","129":"J K"},C:{"1":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB pB hB"},D:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","513":"y M WB S gB bB aB"},E:{"2":"G W I D F E A B 0B YB cB dB eB fB XB R","2052":"H jB kB","3076":"C O BB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q lB mB nB oB R VB qB BB"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B","2052":"3B 4B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"513":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"16":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:6,C:"'SameSite' cookie attribute"};

var screenOrientation={A:{A:{"2":"I D F E A iB","164":"B"},B:{"1":"V y M WB S","36":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K pB hB","36":"L X Y Z a b c d e f g h i j k l m n o p q r s t u v"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A","36":"B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"Screen Orientation"};

var scriptAsync={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB","132":"W"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"async attribute for external scripts"};

var scriptDefer={A:{A:{"1":"A B","132":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","257":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"defer attribute for external scripts"};

var scrollintoview={A:{A:{"2":"I D iB","132":"F E A B"},B:{"1":"V y M WB S","132":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB"},E:{"2":"G W 0B YB","132":"I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E lB mB nB oB","16":"B R VB","132":"C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z qB BB"},G:{"16":"YB rB IB","132":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"16":"BC CC","132":"KB G M DC EC IB FC GC"},J:{"132":"D A"},K:{"132":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"132":"HC"},P:{"132":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"132":"QC"},S:{"1":"RC"}},B:5,C:"scrollIntoView"};

var scrollintoviewifneeded={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:7,C:"Element.scrollIntoViewIfNeeded()"};

var sdch={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB","2":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"SDCH Accept-Encoding/Content-Encoding"};

var selectionApi={A:{A:{"1":"E A B","16":"iB","260":"I D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u pB hB","2180":"0 1 2 3 v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","132":"E B C lB mB nB oB R VB qB BB"},G:{"16":"IB","132":"YB rB","516":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M FC GC","16":"KB G BC CC DC EC","1025":"IB"},J:{"1":"A","16":"D"},K:{"1":"P","16":"A B C R VB","132":"BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","16":"A"},O:{"1025":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2180":"RC"}},B:5,C:"Selection API"};

var serverTiming={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB pB hB"},D:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB","196":"CB JB EB FB","324":"GB"},E:{"2":"G W I D F E A B C 0B YB cB dB eB fB XB R","516":"O H BB jB kB"},F:{"1":"4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Server Timing"};

var serviceworkers={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H","322":"Q J"},C:{"1":"0 1 2 3 5 6 7 8 9 w P z AB LB JB EB FB GB HB DB U T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB","194":"l m n o p q r s t u v","513":"4 x CB N"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r","4":"s t u v w"},E:{"1":"C O H R BB jB kB","2":"G W I D F E A B 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e lB mB nB oB R VB qB BB","4":"f g h i j"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","4":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","4":"P"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"4":"QC"},S:{"2":"RC"}},B:4,C:"Service Workers"};

var setimmediate={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L","2":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"1":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Efficient Script Yielding: setImmediate()"};

var sha2={A:{A:{"1":"I D F E A B","2":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"1":"KB G M CC DC EC IB FC GC","260":"BC"},J:{"1":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"16":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"SHA-2 SSL certificates"};

var shadowdom={A:{A:{"2":"I D F E A B iB"},B:{"1":"V","2":"C O H Q J K L y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","66":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","2":"G W I D F E A B C O H Q J K L X Y Z a b c y M WB S gB bB aB","33":"d e f g h i j k l m"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB","2":"E B C U N T lB mB nB oB R VB qB BB","33":"Q J K L X Y Z"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB","33":"FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","33":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:7,C:"Shadow DOM (deprecated V0 spec)"};

var shadowdomv1={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","322":"AB","578":"LB CB JB EB"},D:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"A B C O H XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB","132":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G","4":"IC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Shadow DOM (V1)"};

var sharedarraybuffer={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q","194":"J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","194":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB","450":"QB RB SB TB UB","513":"V y M"},D:{"1":"N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB","194":"CB JB EB FB GB HB DB U"},E:{"2":"G W I D F E A 0B YB cB dB eB fB","194":"B C O H XB R BB jB kB"},F:{"1":"GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P lB mB nB oB R VB qB BB","194":"0 1 2 3 4 5 6 7 8 9 z AB CB EB FB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB","194":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"194":"S"},M:{"194":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"Shared Array Buffer"};

var sharedworkers={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"W I cB","2":"G D F E A B C O H 0B YB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB mB nB"},G:{"1":"tB uB","2":"F YB rB IB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C R VB BB","2":"P","16":"A"},L:{"2":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"G","2":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:1,C:"Shared Web Workers"};

var sni={A:{A:{"1":"E A B","2":"I iB","132":"D F"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB"},H:{"1":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Server Name Indication"};

var spdy={A:{A:{"1":"B","2":"I D F E A iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","2":"3 4 5 6 7 8 9 sB KB G W I D F E A B C AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","2":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"F E A B C fB XB R","2":"G W I D 0B YB cB dB eB","129":"O H BB jB kB"},F:{"1":"Q J K L X Y Z a b c d e f g h i j k l m n o p q r u w BB","2":"0 1 2 3 4 5 6 7 8 9 E B C s t v x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B","2":"YB rB IB tB uB vB","257":"4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G EC IB FC GC","2":"M BC CC DC"},J:{"2":"D A"},K:{"1":"BB","2":"A B C P R VB"},L:{"2":"S"},M:{"2":"N"},N:{"1":"B","2":"A"},O:{"2":"HC"},P:{"1":"G","2":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"16":"QC"},S:{"1":"RC"}},B:7,C:"SPDY protocol"};

var speechRecognition={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","1026":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB","322":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c","164":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e lB mB nB oB R VB qB BB","1026":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"164":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"164":"G IC JC KC LC MC XB NC OC"},Q:{"164":"PC"},R:{"164":"QC"},S:{"322":"RC"}},B:7,C:"Speech Recognition API"};

var speechSynthesis={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L","2":"C O","257":"V y M WB S"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i pB hB","194":"0 j k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 l m n o p q r s t u v w x P z","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k","257":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB CB EB FB","2":"E B C Q J K L X Y Z a b c d e lB mB nB oB R VB qB BB","257":"GB HB DB U N T"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:7,C:"Speech Synthesis API"};

var spellcheckAttribute={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"4":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"4":"AC"},I:{"4":"KB G M BC CC DC EC IB FC GC"},J:{"1":"A","4":"D"},K:{"4":"A B C P R VB BB"},L:{"4":"S"},M:{"4":"N"},N:{"4":"A B"},O:{"4":"HC"},P:{"4":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"4":"QC"},S:{"2":"RC"}},B:1,C:"Spellcheck attribute"};

var sqlStorage={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C 0B YB cB dB eB fB XB R BB","2":"O H jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B","2":"5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:7,C:"Web SQL Database"};

var srcset={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","260":"C","514":"O H Q"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j pB hB","194":"k l m n o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l","260":"m n o p"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB dB","260":"F eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y lB mB nB oB R VB qB BB","260":"Z a b c"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","260":"F wB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Srcset and sizes attributes"};

var stopimmediatepropagation={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB","16":"C"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB"},H:{"16":"AC"},I:{"1":"G M EC IB FC GC","16":"KB BC CC DC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","16":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Event.stopImmediatePropagation()"};

var stream={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J pB hB","129":"o p q r s t","420":"K L X Y Z a b c d e f g h i j k l m n"},D:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y","420":"0 1 2 3 4 Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B Q J K lB mB nB oB R VB qB","420":"C L X Y Z a b c d e f g h i j k l m n o p q r BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB","513":"8B 9B","1537":"1B 2B 3B 4B 5B 6B 7B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","420":"A"},K:{"1":"P","2":"A B R VB","420":"C BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"JC KC LC MC XB NC OC","420":"G IC"},Q:{"1":"PC"},R:{"420":"QC"},S:{"2":"RC"}},B:4,C:"getUserMedia/Stream API"};

var streams={A:{A:{"2":"I D F E A iB","130":"B"},B:{"16":"C O","260":"H Q","1028":"V y M WB S","5124":"J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","6148":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M","6722":"9 AB LB CB JB EB FB GB"},D:{"2":"0 1 2 3 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","260":"4 5 6 7 8 9 AB","1028":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E 0B YB cB dB eB fB","3076":"A B C O H XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q lB mB nB oB R VB qB BB","260":"r s t u v w x","1028":"0 1 2 3 4 5 6 7 8 9 P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB","16":"zB","1028":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","260":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","1028":"P"},L:{"1028":"S"},M:{"2626":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC","1028":"KC LC MC XB NC OC"},Q:{"1028":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"Streams"};

var stricttransportsecurity={A:{A:{"2":"I D F E A iB","129":"B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Strict Transport Security"};

var styleScoped={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 Z a b c d e f g h i j k l m n o p q r s t u v w x P z","2":"sB KB G W I D F E A B C O H Q J K L X Y JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","322":"7 8 9 AB LB CB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","194":"Y Z a b c d e f g h i j k l m n o"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"322":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:7,C:"Scoped CSS"};

var subresourceIntegrity={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB","194":"1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Subresource Integrity"};

var svgCss={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"J K L V y M WB S","516":"C O H Q"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","260":"G W I D F E A B C O H Q J K L X Y Z a b"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G"},E:{"1":"W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B","132":"G YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"YB rB"},H:{"260":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"P","260":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"SVG in CSS backgrounds"};

var svgFilters={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G","4":"W I D"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"SVG filters"};

var svgFonts={A:{A:{"2":"E A B iB","8":"I D F"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p","2":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","130":"0 1 2 q r s t u v w x P z"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","2":"0B"},F:{"1":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB","2":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB CB EB FB GB HB DB U N T","130":"d e f g h i j k l m n o"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"258":"AC"},I:{"1":"KB G EC IB FC GC","2":"M BC CC DC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"130":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"G","130":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"130":"QC"},S:{"2":"RC"}},B:2,C:"SVG fonts"};

var svgFragment={A:{A:{"2":"I D F iB","260":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n","132":"0 1 o p q r s t u v w x P z"},E:{"1":"C O H R BB jB kB","2":"G W I D E A B 0B YB cB dB fB XB","132":"F eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"Q J K L X Y Z a","4":"B C mB nB oB R VB qB","16":"E lB","132":"b c d e f g h i j k l m n o"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB xB yB zB ZB 1B","132":"F wB"},H:{"1":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D","132":"A"},K:{"1":"P BB","4":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","132":"G"},Q:{"1":"PC"},R:{"132":"QC"},S:{"1":"RC"}},B:4,C:"SVG fragment identifiers"};

var svgHtml={A:{A:{"2":"I D F iB","388":"E A B"},B:{"4":"V y M WB S","260":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB","4":"KB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"0B YB","4":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"4":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","4":"M FC GC"},J:{"1":"A","2":"D"},K:{"4":"A B C P R VB BB"},L:{"4":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"4":"G IC JC KC LC MC XB NC OC"},Q:{"4":"PC"},R:{"4":"QC"},S:{"1":"RC"}},B:2,C:"SVG effects for HTML"};

var svgHtml5={A:{A:{"2":"iB","8":"I D F","129":"E A B"},B:{"1":"K L V y M WB S","129":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","8":"G W I"},E:{"1":"E A B C O H fB XB R BB jB kB","8":"G W 0B YB","129":"I D F cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"B oB R VB","8":"E lB mB nB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","8":"YB rB IB","129":"F tB uB vB wB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"BC CC DC","129":"KB G EC IB"},J:{"1":"A","129":"D"},K:{"1":"C P BB","8":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"129":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Inline SVG in HTML5"};

var svgImg={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"0B","4":"YB","132":"G W I D F cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"F YB rB IB tB uB vB wB"},H:{"1":"AC"},I:{"1":"M FC GC","2":"BC CC DC","132":"KB G EC IB"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"SVG in HTML img element"};

var svgSmil={A:{A:{"2":"iB","8":"I D F E A B"},B:{"1":"V y M WB S","8":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","8":"0B YB","132":"G W cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"YB rB IB tB"},H:{"2":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"SVG SMIL animation"};

var svg={A:{A:{"2":"iB","8":"I D F","772":"E A B"},B:{"1":"V y M WB S","513":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","4":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","4":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"M FC GC","2":"BC CC DC","132":"KB G EC IB"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"257":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"SVG (basic support)"};

var sxg={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB","132":"NB OB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"GB HB DB U N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"16":"HC"},P:{"2":"G IC JC KC LC MC XB","16":"NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"2":"RC"}},B:6,C:"Signed HTTP Exchanges (SXG)"};

var symbols={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p"},E:{"1":"E A B C O H 0B YB cB dB eB fB XB R BB jB kB","2":"G W I D F"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"1":"RC"}},B:6,C:"Symbols"};

var tabindexAttr={A:{A:{"1":"D F E A B","16":"I iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"16":"sB KB pB hB","129":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H"},E:{"16":"G W 0B YB","257":"I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"769":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"16":"KB G M BC CC DC EC IB FC GC"},J:{"16":"D A"},K:{"16":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"16":"A B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"16":"QC"},S:{"129":"RC"}},B:1,C:"tabindex global attribute"};

var templateLiterals={A:{A:{"2":"I D F E A B iB"},B:{"1":"O H Q J K L V y M WB S","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},E:{"1":"A B O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB","129":"C"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g lB mB nB oB R VB qB BB"},G:{"1":"xB yB zB ZB 1B 2B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB","129":"3B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ES6 Template Literals (Template Strings)"};

var template={A:{A:{"2":"I D F E A B iB"},B:{"1":"Q J K L V y M WB S","2":"C","388":"O H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d","132":"e f g h i j k l m"},E:{"1":"E A B C O H fB XB R BB jB kB","2":"G W I D 0B YB cB","388":"F eB","514":"dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","132":"Q J K L X Y Z"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB","388":"F wB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"HTML templates"};

var testfeat={A:{A:{"2":"I D F A B iB","16":"E"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","16":"G W"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"B C"},E:{"2":"G I 0B YB cB","16":"W D F E A B C O H dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB VB qB BB","16":"R"},G:{"2":"YB rB IB tB uB","16":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC EC IB FC GC","16":"DC"},J:{"2":"A","16":"D"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Test feature - updated"};

var textDecoration={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","2052":"V y M WB S"},C:{"2":"sB KB G W pB hB","1028":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","1060":"I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d","226":"0 1 2 3 4 5 6 7 8 e f g h i j k l m n o p q r s t u v w x P z","2052":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D 0B YB cB dB","772":"O H BB jB kB","804":"F E A B C fB XB R","1316":"eB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m lB mB nB oB R VB qB BB","226":"n o p q r s t u v","2052":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"YB rB IB tB uB vB","292":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","2052":"P"},L:{"2052":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2052":"HC"},P:{"2":"G IC JC","2052":"KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"1":"QC"},S:{"1028":"RC"}},B:4,C:"text-decoration styling"};

var textEmphasis={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","164":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w pB hB","322":"x"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c","164":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB","164":"D dB"},F:{"2":"E B C lB mB nB oB R VB qB BB","164":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB","164":"M FC GC"},J:{"2":"D","164":"A"},K:{"2":"A B C R VB BB","164":"P"},L:{"164":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"164":"HC"},P:{"164":"G IC JC KC LC MC XB NC OC"},Q:{"164":"PC"},R:{"164":"QC"},S:{"1":"RC"}},B:4,C:"text-emphasis styling"};

var textOverflow={A:{A:{"1":"I D F E A B","2":"iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","8":"sB KB G W I pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","33":"E lB mB nB oB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"P BB","33":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"CSS3 Text-overflow"};

var textSizeAdjust={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","33":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d f g h i j k l m n o p q r s t u v w x P z","258":"e"},E:{"2":"G W I D F E A B C O H 0B YB dB eB fB XB R BB jB kB","258":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u w lB mB nB oB R VB qB BB"},G:{"2":"YB rB IB","33":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"33":"N"},N:{"161":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"CSS text-size-adjust"};

var textStroke={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H","33":"V y M WB S","161":"Q J K L"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","161":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","450":"0"},D:{"33":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"33":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C lB mB nB oB R VB qB BB","33":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"33":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","36":"YB"},H:{"2":"AC"},I:{"2":"KB","33":"G M BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"2":"A B C R VB BB","33":"P"},L:{"33":"S"},M:{"161":"N"},N:{"2":"A B"},O:{"33":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"33":"PC"},R:{"33":"QC"},S:{"161":"RC"}},B:7,C:"CSS text-stroke and text-fill"};

var textUnderlineOffset={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"1":"MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N pB hB","130":"T"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"O H BB jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"text-underline-offset"};

var textcontent={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","16":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"1":"F rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Node.textContent"};

var textencoder={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L pB hB","132":"X"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"TextEncoder & TextDecoder"};

var tls11={A:{A:{"1":"B","2":"I D iB","66":"F E A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a pB hB","66":"b","129":"N T MB NB OB PB QB RB SB TB","388":"UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S","2":"G W I D F E A B C O H Q J K L X Y Z","1540":"gB bB aB"},E:{"1":"D F E A B C O eB fB XB R BB","2":"G W I 0B YB cB dB","513":"H jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B C lB mB nB oB R VB qB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"1":"A","2":"D"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"129":"N"},N:{"1":"B","66":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"TLS 1.1"};

var tls12={A:{A:{"1":"B","2":"I D iB","66":"F E A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b pB hB","66":"c d e"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E Q lB","66":"B C mB nB oB R VB qB BB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"1":"A","2":"D"},K:{"1":"P BB","2":"A B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","66":"A"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"TLS 1.2"};

var tls13={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","132":"CB JB EB","450":"3 4 5 6 7 8 9 AB LB"},D:{"1":"MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","706":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T"},E:{"1":"H kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R","1028":"O BB jB"},F:{"1":"9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","706":"6 7 8"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"XB NC OC","2":"G IC JC KC LC MC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:6,C:"TLS 1.3"};

var tokenBinding={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H","194":"V y M WB S","257":"Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V pB hB","16":"y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q","16":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z","194":"AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F 0B YB cB dB eB","16":"E A B C O H fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB","16":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB","16":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"16":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","16":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","16":"P"},L:{"16":"S"},M:{"16":"N"},N:{"2":"A","16":"B"},O:{"16":"HC"},P:{"16":"G IC JC KC LC MC XB NC OC"},Q:{"16":"PC"},R:{"16":"QC"},S:{"2":"RC"}},B:6,C:"Token Binding"};

var touch={A:{A:{"2":"I D F E iB","8":"A B"},B:{"1":"V y M WB S","578":"C O H Q J K L"},C:{"1":"4 5 6 7 8 9 L X Y Z a b c AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","4":"G W I D F E A B C O H Q J K","194":"0 1 2 3 d e f g h i j k l m n o p q r s t u v w x P z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A","260":"B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"2":"RC"}},B:2,C:"Touch events"};

var transforms2d={A:{A:{"2":"iB","8":"I D F","129":"A B","161":"E"},B:{"1":"K L V y M WB S","129":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","33":"G W I D F E A B C O H Q pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"1":"E A B C O H fB XB R BB jB kB","33":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E lB mB","33":"B C Q J K L X Y Z a nB oB R VB qB"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","33":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","33":"KB G BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS3 2D Transforms"};

var transforms3d={A:{A:{"2":"I D F E iB","132":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E pB hB","33":"A B C O H Q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B","33":"C O H Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"2":"0B YB","33":"G W I D F cB dB eB","257":"E A B C O H fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a"},G:{"33":"F YB rB IB tB uB vB wB","257":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"BC CC DC","33":"KB G EC IB FC GC"},J:{"33":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS3 3D Transforms"};

var trustedTypes={A:{A:{"2":"I D F E A B iB"},B:{"1":"WB S","2":"C O H Q J K L V y M"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Trusted Types for DOM manipulation"};

var ttf={A:{A:{"2":"I D F iB","132":"E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T mB nB oB R VB qB BB","2":"E lB"},G:{"1":"F IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB"},H:{"2":"AC"},I:{"1":"KB G M CC DC EC IB FC GC","2":"BC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"TTF/OTF - TrueType and OpenType font support"};

var typedarrays={A:{A:{"1":"B","2":"I D F E iB","132":"A"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB","260":"cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB","260":"IB"},H:{"1":"AC"},I:{"1":"G M EC IB FC GC","2":"KB BC CC DC"},J:{"1":"A","2":"D"},K:{"1":"C P BB","2":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Typed Arrays"};

var u2f={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","513":"V y M WB S"},C:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB","322":"0 1 2 3 4 5 6 7 8 9 z AB LB CB JB EB FB GB HB DB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p","130":"q r s","513":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"O H jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R BB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r t lB mB nB oB R VB qB BB","513":"0 1 2 3 4 5 6 7 8 9 s u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"322":"RC"}},B:6,C:"FIDO U2F API"};

var unhandledrejection={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N pB hB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB"},G:{"1":"2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB","16":"1B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:1,C:"unhandledrejection/rejectionhandled events"};

var upgradeinsecurerequests={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Upgrade Insecure Requests"};

var urlScrollToTextFragment={A:{A:{"2":"I D F E A B iB"},B:{"1":"WB S","2":"C O H Q J K L","66":"V y M"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB","66":"QB RB SB TB UB V y"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"N T","2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB lB mB nB oB R VB qB BB","66":"DB U"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"URL Scroll-To-Text Fragment"};

var url={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a","130":"b c d e f g h i j"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","2":"G W I 0B YB cB dB","130":"D"},F:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","130":"Q J K L"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB","130":"vB"},H:{"2":"AC"},I:{"1":"M GC","2":"KB G BC CC DC EC IB","130":"FC"},J:{"2":"D","130":"A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"URL API"};

var urlsearchparams={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB","132":"h i j k l m n o p q r s t u v"},D:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"1":"B C O H XB R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB"},G:{"1":"ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","2":"G"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:1,C:"URLSearchParams"};

var useStrict={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G 0B YB","132":"W cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","2":"E B lB mB nB oB R VB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"1":"AC"},I:{"1":"KB G M EC IB FC GC","2":"BC CC DC"},J:{"1":"D A"},K:{"1":"C P VB BB","2":"A B R"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"ECMAScript 5 Strict Mode"};

var userSelectNone={A:{A:{"2":"I D F E iB","33":"A B"},B:{"1":"V y M WB S","33":"C O H Q J K L"},C:{"1":"T MB NB OB PB QB RB SB TB UB V y M","33":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N pB hB"},D:{"1":"6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","33":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z"},E:{"33":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","33":"Q J K L X Y Z a b c d e f g h i j k l m n o p q r s"},G:{"33":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","33":"KB G BC CC DC EC IB FC GC"},J:{"33":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"33":"N"},N:{"33":"A B"},O:{"2":"HC"},P:{"33":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"33":"RC"}},B:5,C:"CSS user-select: none"};

var userTiming={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"User Timing API"};

var variableFonts={A:{A:{"2":"I D F E A B iB"},B:{"1":"K L V y M WB S","2":"C O H Q J"},C:{"2":"0 1 2 3 4 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","4609":"EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","4674":"JB","5698":"CB","7490":"5 6 7 8 9","7746":"AB LB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB","4097":"DB","4290":"LB CB JB","6148":"EB FB GB HB"},E:{"2":"G W I D F E A 0B YB cB dB eB fB XB","4609":"B C R BB","8193":"O H jB kB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","4097":"5","6148":"1 2 3 4"},G:{"1":"5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB","4097":"1B 2B 3B 4B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"4097":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC","4097":"LC MC XB NC OC"},Q:{"4097":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"Variable fonts"};

var vibration={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A pB hB","33":"B C O H Q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"Vibration API"};

var video={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","260":"G W I D F E A B C O H Q J K L X pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A cB dB eB fB XB","2":"0B YB","513":"B C O H R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB","513":"1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","132":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Video element"};

var videotracks={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L","322":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB","194":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w","322":"0 1 2 3 4 5 6 7 8 9 x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W I 0B YB cB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j lB mB nB oB R VB qB BB","322":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","322":"P"},L:{"322":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"194":"RC"}},B:1,C:"Video Tracks"};

var viewportUnits={A:{A:{"2":"I D F iB","132":"E","260":"A B"},B:{"1":"J K L V y M WB S","260":"C O H Q"},C:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X","260":"Y Z a b c d"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB","260":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB","516":"vB","772":"uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"260":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"Viewport units: vw, vh, vmin, vmax"};

var waiAria={A:{A:{"2":"I D iB","4":"F E A B"},B:{"4":"C O H Q J K L V y M WB S"},C:{"4":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"0B YB","4":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB"},F:{"2":"E","4":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"4":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"4":"AC"},I:{"2":"KB G BC CC DC EC IB","4":"M FC GC"},J:{"2":"D A"},K:{"4":"A B C P R VB BB"},L:{"4":"S"},M:{"4":"N"},N:{"4":"A B"},O:{"2":"HC"},P:{"4":"G IC JC KC LC MC XB NC OC"},Q:{"4":"PC"},R:{"4":"QC"},S:{"4":"RC"}},B:2,C:"WAI-ARIA Accessibility features"};

var wakeLock={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","194":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB","194":"NB OB PB QB RB SB TB UB V y M WB S"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","194":"AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"194":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:4,C:"Screen Wake Lock API"};

var wasm={A:{A:{"2":"I D F E A B iB"},B:{"1":"J K L V y M WB S","2":"C O H","578":"Q"},C:{"1":"5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P pB hB","194":"0 1 2 3 z","1025":"4"},D:{"1":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","322":"3 4 5 6 7 8"},E:{"1":"B C O H R BB jB kB","2":"G W I D F E A 0B YB cB dB eB fB XB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p lB mB nB oB R VB qB BB","322":"q r s t u v"},G:{"1":"1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"194":"RC"}},B:6,C:"WebAssembly"};

var wav={A:{A:{"2":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T nB oB R VB qB BB","2":"E lB mB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","16":"A"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"Wav audio format"};

var wbrElement={A:{A:{"1":"I D iB","2":"F E A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H YB cB dB eB fB XB R BB jB kB","16":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","16":"E"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB"},H:{"1":"AC"},I:{"1":"KB G M DC EC IB FC GC","16":"BC CC"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"wbr (word break opportunity) element"};

var webAnimation={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","260":"V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k pB hB","260":"LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","516":"0 1 2 3 4 5 6 7 8 9 z AB","580":"l m n o p q r s t u v w x P"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n","132":"o p q","260":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A 0B YB cB dB eB fB XB","1090":"B C O R BB","2049":"H jB kB"},F:{"2":"E B C Q J K L X Y Z a lB mB nB oB R VB qB BB","132":"b c d","260":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB","1090":"1B 2B 3B 4B 5B 6B 7B","2049":"8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","260":"M"},J:{"2":"D A"},K:{"2":"A B C R VB BB","260":"P"},L:{"260":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"260":"HC"},P:{"260":"G IC JC KC LC MC XB NC OC"},Q:{"260":"PC"},R:{"260":"QC"},S:{"516":"RC"}},B:5,C:"Web Animations API"};

var webAppManifest={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J","514":"K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q","129":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB","257":"U N T MB NB OB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B","1156":"2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","129":"P"},L:{"1":"S"},M:{"129":"N"},N:{"2":"A B"},O:{"129":"HC"},P:{"1":"NC OC","129":"G IC JC KC LC MC XB"},Q:{"129":"PC"},R:{"129":"QC"},S:{"2":"RC"}},B:5,C:"Add to home screen (A2HS)"};

var webBluetooth={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","1025":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w","194":"0 1 2 3 4 x P z","706":"5 6 7","1025":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n lB mB nB oB R VB qB BB","450":"o p q r","706":"s t u","1025":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC GC","1025":"M"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1025":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"JC KC LC MC XB NC OC","2":"G IC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Web Bluetooth"};

var webShare={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","258":"L X Y Z a b c"},E:{"1":"O H BB jB kB","2":"G W I D F E A B C 0B YB cB eB fB XB R","16":"dB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B"},H:{"2":"AC"},I:{"2":"KB G BC CC DC EC IB FC","514":"M GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"514":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G","514":"IC JC KC"},Q:{"2":"PC"},R:{"16":"QC"},S:{"2":"RC"}},B:7,C:"Web Share API"};

var webauthn={A:{A:{"2":"I D F E A B iB"},B:{"1":"L V y M WB S","2":"C","226":"O H Q J K"},C:{"1":"CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB pB hB"},D:{"1":"U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB"},E:{"1":"O H jB kB","2":"G W I D F E A B C 0B YB cB dB eB fB XB R","322":"BB"},F:{"1":"6 7 8 9 AB CB EB FB GB HB DB U N T","2":"0 1 2 3 4 5 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB"},G:{"1":"7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B","578":"6B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:2,C:"Web Authentication API"};

var webgl={A:{A:{"2":"iB","8":"I D F E A","129":"B"},B:{"1":"V y M WB S","129":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","129":"G W I D F E A B C O H Q J K L X Y Z a b"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D","129":"F E A B C O H Q J K L X Y Z a b c d e f g h i j k"},E:{"1":"F E A B C O H fB XB R BB jB kB","2":"G W 0B YB","129":"I D cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B lB mB nB oB R VB qB","129":"C Q J K L BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB vB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"1":"A","2":"D"},K:{"1":"C P BB","2":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A","129":"B"},O:{"129":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"129":"RC"}},B:6,C:"WebGL - 3D Canvas graphics"};

var webgl2={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c pB hB","194":"u v w","450":"d e f g h i j k l m n o p q r s t","2242":"0 1 2 x P z"},D:{"1":"8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u","578":"0 1 2 3 4 5 6 7 v w x P z"},E:{"2":"G W I D F E A 0B YB cB dB eB fB","1090":"B C O H XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B","1090":"3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"KC LC MC XB NC OC","2":"G IC JC"},Q:{"578":"PC"},R:{"2":"QC"},S:{"2242":"RC"}},B:6,C:"WebGL 2.0"};

var webgpu={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V","578":"y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB pB hB","194":"FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","578":"y M WB S gB bB aB"},E:{"2":"G W I D F E A B 0B YB cB dB eB fB XB","322":"C O H R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"194":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"WebGPU"};

var webhid={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","194":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB","194":"UB V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB lB mB nB oB R VB qB BB","194":"DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"WebHID API"};

var webm={A:{A:{"2":"I D F iB","520":"E A B"},B:{"1":"V y M WB S","8":"C O","388":"H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f"},D:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W","132":"I D F E A B C O H Q J K L X Y Z a b c"},E:{"2":"0B","8":"G W YB cB","520":"I D F E A B C dB eB fB XB R","1028":"O BB jB","2052":"H kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E lB mB nB","132":"B C Q oB R VB qB BB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B","1028":"4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"1":"M","2":"BC CC","132":"KB G DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C R VB BB","132":"P"},L:{"1":"S"},M:{"1":"N"},N:{"8":"A B"},O:{"1":"HC"},P:{"1":"IC JC KC LC MC XB NC OC","132":"G"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:6,C:"WebM video format"};

var webnfc={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L V","450":"y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V","450":"y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB lB mB nB oB R VB qB BB","450":"U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"450":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"Web NFC"};

var webp={A:{A:{"2":"I D F E A B iB"},B:{"1":"L V y M WB S","2":"C O H Q J K"},C:{"1":"HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","8":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W","8":"I D F","132":"E A B C O H Q J K L X Y Z a","260":"b c d e f g h i j"},E:{"1":"H kB","2":"G W I D F E A B C O 0B YB cB dB eB fB XB R BB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E lB mB nB","8":"B oB","132":"R VB qB","260":"C Q J K L BB"},G:{"1":"9B","2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B"},H:{"1":"AC"},I:{"1":"M IB FC GC","2":"KB BC CC DC","132":"G EC"},J:{"2":"D A"},K:{"1":"C P R VB BB","2":"A","132":"B"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"8":"RC"}},B:7,C:"WebP image format"};

var websockets={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB pB hB","132":"G W","292":"I D F E A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H","260":"Q"},E:{"1":"D F E A B C O H eB fB XB R BB jB kB","2":"G 0B YB","132":"W cB","260":"I dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E lB mB nB oB","132":"B C R VB qB"},G:{"1":"F uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB","132":"IB tB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","129":"D"},K:{"1":"P BB","2":"A","132":"B C R VB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Web Sockets"};

var webusb={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"0 1 2 3 4 5 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z","66":"6 7 8 9 AB LB CB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s lB mB nB oB R VB qB BB","66":"t u v w x P z"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"1":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"1":"LC MC XB NC OC","2":"G IC JC KC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:7,C:"WebUSB"};

var webvr={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H y M WB S","66":"V","257":"Q J K L"},C:{"2":"0 1 2 3 4 5 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB","129":"7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","194":"6"},D:{"2":"0 1 2 3 4 5 6 7 8 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z y M WB S gB bB aB","66":"9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v U N T lB mB nB oB R VB qB BB","66":"0 1 2 3 4 5 6 7 8 9 w x P z AB CB EB FB GB HB DB"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"2":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"513":"G","516":"IC JC KC LC MC XB NC OC"},Q:{"2":"PC"},R:{"66":"QC"},S:{"2":"RC"}},B:7,C:"WebVR API"};

var webvtt={A:{A:{"1":"A B","2":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b pB hB","66":"c d e f g h i","129":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K"},E:{"1":"I D F E A B C O H dB eB fB XB R BB jB kB","2":"G W 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB tB uB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB G BC CC DC EC IB"},J:{"1":"A","2":"D"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"B","2":"A"},O:{"2":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"129":"RC"}},B:5,C:"WebVTT - Web Video Text Tracks"};

var webworkers={A:{A:{"1":"A B","2":"iB","8":"I D F E"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","8":"sB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","8":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T oB R VB qB BB","2":"E lB","8":"mB nB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"M BC FC GC","2":"KB G CC DC EC IB"},J:{"1":"D A"},K:{"1":"B C P R VB BB","8":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Web Workers"};

var webxr={A:{A:{"2":"I D F E A B iB"},B:{"2":"C O H Q J K L","132":"V y M WB S"},C:{"2":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB pB hB","322":"TB UB V y M"},D:{"2":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB","66":"HB DB U N T MB NB OB PB QB RB SB TB UB","132":"V y M WB S gB bB aB"},E:{"2":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"2":"0 1 2 3 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z lB mB nB oB R VB qB BB","66":"4 5 6 7 8 9 AB CB EB FB GB HB","132":"DB U N T"},G:{"2":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"AC"},I:{"2":"KB G M BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"2":"A B C P R VB BB"},L:{"132":"S"},M:{"2":"N"},N:{"2":"A B"},O:{"2":"HC"},P:{"2":"G IC JC KC LC MC XB NC","132":"OC"},Q:{"2":"PC"},R:{"2":"QC"},S:{"2":"RC"}},B:5,C:"WebXR Device API"};

var willChange={A:{A:{"2":"I D F E A B iB"},B:{"1":"V y M WB S","2":"C O H Q J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g pB hB","194":"h i j k l m n"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"1":"A B C O H fB XB R BB jB kB","2":"G W I D F E 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a b lB mB nB oB R VB qB BB"},G:{"1":"yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS will-change property"};

var woff={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M hB","2":"sB KB pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G"},E:{"1":"I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"G W 0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T R VB qB BB","2":"E B lB mB nB oB"},G:{"1":"F tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB"},H:{"2":"AC"},I:{"1":"M FC GC","2":"KB BC CC DC EC IB","130":"G"},J:{"1":"D A"},K:{"1":"B C P R VB BB","2":"A"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:2,C:"WOFF - Web Open Font Format"};

var woff2={A:{A:{"2":"I D F E A B iB"},B:{"1":"H Q J K L V y M WB S","2":"C O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","2":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n"},E:{"1":"C O H BB jB kB","2":"G W I D F E 0B YB cB dB eB fB","132":"A B XB R"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C Q J K L X Y Z a lB mB nB oB R VB qB BB"},G:{"1":"zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"F YB rB IB tB uB vB wB xB yB"},H:{"2":"AC"},I:{"1":"M","2":"KB G BC CC DC EC IB FC GC"},J:{"2":"D A"},K:{"1":"P","2":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"2":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"WOFF 2.0 - Web Open Font Format"};

var wordBreak={A:{A:{"1":"I D F E A B iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB G W I D F E A B C O H pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v"},E:{"1":"E A B C O H fB XB R BB jB kB","4":"G W I D F 0B YB cB dB eB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","2":"E B C lB mB nB oB R VB qB BB","4":"Q J K L X Y Z a b c d e f g h i"},G:{"1":"xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","4":"F YB rB IB tB uB vB wB"},H:{"2":"AC"},I:{"1":"M","4":"KB G BC CC DC EC IB FC GC"},J:{"4":"D A"},K:{"2":"A B C R VB BB","4":"P"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"4":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"4":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:5,C:"CSS3 word-break"};

var wordwrap={A:{A:{"4":"I D F E A B iB"},B:{"1":"L V y M WB S","4":"C O H Q J K"},C:{"1":"1 2 3 4 5 6 7 8 9 AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","4":"0 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","4":"G W I D F E A B C O H Q J K L X Y Z a"},E:{"1":"D F E A B C O H dB eB fB XB R BB jB kB","4":"G W I 0B YB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E lB mB","4":"B C nB oB R VB qB"},G:{"1":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","4":"YB rB IB tB uB"},H:{"4":"AC"},I:{"1":"M FC GC","4":"KB G BC CC DC EC IB"},J:{"1":"A","4":"D"},K:{"1":"P","4":"A B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"4":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"4":"RC"}},B:5,C:"CSS3 Overflow-wrap"};

var xDocMessaging={A:{A:{"2":"I D iB","132":"F E","260":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB","2":"sB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H cB dB eB fB XB R BB jB kB","2":"0B YB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB","2":"E"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"4":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"Cross-document messaging"};

var xFrameOptions={A:{A:{"1":"F E A B","2":"I D iB"},B:{"1":"C O H Q J K L","4":"V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T","4":"G W I D F E A B C O H Q J K MB NB OB PB QB RB SB TB UB V y M","16":"sB KB pB hB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I D F E A B C O H Q J K L X Y Z a b c d"},E:{"4":"I D F E A B C O H cB dB eB fB XB R BB jB kB","16":"G W 0B YB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T qB BB","16":"E B lB mB nB oB R VB"},G:{"4":"F vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","16":"YB rB IB tB uB"},H:{"2":"AC"},I:{"4":"G M EC IB FC GC","16":"KB BC CC DC"},J:{"4":"D A"},K:{"4":"P BB","16":"A B C R VB"},L:{"4":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"4":"HC"},P:{"4":"G IC JC KC LC MC XB NC OC"},Q:{"4":"PC"},R:{"4":"QC"},S:{"1":"RC"}},B:6,C:"X-Frame-Options HTTP header"};

var xhr2={A:{A:{"2":"I D F E iB","132":"A B"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","2":"sB KB","260":"A B","388":"I D F E","900":"G W pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","16":"G W I","132":"h i","388":"D F E A B C O H Q J K L X Y Z a b c d e f g"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","2":"G 0B YB","132":"D dB","388":"W I cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T BB","2":"E B lB mB nB oB R VB qB","132":"Q J K"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","2":"YB rB IB","132":"vB","388":"tB uB"},H:{"2":"AC"},I:{"1":"M GC","2":"BC CC DC","388":"FC","900":"KB G EC IB"},J:{"132":"A","388":"D"},K:{"1":"C P BB","2":"A B R VB"},L:{"1":"S"},M:{"1":"N"},N:{"132":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:1,C:"XMLHttpRequest advanced features"};

var xhtml={A:{A:{"1":"E A B","2":"I D F iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"1":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"1":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"1":"AC"},I:{"1":"KB G M BC CC DC EC IB FC GC"},J:{"1":"D A"},K:{"1":"A B C P R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"2":"QC"},S:{"1":"RC"}},B:1,C:"XHTML served as application/xhtml+xml"};

var xhtmlsmil={A:{A:{"2":"E A B iB","4":"I D F"},B:{"2":"C O H Q J K L","8":"V y M WB S"},C:{"8":"0 1 2 3 4 5 6 7 8 9 sB KB G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M pB hB"},D:{"8":"0 1 2 3 4 5 6 7 8 9 G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB"},E:{"8":"G W I D F E A B C O H 0B YB cB dB eB fB XB R BB jB kB"},F:{"8":"0 1 2 3 4 5 6 7 8 9 E B C Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T lB mB nB oB R VB qB BB"},G:{"8":"F YB rB IB tB uB vB wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"8":"AC"},I:{"8":"KB G M BC CC DC EC IB FC GC"},J:{"8":"D A"},K:{"8":"A B C P R VB BB"},L:{"8":"S"},M:{"8":"N"},N:{"2":"A B"},O:{"8":"HC"},P:{"8":"G IC JC KC LC MC XB NC OC"},Q:{"8":"PC"},R:{"8":"QC"},S:{"8":"RC"}},B:7,C:"XHTML+SMIL animation"};

var xmlSerializer={A:{A:{"1":"A B","260":"I D F E iB"},B:{"1":"C O H Q J K L V y M WB S"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C O H Q J K L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M","132":"B","260":"sB KB G W I D pB hB","516":"F E A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x P z AB LB CB JB EB FB GB HB DB U N T MB NB OB PB QB RB SB TB UB V y M WB S gB bB aB","132":"G W I D F E A B C O H Q J K L X Y Z a b c d e f g h i"},E:{"1":"F E A B C O H eB fB XB R BB jB kB","132":"G W I D 0B YB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L X Y Z a b c d e f g h i j k l m n o p q r s t u v w x P z AB CB EB FB GB HB DB U N T","16":"E lB","132":"B C Q J K mB nB oB R VB qB BB"},G:{"1":"F wB xB yB zB ZB 1B 2B 3B 4B 5B 6B 7B 8B 9B","132":"YB rB IB tB uB vB"},H:{"132":"AC"},I:{"1":"M FC GC","132":"KB G BC CC DC EC IB"},J:{"132":"D A"},K:{"1":"P","16":"A","132":"B C R VB BB"},L:{"1":"S"},M:{"1":"N"},N:{"1":"A B"},O:{"1":"HC"},P:{"1":"G IC JC KC LC MC XB NC OC"},Q:{"1":"PC"},R:{"1":"QC"},S:{"1":"RC"}},B:4,C:"DOM Parsing and Serialization"};

var features={"aac":aac,"abortcontroller":abortcontroller,"ac3-ec3":ac3Ec3,"accelerometer":accelerometer,"addeventlistener":addeventlistener,"alternate-stylesheet":alternateStylesheet,"ambient-light":ambientLight,"apng":apng,"array-find-index":arrayFindIndex,"array-find":arrayFind,"array-flat":arrayFlat,"array-includes":arrayIncludes,"arrow-functions":arrowFunctions,"asmjs":asmjs,"async-clipboard":asyncClipboard,"async-functions":asyncFunctions,"async-iterations-and-generators":asyncIterationsAndGenerators,"atob-btoa":atobBtoa,"audio-api":audioApi,"audio":audio,"audiotracks":audiotracks,"autofocus":autofocus,"auxclick":auxclick,"av1":av1,"avif":avif,"background-attachment":backgroundAttachment,"background-clip-text":backgroundClipText,"background-img-opts":backgroundImgOpts,"background-position-x-y":backgroundPositionXY,"background-repeat-round-space":backgroundRepeatRoundSpace,"background-sync":backgroundSync,"battery-status":batteryStatus,"beacon":beacon,"beforeafterprint":beforeafterprint,"bigint":bigint,"blobbuilder":blobbuilder,"bloburls":bloburls,"border-image":borderImage,"border-radius":borderRadius,"broadcastchannel":broadcastchannel,"brotli":brotli,"calc":calc,"canvas-blending":canvasBlending,"canvas-text":canvasText,"canvas":canvas,"ch-unit":chUnit,"chacha20-poly1305":chacha20Poly1305,"channel-messaging":channelMessaging,"childnode-remove":childnodeRemove,"classlist":classlist,"clear-site-data-header":clearSiteDataHeader,"client-hints-dpr-width-viewport":clientHintsDprWidthViewport,"clipboard":clipboard,"comparedocumentposition":comparedocumentposition,"console-basic":consoleBasic,"console-time":consoleTime,"const":_const,"constraint-validation":constraintValidation,"contenteditable":contenteditable,"contentsecuritypolicy":contentsecuritypolicy,"contentsecuritypolicy2":contentsecuritypolicy2,"cors":cors,"createimagebitmap":createimagebitmap,"credential-management":credentialManagement,"cryptography":cryptography,"css-all":cssAll,"css-animation":cssAnimation,"css-any-link":cssAnyLink,"css-appearance":cssAppearance,"css-apply-rule":cssApplyRule,"css-at-counter-style":cssAtCounterStyle,"css-backdrop-filter":cssBackdropFilter,"css-background-offsets":cssBackgroundOffsets,"css-backgroundblendmode":cssBackgroundblendmode,"css-boxdecorationbreak":cssBoxdecorationbreak,"css-boxshadow":cssBoxshadow,"css-canvas":cssCanvas,"css-caret-color":cssCaretColor,"css-case-insensitive":cssCaseInsensitive,"css-clip-path":cssClipPath,"css-color-adjust":cssColorAdjust,"css-color-function":cssColorFunction,"css-conic-gradients":cssConicGradients,"css-containment":cssContainment,"css-counters":cssCounters,"css-crisp-edges":cssCrispEdges,"css-cross-fade":cssCrossFade,"css-default-pseudo":cssDefaultPseudo,"css-descendant-gtgt":cssDescendantGtgt,"css-deviceadaptation":cssDeviceadaptation,"css-dir-pseudo":cssDirPseudo,"css-display-contents":cssDisplayContents,"css-element-function":cssElementFunction,"css-env-function":cssEnvFunction,"css-exclusions":cssExclusions,"css-featurequeries":cssFeaturequeries,"css-filter-function":cssFilterFunction,"css-filters":cssFilters,"css-first-letter":cssFirstLetter,"css-first-line":cssFirstLine,"css-fixed":cssFixed,"css-focus-visible":cssFocusVisible,"css-focus-within":cssFocusWithin,"css-font-rendering-controls":cssFontRenderingControls,"css-font-stretch":cssFontStretch,"css-gencontent":cssGencontent,"css-gradients":cssGradients,"css-grid":cssGrid,"css-hanging-punctuation":cssHangingPunctuation,"css-has":cssHas,"css-hyphenate":cssHyphenate,"css-hyphens":cssHyphens,"css-image-orientation":cssImageOrientation,"css-image-set":cssImageSet,"css-in-out-of-range":cssInOutOfRange,"css-indeterminate-pseudo":cssIndeterminatePseudo,"css-initial-letter":cssInitialLetter,"css-initial-value":cssInitialValue,"css-letter-spacing":cssLetterSpacing,"css-line-clamp":cssLineClamp,"css-logical-props":cssLogicalProps,"css-marker-pseudo":cssMarkerPseudo,"css-masks":cssMasks,"css-matches-pseudo":cssMatchesPseudo,"css-math-functions":cssMathFunctions,"css-media-interaction":cssMediaInteraction,"css-media-resolution":cssMediaResolution,"css-media-scripting":cssMediaScripting,"css-mediaqueries":cssMediaqueries,"css-mixblendmode":cssMixblendmode,"css-motion-paths":cssMotionPaths,"css-namespaces":cssNamespaces,"css-not-sel-list":cssNotSelList,"css-nth-child-of":cssNthChildOf,"css-opacity":cssOpacity,"css-optional-pseudo":cssOptionalPseudo,"css-overflow-anchor":cssOverflowAnchor,"css-overflow":cssOverflow,"css-overscroll-behavior":cssOverscrollBehavior,"css-page-break":cssPageBreak,"css-paged-media":cssPagedMedia,"css-paint-api":cssPaintApi,"css-placeholder-shown":cssPlaceholderShown,"css-placeholder":cssPlaceholder,"css-read-only-write":cssReadOnlyWrite,"css-rebeccapurple":cssRebeccapurple,"css-reflections":cssReflections,"css-regions":cssRegions,"css-repeating-gradients":cssRepeatingGradients,"css-resize":cssResize,"css-revert-value":cssRevertValue,"css-rrggbbaa":cssRrggbbaa,"css-scroll-behavior":cssScrollBehavior,"css-scrollbar":cssScrollbar,"css-sel2":cssSel2,"css-sel3":cssSel3,"css-selection":cssSelection,"css-shapes":cssShapes,"css-snappoints":cssSnappoints,"css-sticky":cssSticky,"css-subgrid":cssSubgrid,"css-supports-api":cssSupportsApi,"css-table":cssTable,"css-text-align-last":cssTextAlignLast,"css-text-indent":cssTextIndent,"css-text-justify":cssTextJustify,"css-text-orientation":cssTextOrientation,"css-text-spacing":cssTextSpacing,"css-textshadow":cssTextshadow,"css-touch-action-2":cssTouchAction2,"css-touch-action":cssTouchAction,"css-transitions":cssTransitions,"css-unicode-bidi":cssUnicodeBidi,"css-unset-value":cssUnsetValue,"css-variables":cssVariables,"css-widows-orphans":cssWidowsOrphans,"css-writing-mode":cssWritingMode,"css-zoom":cssZoom,"css3-attr":css3Attr,"css3-boxsizing":css3Boxsizing,"css3-colors":css3Colors,"css3-cursors-grab":css3CursorsGrab,"css3-cursors-newer":css3CursorsNewer,"css3-cursors":css3Cursors,"css3-tabsize":css3Tabsize,"currentcolor":currentcolor,"custom-elements":customElements,"custom-elementsv1":customElementsv1,"customevent":customevent,"datalist":datalist,"dataset":dataset,"datauri":datauri,"date-tolocaledatestring":dateTolocaledatestring,"details":details,"deviceorientation":deviceorientation,"devicepixelratio":devicepixelratio,"dialog":dialog,"dispatchevent":dispatchevent,"dnssec":dnssec,"do-not-track":doNotTrack,"document-currentscript":documentCurrentscript,"document-evaluate-xpath":documentEvaluateXpath,"document-execcommand":documentExeccommand,"document-policy":documentPolicy,"document-scrollingelement":documentScrollingelement,"documenthead":documenthead,"dom-manip-convenience":domManipConvenience,"dom-range":domRange,"domcontentloaded":domcontentloaded,"domfocusin-domfocusout-events":domfocusinDomfocusoutEvents,"dommatrix":dommatrix,"download":download,"dragndrop":dragndrop,"element-closest":elementClosest,"element-from-point":elementFromPoint,"element-scroll-methods":elementScrollMethods,"eme":eme,"eot":eot,"es5":es5,"es6-class":es6Class,"es6-generators":es6Generators,"es6-module-dynamic-import":es6ModuleDynamicImport,"es6-module":es6Module,"es6-number":es6Number,"es6-string-includes":es6StringIncludes,"es6":es6,"eventsource":eventsource,"extended-system-fonts":extendedSystemFonts,"feature-policy":featurePolicy,"fetch":fetch,"fieldset-disabled":fieldsetDisabled,"fileapi":fileapi,"filereader":filereader,"filereadersync":filereadersync,"filesystem":filesystem,"flac":flac,"flexbox-gap":flexboxGap,"flexbox":flexbox,"flow-root":flowRoot,"focusin-focusout-events":focusinFocusoutEvents,"focusoptions-preventscroll":focusoptionsPreventscroll,"font-family-system-ui":fontFamilySystemUi,"font-feature":fontFeature,"font-kerning":fontKerning,"font-loading":fontLoading,"font-size-adjust":fontSizeAdjust,"font-smooth":fontSmooth,"font-unicode-range":fontUnicodeRange,"font-variant-alternates":fontVariantAlternates,"font-variant-east-asian":fontVariantEastAsian,"font-variant-numeric":fontVariantNumeric,"fontface":fontface,"form-attribute":formAttribute,"form-submit-attributes":formSubmitAttributes,"form-validation":formValidation,"forms":forms,"fullscreen":fullscreen,"gamepad":gamepad,"geolocation":geolocation,"getboundingclientrect":getboundingclientrect,"getcomputedstyle":getcomputedstyle,"getelementsbyclassname":getelementsbyclassname,"getrandomvalues":getrandomvalues,"gyroscope":gyroscope,"hardwareconcurrency":hardwareconcurrency,"hashchange":hashchange,"heif":heif,"hevc":hevc,"hidden":hidden$1,"high-resolution-time":highResolutionTime,"history":history,"html-media-capture":htmlMediaCapture,"html5semantic":html5semantic,"http-live-streaming":httpLiveStreaming,"http2":http2,"http3":http3,"iframe-sandbox":iframeSandbox,"iframe-seamless":iframeSeamless,"iframe-srcdoc":iframeSrcdoc,"imagecapture":imagecapture,"ime":ime,"img-naturalwidth-naturalheight":imgNaturalwidthNaturalheight,"imports":imports,"indeterminate-checkbox":indeterminateCheckbox,"indexeddb":indexeddb,"indexeddb2":indexeddb2,"inline-block":inlineBlock,"innertext":innertext,"input-autocomplete-onoff":inputAutocompleteOnoff,"input-color":inputColor,"input-datetime":inputDatetime,"input-email-tel-url":inputEmailTelUrl,"input-event":inputEvent,"input-file-accept":inputFileAccept,"input-file-directory":inputFileDirectory,"input-file-multiple":inputFileMultiple,"input-inputmode":inputInputmode,"input-minlength":inputMinlength,"input-number":inputNumber,"input-pattern":inputPattern,"input-placeholder":inputPlaceholder,"input-range":inputRange,"input-search":inputSearch,"input-selection":inputSelection,"insert-adjacent":insertAdjacent,"insertadjacenthtml":insertadjacenthtml,"internationalization":internationalization,"intersectionobserver-v2":intersectionobserverV2,"intersectionobserver":intersectionobserver,"intl-pluralrules":intlPluralrules,"intrinsic-width":intrinsicWidth,"jpeg2000":jpeg2000,"jpegxr":jpegxr,"js-regexp-lookbehind":jsRegexpLookbehind,"json":json,"justify-content-space-evenly":justifyContentSpaceEvenly,"kerning-pairs-ligatures":kerningPairsLigatures,"keyboardevent-charcode":keyboardeventCharcode,"keyboardevent-code":keyboardeventCode,"keyboardevent-getmodifierstate":keyboardeventGetmodifierstate,"keyboardevent-key":keyboardeventKey,"keyboardevent-location":keyboardeventLocation,"keyboardevent-which":keyboardeventWhich,"lazyload":lazyload,"let":_let,"link-icon-png":linkIconPng,"link-icon-svg":linkIconSvg,"link-rel-dns-prefetch":linkRelDnsPrefetch,"link-rel-modulepreload":linkRelModulepreload,"link-rel-preconnect":linkRelPreconnect,"link-rel-prefetch":linkRelPrefetch,"link-rel-preload":linkRelPreload,"link-rel-prerender":linkRelPrerender,"loading-lazy-attr":loadingLazyAttr,"localecompare":localecompare,"magnetometer":magnetometer,"matchesselector":matchesselector,"matchmedia":matchmedia,"mathml":mathml,"maxlength":maxlength,"media-attribute":mediaAttribute,"media-fragments":mediaFragments,"media-session-api":mediaSessionApi,"mediacapture-fromelement":mediacaptureFromelement,"mediarecorder":mediarecorder,"mediasource":mediasource,"menu":menu,"meta-theme-color":metaThemeColor,"meter":meter,"midi":midi,"minmaxwh":minmaxwh,"mp3":mp3,"mpeg-dash":mpegDash,"mpeg4":mpeg4,"multibackgrounds":multibackgrounds,"multicolumn":multicolumn,"mutation-events":mutationEvents,"mutationobserver":mutationobserver,"namevalue-storage":namevalueStorage,"native-filesystem-api":nativeFilesystemApi,"nav-timing":navTiming,"navigator-language":navigatorLanguage,"netinfo":netinfo,"node-contains":nodeContains,"node-parentelement":nodeParentelement,"notifications":notifications,"object-entries":objectEntries,"object-fit":objectFit,"object-observe":objectObserve,"object-values":objectValues,"objectrtc":objectrtc,"offline-apps":offlineApps,"offscreencanvas":offscreencanvas,"ogg-vorbis":oggVorbis,"ogv":ogv,"ol-reversed":olReversed,"once-event-listener":onceEventListener,"online-status":onlineStatus,"opus":opus,"orientation-sensor":orientationSensor,"outline":outline,"pad-start-end":padStartEnd,"page-transition-events":pageTransitionEvents,"pagevisibility":pagevisibility,"passive-event-listener":passiveEventListener,"passwordrules":passwordrules,"path2d":path2d,"payment-request":paymentRequest,"pdf-viewer":pdfViewer,"permissions-api":permissionsApi,"permissions-policy":permissionsPolicy,"picture-in-picture":pictureInPicture,"picture":picture,"ping":ping,"png-alpha":pngAlpha,"pointer-events":pointerEvents,"pointer":pointer,"pointerlock":pointerlock,"portals":portals,"prefers-color-scheme":prefersColorScheme,"prefers-reduced-motion":prefersReducedMotion,"private-class-fields":privateClassFields,"private-methods-and-accessors":privateMethodsAndAccessors,"progress":progress,"promise-finally":promiseFinally,"promises":promises,"proximity":proximity,"proxy":proxy,"public-class-fields":publicClassFields,"publickeypinning":publickeypinning,"push-api":pushApi,"queryselector":queryselector,"readonly-attr":readonlyAttr,"referrer-policy":referrerPolicy,"registerprotocolhandler":registerprotocolhandler,"rel-noopener":relNoopener,"rel-noreferrer":relNoreferrer,"rellist":rellist,"rem":rem,"replace-all":replaceAll,"requestanimationframe":requestanimationframe,"requestidlecallback":requestidlecallback,"resizeobserver":resizeobserver,"resource-timing":resourceTiming,"rest-parameters":restParameters,"rtcpeerconnection":rtcpeerconnection,"ruby":ruby,"run-in":runIn,"same-site-cookie-attribute":sameSiteCookieAttribute,"screen-orientation":screenOrientation,"script-async":scriptAsync,"script-defer":scriptDefer,"scrollintoview":scrollintoview,"scrollintoviewifneeded":scrollintoviewifneeded,"sdch":sdch,"selection-api":selectionApi,"server-timing":serverTiming,"serviceworkers":serviceworkers,"setimmediate":setimmediate,"sha-2":sha2,"shadowdom":shadowdom,"shadowdomv1":shadowdomv1,"sharedarraybuffer":sharedarraybuffer,"sharedworkers":sharedworkers,"sni":sni,"spdy":spdy,"speech-recognition":speechRecognition,"speech-synthesis":speechSynthesis,"spellcheck-attribute":spellcheckAttribute,"sql-storage":sqlStorage,"srcset":srcset,"stopimmediatepropagation":stopimmediatepropagation,"stream":stream,"streams":streams,"stricttransportsecurity":stricttransportsecurity,"style-scoped":styleScoped,"subresource-integrity":subresourceIntegrity,"svg-css":svgCss,"svg-filters":svgFilters,"svg-fonts":svgFonts,"svg-fragment":svgFragment,"svg-html":svgHtml,"svg-html5":svgHtml5,"svg-img":svgImg,"svg-smil":svgSmil,"svg":svg,"sxg":sxg,"symbols":symbols,"tabindex-attr":tabindexAttr,"template-literals":templateLiterals,"template":template,"testfeat":testfeat,"text-decoration":textDecoration,"text-emphasis":textEmphasis,"text-overflow":textOverflow,"text-size-adjust":textSizeAdjust,"text-stroke":textStroke,"text-underline-offset":textUnderlineOffset,"textcontent":textcontent,"textencoder":textencoder,"tls1-1":tls11,"tls1-2":tls12,"tls1-3":tls13,"token-binding":tokenBinding,"touch":touch,"transforms2d":transforms2d,"transforms3d":transforms3d,"trusted-types":trustedTypes,"ttf":ttf,"typedarrays":typedarrays,"u2f":u2f,"unhandledrejection":unhandledrejection,"upgradeinsecurerequests":upgradeinsecurerequests,"url-scroll-to-text-fragment":urlScrollToTextFragment,"url":url,"urlsearchparams":urlsearchparams,"use-strict":useStrict,"user-select-none":userSelectNone,"user-timing":userTiming,"variable-fonts":variableFonts,"vibration":vibration,"video":video,"videotracks":videotracks,"viewport-units":viewportUnits,"wai-aria":waiAria,"wake-lock":wakeLock,"wasm":wasm,"wav":wav,"wbr-element":wbrElement,"web-animation":webAnimation,"web-app-manifest":webAppManifest,"web-bluetooth":webBluetooth,"web-share":webShare,"webauthn":webauthn,"webgl":webgl,"webgl2":webgl2,"webgpu":webgpu,"webhid":webhid,"webm":webm,"webnfc":webnfc,"webp":webp,"websockets":websockets,"webusb":webusb,"webvr":webvr,"webvtt":webvtt,"webworkers":webworkers,"webxr":webxr,"will-change":willChange,"woff":woff,"woff2":woff2,"word-break":wordBreak,"wordwrap":wordwrap,"x-doc-messaging":xDocMessaging,"x-frame-options":xFrameOptions,"xhr2":xhr2,"xhtml":xhtml,"xhtmlsmil":xhtmlsmil,"xml-serializer":xmlSerializer};

var features_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Load this dynamically so that it
 * doesn't appear in the rollup bundle.
 */

var features$1 = exports.features = features;
});

var unpacker = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});



Object.defineProperty(exports, 'agents', {
  enumerable: true,
  get: function get() {
    return agents_1.agents;
  }
});



Object.defineProperty(exports, 'feature', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(feature).default;
  }
});



Object.defineProperty(exports, 'features', {
  enumerable: true,
  get: function get() {
    return features_1.features;
  }
});



Object.defineProperty(exports, 'region', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(region).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
});

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var list = postcss_1.list;

var utils = {
  /**
     * Throw special error, to tell beniary,
     * that this error is from Autoprefixer.
     */
  error: function error(text) {
    var err = new Error(text);
    err.autoprefixer = true;
    throw err;
  },

  /**
     * Return array, that doesn’t contain duplicates.
     */
  uniq: function uniq(array) {
    var filtered = [];

    for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {
      var i = _step.value;

      if (!filtered.includes(i)) {
        filtered.push(i);
      }
    }

    return filtered;
  },

  /**
     * Return "-webkit-" on "-webkit- old"
     */
  removeNote: function removeNote(string) {
    if (!string.includes(' ')) {
      return string;
    }

    return string.split(' ')[0];
  },

  /**
     * Escape RegExp symbols
     */
  escapeRegexp: function escapeRegexp(string) {
    return string.replace(/[$()*+-.?[\\\]^{|}]/g, '\\$&');
  },

  /**
     * Return regexp to check, that CSS string contain word
     */
  regexp: function regexp(word, escape) {
    if (escape === void 0) {
      escape = true;
    }

    if (escape) {
      word = this.escapeRegexp(word);
    }

    return new RegExp("(^|[\\s,(])(" + word + "($|[\\s(,]))", 'gi');
  },

  /**
     * Change comma list
     */
  editList: function editList(value, callback) {
    var origin = list.comma(value);
    var changed = callback(origin, []);

    if (origin === changed) {
      return value;
    }

    var join = value.match(/,\s*/);
    join = join ? join[0] : ', ';
    return changed.join(join);
  },

  /**
     * Split the selector into parts.
     * It returns 3 level deep array because selectors can be comma
     * separated (1), space separated (2), and combined (3)
     * @param {String} selector selector string
     * @return {Array<Array<Array>>} 3 level deep array of split selector
     * @see utils.test.js for examples
     */
  splitSelector: function splitSelector(selector) {
    return list.comma(selector).map(function (i) {
      return list.space(i).map(function (k) {
        return k.split(/(?=\.|#)/g);
      });
    });
  }
};

var agents$2 = unpacker.agents;



var Browsers = /*#__PURE__*/function () {
  /**
     * Return all prefixes for default browser data
     */
  Browsers.prefixes = function prefixes() {
    if (this.prefixesCache) {
      return this.prefixesCache;
    }

    this.prefixesCache = [];

    for (var name in agents$2) {
      this.prefixesCache.push("-" + agents$2[name].prefix + "-");
    }

    this.prefixesCache = utils.uniq(this.prefixesCache).sort(function (a, b) {
      return b.length - a.length;
    });
    return this.prefixesCache;
  }
  /**
     * Check is value contain any possible prefix
     */
  ;

  Browsers.withPrefix = function withPrefix(value) {
    if (!this.prefixesRegexp) {
      this.prefixesRegexp = new RegExp(this.prefixes().join('|'));
    }

    return this.prefixesRegexp.test(value);
  };

  function Browsers(data, requirements, options, browserslistOpts) {
    this.data = data;
    this.options = options || {};
    this.browserslistOpts = browserslistOpts || {};
    this.selected = this.parse(requirements);
  }
  /**
     * Return browsers selected by requirements
     */


  var _proto = Browsers.prototype;

  _proto.parse = function parse(requirements) {
    var opts = {};

    for (var i in this.browserslistOpts) {
      opts[i] = this.browserslistOpts[i];
    }

    opts.path = this.options.from;
    return browserslist_1(requirements, opts);
  }
  /**
     * Return prefix for selected browser
     */
  ;

  _proto.prefix = function prefix(browser) {
    var _browser$split = browser.split(' '),
        name = _browser$split[0],
        version = _browser$split[1];

    var data = this.data[name];
    var prefix = data.prefix_exceptions && data.prefix_exceptions[version];

    if (!prefix) {
      prefix = data.prefix;
    }

    return "-" + prefix + "-";
  }
  /**
     * Is browser is selected by requirements
     */
  ;

  _proto.isSelected = function isSelected(browser) {
    return this.selected.includes(browser);
  };

  return Browsers;
}();

var browsers$1 = Browsers;

function _createForOfIteratorHelperLoose$1(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var vendor = postcss_1.vendor;




/**
 * Recursively clone objects
 */


function _clone(obj, parent) {
  var cloned = new obj.constructor();

  for (var _i = 0, _Object$keys = Object.keys(obj || {}); _i < _Object$keys.length; _i++) {
    var i = _Object$keys[_i];
    var value = obj[i];

    if (i === 'parent' && typeof value === 'object') {
      if (parent) {
        cloned[i] = parent;
      }
    } else if (i === 'source' || i === null) {
      cloned[i] = value;
    } else if (Array.isArray(value)) {
      cloned[i] = value.map(function (x) {
        return _clone(x, cloned);
      });
    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {
      if (typeof value === 'object' && value !== null) {
        value = _clone(value, cloned);
      }

      cloned[i] = value;
    }
  }

  return cloned;
}

var Prefixer = /*#__PURE__*/function () {
  /**
     * Add hack to selected names
     */
  Prefixer.hack = function hack(klass) {
    var _this = this;

    if (!this.hacks) {
      this.hacks = {};
    }

    return klass.names.map(function (name) {
      _this.hacks[name] = klass;
      return _this.hacks[name];
    });
  }
  /**
     * Load hacks for some names
     */
  ;

  Prefixer.load = function load(name, prefixes, all) {
    var Klass = this.hacks && this.hacks[name];

    if (Klass) {
      return new Klass(name, prefixes, all);
    } else {
      return new this(name, prefixes, all);
    }
  }
  /**
     * Clone node and clean autprefixer custom caches
     */
  ;

  Prefixer.clone = function clone(node, overrides) {
    var cloned = _clone(node);

    for (var name in overrides) {
      cloned[name] = overrides[name];
    }

    return cloned;
  };

  function Prefixer(name, prefixes, all) {
    this.prefixes = prefixes;
    this.name = name;
    this.all = all;
  }
  /**
     * Find prefix in node parents
     */


  var _proto = Prefixer.prototype;

  _proto.parentPrefix = function parentPrefix(node) {
    var prefix;

    if (typeof node._autoprefixerPrefix !== 'undefined') {
      prefix = node._autoprefixerPrefix;
    } else if (node.type === 'decl' && node.prop[0] === '-') {
      prefix = vendor.prefix(node.prop);
    } else if (node.type === 'root') {
      prefix = false;
    } else if (node.type === 'rule' && node.selector.includes(':-') && /:(-\w+-)/.test(node.selector)) {
      prefix = node.selector.match(/:(-\w+-)/)[1];
    } else if (node.type === 'atrule' && node.name[0] === '-') {
      prefix = vendor.prefix(node.name);
    } else {
      prefix = this.parentPrefix(node.parent);
    }

    if (!browsers$1.prefixes().includes(prefix)) {
      prefix = false;
    }

    node._autoprefixerPrefix = prefix;
    return node._autoprefixerPrefix;
  }
  /**
     * Clone node with prefixes
     */
  ;

  _proto.process = function process(node, result) {
    if (!this.check(node)) {
      return undefined;
    }

    var parent = this.parentPrefix(node);
    var prefixes = this.prefixes.filter(function (prefix) {
      return !parent || parent === utils.removeNote(prefix);
    });
    var added = [];

    for (var _iterator = _createForOfIteratorHelperLoose$1(prefixes), _step; !(_step = _iterator()).done;) {
      var prefix = _step.value;

      if (this.add(node, prefix, added.concat([prefix]), result)) {
        added.push(prefix);
      }
    }

    return added;
  }
  /**
     * Shortcut for Prefixer.clone
     */
  ;

  _proto.clone = function clone(node, overrides) {
    return Prefixer.clone(node, overrides);
  };

  return Prefixer;
}();

var prefixer = Prefixer;

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _createForOfIteratorHelperLoose$2(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }

function _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }







var Declaration = /*#__PURE__*/function (_Prefixer) {
  _inheritsLoose(Declaration, _Prefixer);

  function Declaration() {
    return _Prefixer.apply(this, arguments) || this;
  }

  var _proto = Declaration.prototype;

  /**
     * Always true, because we already get prefixer by property name
     */
  _proto.check = function check()
  /* decl */
  {
    return true;
  }
  /**
     * Return prefixed version of property
     */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + prop;
  }
  /**
     * Return unprefixed version of property
     */
  ;

  _proto.normalize = function normalize(prop) {
    return prop;
  }
  /**
     * Check `value`, that it contain other prefixes, rather than `prefix`
     */
  ;

  _proto.otherPrefixes = function otherPrefixes(value, prefix) {
    for (var _iterator = _createForOfIteratorHelperLoose$2(browsers$1.prefixes()), _step; !(_step = _iterator()).done;) {
      var other = _step.value;

      if (other === prefix) {
        continue;
      }

      if (value.includes(other)) {
        return true;
      }
    }

    return false;
  }
  /**
     * Set prefix to declaration
     */
  ;

  _proto.set = function set(decl, prefix) {
    decl.prop = this.prefixed(decl.prop, prefix);
    return decl;
  }
  /**
     * Should we use visual cascade for prefixes
     */
  ;

  _proto.needCascade = function needCascade(decl) {
    if (!decl._autoprefixerCascade) {
      decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').includes('\n');
    }

    return decl._autoprefixerCascade;
  }
  /**
     * Return maximum length of possible prefixed property
     */
  ;

  _proto.maxPrefixed = function maxPrefixed(prefixes, decl) {
    if (decl._autoprefixerMax) {
      return decl._autoprefixerMax;
    }

    var max = 0;

    for (var _iterator2 = _createForOfIteratorHelperLoose$2(prefixes), _step2; !(_step2 = _iterator2()).done;) {
      var prefix = _step2.value;
      prefix = utils.removeNote(prefix);

      if (prefix.length > max) {
        max = prefix.length;
      }
    }

    decl._autoprefixerMax = max;
    return decl._autoprefixerMax;
  }
  /**
     * Calculate indentation to create visual cascade
     */
  ;

  _proto.calcBefore = function calcBefore(prefixes, decl, prefix) {
    if (prefix === void 0) {
      prefix = '';
    }

    var max = this.maxPrefixed(prefixes, decl);
    var diff = max - utils.removeNote(prefix).length;
    var before = decl.raw('before');

    if (diff > 0) {
      before += Array(diff).fill(' ').join('');
    }

    return before;
  }
  /**
     * Remove visual cascade
     */
  ;

  _proto.restoreBefore = function restoreBefore(decl) {
    var lines = decl.raw('before').split('\n');
    var min = lines[lines.length - 1];
    this.all.group(decl).up(function (prefixed) {
      var array = prefixed.raw('before').split('\n');
      var last = array[array.length - 1];

      if (last.length < min.length) {
        min = last;
      }
    });
    lines[lines.length - 1] = min;
    decl.raws.before = lines.join('\n');
  }
  /**
     * Clone and insert new declaration
     */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    var cloned = this.set(this.clone(decl), prefix);
    if (!cloned) return undefined;
    var already = decl.parent.some(function (i) {
      return i.prop === cloned.prop && i.value === cloned.value;
    });

    if (already) {
      return undefined;
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, cloned);
  }
  /**
     * Did this declaration has this prefix above
     */
  ;

  _proto.isAlready = function isAlready(decl, prefixed) {
    var already = this.all.group(decl).up(function (i) {
      return i.prop === prefixed;
    });

    if (!already) {
      already = this.all.group(decl).down(function (i) {
        return i.prop === prefixed;
      });
    }

    return already;
  }
  /**
     * Clone and add prefixes for declaration
     */
  ;

  _proto.add = function add(decl, prefix, prefixes, result) {
    var prefixed = this.prefixed(decl.prop, prefix);

    if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {
      return undefined;
    }

    return this.insert(decl, prefix, prefixes, result);
  }
  /**
     * Add spaces for visual cascade
     */
  ;

  _proto.process = function process(decl, result) {
    if (!this.needCascade(decl)) {
      _Prefixer.prototype.process.call(this, decl, result);

      return;
    }

    var prefixes = _Prefixer.prototype.process.call(this, decl, result);

    if (!prefixes || !prefixes.length) {
      return;
    }

    this.restoreBefore(decl);
    decl.raws.before = this.calcBefore(prefixes, decl);
  }
  /**
     * Return list of prefixed properties to clean old prefixes
     */
  ;

  _proto.old = function old(prop, prefix) {
    return [this.prefixed(prop, prefix)];
  };

  return Declaration;
}(prefixer);

var declaration$1 = Declaration;

var abs = Math.abs;
var round = Math.round;

function almostEq(a, b) {
  return abs(a - b) <= 9.5367432e-7
}

//最大公约数 Greatest Common Divisor
function GCD(a, b) {
  if (almostEq(b, 0)) return a
  return GCD(b, a % b)
}

function findPrecision(n) {
  var e = 1;

  while (!almostEq(round(n * e) / e, n)) {
    e *= 10;
  }

  return e
}

function num2fraction(num) {
  if (num === 0 || num === '0') return '0'

  if (typeof num === 'string') {
    num = parseFloat(num);
  }


  var precision = findPrecision(num); //精确度
  var number = num * precision;
  var gcd = abs(GCD(number, precision));

  //分子
  var numerator = number / gcd;
  //分母
  var denominator = precision / gcd;

  //分数
  return round(numerator) + '/' + round(denominator)
}

var num2fraction_1 = num2fraction;

function _defaults$1(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _createForOfIteratorHelperLoose$3(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$3(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$3(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }

function _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _inheritsLoose$1(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$1(subClass, superClass); }







var REGEXP = /(min|max)-resolution\s*:\s*\d*\.?\d+(dppx|dpi|x)/gi;
var SPLIT = /(min|max)-resolution(\s*:\s*)(\d*\.?\d+)(dppx|dpi|x)/i;

var Resolution = /*#__PURE__*/function (_Prefixer) {
  _inheritsLoose$1(Resolution, _Prefixer);

  function Resolution() {
    return _Prefixer.apply(this, arguments) || this;
  }

  var _proto = Resolution.prototype;

  /**
     * Return prefixed query name
     */
  _proto.prefixName = function prefixName(prefix, name) {
    if (prefix === '-moz-') {
      return name + '--moz-device-pixel-ratio';
    } else {
      return prefix + name + '-device-pixel-ratio';
    }
  }
  /**
     * Return prefixed query
     */
  ;

  _proto.prefixQuery = function prefixQuery(prefix, name, colon, value, units) {
    if (units === 'dpi') {
      value = Number(value / 96);
    }

    if (prefix === '-o-') {
      value = num2fraction_1(value);
    }

    return this.prefixName(prefix, name) + colon + value;
  }
  /**
     * Remove prefixed queries
     */
  ;

  _proto.clean = function clean(rule) {
    var _this = this;

    if (!this.bad) {
      this.bad = [];

      for (var _iterator = _createForOfIteratorHelperLoose$3(this.prefixes), _step; !(_step = _iterator()).done;) {
        var prefix = _step.value;
        this.bad.push(this.prefixName(prefix, 'min'));
        this.bad.push(this.prefixName(prefix, 'max'));
      }
    }

    rule.params = utils.editList(rule.params, function (queries) {
      return queries.filter(function (query) {
        return _this.bad.every(function (i) {
          return !query.includes(i);
        });
      });
    });
  }
  /**
     * Add prefixed queries
     */
  ;

  _proto.process = function process(rule) {
    var _this2 = this;

    var parent = this.parentPrefix(rule);
    var prefixes = parent ? [parent] : this.prefixes;
    rule.params = utils.editList(rule.params, function (origin, prefixed) {
      for (var _iterator2 = _createForOfIteratorHelperLoose$3(origin), _step2; !(_step2 = _iterator2()).done;) {
        var query = _step2.value;

        if (!query.includes('min-resolution') && !query.includes('max-resolution')) {
          prefixed.push(query);
          continue;
        }

        var _loop = function _loop() {
          var prefix = _step3.value;
          var processed = query.replace(REGEXP, function (str) {
            var parts = str.match(SPLIT);
            return _this2.prefixQuery(prefix, parts[1], parts[2], parts[3], parts[4]);
          });
          prefixed.push(processed);
        };

        for (var _iterator3 = _createForOfIteratorHelperLoose$3(prefixes), _step3; !(_step3 = _iterator3()).done;) {
          _loop();
        }

        prefixed.push(query);
      }

      return utils.uniq(prefixed);
    });
  };

  return Resolution;
}(prefixer);

var resolution = Resolution;

var openParentheses = "(".charCodeAt(0);
var closeParentheses = ")".charCodeAt(0);
var singleQuote = "'".charCodeAt(0);
var doubleQuote = '"'.charCodeAt(0);
var backslash = "\\".charCodeAt(0);
var slash = "/".charCodeAt(0);
var comma = ",".charCodeAt(0);
var colon = ":".charCodeAt(0);
var star = "*".charCodeAt(0);
var uLower = "u".charCodeAt(0);
var uUpper = "U".charCodeAt(0);
var plus = "+".charCodeAt(0);
var isUnicodeRange = /^[a-f0-9?-]+$/i;

var parse$1 = function(input) {
  var tokens = [];
  var value = input;

  var next,
    quote,
    prev,
    token,
    escape,
    escapePos,
    whitespacePos,
    parenthesesOpenPos;
  var pos = 0;
  var code = value.charCodeAt(pos);
  var max = value.length;
  var stack = [{ nodes: tokens }];
  var balanced = 0;
  var parent;

  var name = "";
  var before = "";
  var after = "";

  while (pos < max) {
    // Whitespaces
    if (code <= 32) {
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      token = value.slice(pos, next);

      prev = tokens[tokens.length - 1];
      if (code === closeParentheses && balanced) {
        after = token;
      } else if (prev && prev.type === "div") {
        prev.after = token;
      } else if (
        code === comma ||
        code === colon ||
        (code === slash &&
          value.charCodeAt(next + 1) !== star &&
          (!parent ||
            (parent && parent.type === "function" && parent.value !== "calc")))
      ) {
        before = token;
      } else {
        tokens.push({
          type: "space",
          sourceIndex: pos,
          value: token
        });
      }

      pos = next;

      // Quotes
    } else if (code === singleQuote || code === doubleQuote) {
      next = pos;
      quote = code === singleQuote ? "'" : '"';
      token = {
        type: "string",
        sourceIndex: pos,
        quote: quote
      };
      do {
        escape = false;
        next = value.indexOf(quote, next + 1);
        if (~next) {
          escapePos = next;
          while (value.charCodeAt(escapePos - 1) === backslash) {
            escapePos -= 1;
            escape = !escape;
          }
        } else {
          value += quote;
          next = value.length - 1;
          token.unclosed = true;
        }
      } while (escape);
      token.value = value.slice(pos + 1, next);

      tokens.push(token);
      pos = next + 1;
      code = value.charCodeAt(pos);

      // Comments
    } else if (code === slash && value.charCodeAt(pos + 1) === star) {
      token = {
        type: "comment",
        sourceIndex: pos
      };

      next = value.indexOf("*/", pos);
      if (next === -1) {
        token.unclosed = true;
        next = value.length;
      }

      token.value = value.slice(pos + 2, next);
      tokens.push(token);

      pos = next + 2;
      code = value.charCodeAt(pos);

      // Operation within calc
    } else if (
      (code === slash || code === star) &&
      parent &&
      parent.type === "function" &&
      parent.value === "calc"
    ) {
      token = value[pos];
      tokens.push({
        type: "word",
        sourceIndex: pos - before.length,
        value: token
      });
      pos += 1;
      code = value.charCodeAt(pos);

      // Dividers
    } else if (code === slash || code === comma || code === colon) {
      token = value[pos];

      tokens.push({
        type: "div",
        sourceIndex: pos - before.length,
        value: token,
        before: before,
        after: ""
      });
      before = "";

      pos += 1;
      code = value.charCodeAt(pos);

      // Open parentheses
    } else if (openParentheses === code) {
      // Whitespaces after open parentheses
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      parenthesesOpenPos = pos;
      token = {
        type: "function",
        sourceIndex: pos - name.length,
        value: name,
        before: value.slice(parenthesesOpenPos + 1, next)
      };
      pos = next;

      if (name === "url" && code !== singleQuote && code !== doubleQuote) {
        next -= 1;
        do {
          escape = false;
          next = value.indexOf(")", next + 1);
          if (~next) {
            escapePos = next;
            while (value.charCodeAt(escapePos - 1) === backslash) {
              escapePos -= 1;
              escape = !escape;
            }
          } else {
            value += ")";
            next = value.length - 1;
            token.unclosed = true;
          }
        } while (escape);
        // Whitespaces before closed
        whitespacePos = next;
        do {
          whitespacePos -= 1;
          code = value.charCodeAt(whitespacePos);
        } while (code <= 32);
        if (parenthesesOpenPos < whitespacePos) {
          if (pos !== whitespacePos + 1) {
            token.nodes = [
              {
                type: "word",
                sourceIndex: pos,
                value: value.slice(pos, whitespacePos + 1)
              }
            ];
          } else {
            token.nodes = [];
          }
          if (token.unclosed && whitespacePos + 1 !== next) {
            token.after = "";
            token.nodes.push({
              type: "space",
              sourceIndex: whitespacePos + 1,
              value: value.slice(whitespacePos + 1, next)
            });
          } else {
            token.after = value.slice(whitespacePos + 1, next);
          }
        } else {
          token.after = "";
          token.nodes = [];
        }
        pos = next + 1;
        code = value.charCodeAt(pos);
        tokens.push(token);
      } else {
        balanced += 1;
        token.after = "";
        tokens.push(token);
        stack.push(token);
        tokens = token.nodes = [];
        parent = token;
      }
      name = "";

      // Close parentheses
    } else if (closeParentheses === code && balanced) {
      pos += 1;
      code = value.charCodeAt(pos);

      parent.after = after;
      after = "";
      balanced -= 1;
      stack.pop();
      parent = stack[balanced];
      tokens = parent.nodes;

      // Words
    } else {
      next = pos;
      do {
        if (code === backslash) {
          next += 1;
        }
        next += 1;
        code = value.charCodeAt(next);
      } while (
        next < max &&
        !(
          code <= 32 ||
          code === singleQuote ||
          code === doubleQuote ||
          code === comma ||
          code === colon ||
          code === slash ||
          code === openParentheses ||
          (code === star &&
            parent &&
            parent.type === "function" &&
            parent.value === "calc") ||
          (code === slash &&
            parent.type === "function" &&
            parent.value === "calc") ||
          (code === closeParentheses && balanced)
        )
      );
      token = value.slice(pos, next);

      if (openParentheses === code) {
        name = token;
      } else if (
        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&
        plus === token.charCodeAt(1) &&
        isUnicodeRange.test(token.slice(2))
      ) {
        tokens.push({
          type: "unicode-range",
          sourceIndex: pos,
          value: token
        });
      } else {
        tokens.push({
          type: "word",
          sourceIndex: pos,
          value: token
        });
      }

      pos = next;
    }
  }

  for (pos = stack.length - 1; pos; pos -= 1) {
    stack[pos].unclosed = true;
  }

  return stack[0].nodes;
};

var walk = function walk(nodes, cb, bubble) {
  var i, max, node, result;

  for (i = 0, max = nodes.length; i < max; i += 1) {
    node = nodes[i];
    if (!bubble) {
      result = cb(node, i, nodes);
    }

    if (
      result !== false &&
      node.type === "function" &&
      Array.isArray(node.nodes)
    ) {
      walk(node.nodes, cb, bubble);
    }

    if (bubble) {
      cb(node, i, nodes);
    }
  }
};

function stringifyNode(node, custom) {
  var type = node.type;
  var value = node.value;
  var buf;
  var customResult;

  if (custom && (customResult = custom(node)) !== undefined) {
    return customResult;
  } else if (type === "word" || type === "space") {
    return value;
  } else if (type === "string") {
    buf = node.quote || "";
    return buf + value + (node.unclosed ? "" : buf);
  } else if (type === "comment") {
    return "/*" + value + (node.unclosed ? "" : "*/");
  } else if (type === "div") {
    return (node.before || "") + value + (node.after || "");
  } else if (Array.isArray(node.nodes)) {
    buf = stringify(node.nodes, custom);
    if (type !== "function") {
      return buf;
    }
    return (
      value +
      "(" +
      (node.before || "") +
      buf +
      (node.after || "") +
      (node.unclosed ? "" : ")")
    );
  }
  return value;
}

function stringify(nodes, custom) {
  var result, i;

  if (Array.isArray(nodes)) {
    result = "";
    for (i = nodes.length - 1; ~i; i -= 1) {
      result = stringifyNode(nodes[i], custom) + result;
    }
    return result;
  }
  return stringifyNode(nodes, custom);
}

var stringify_1$1 = stringify;

var minus = "-".charCodeAt(0);
var plus$1 = "+".charCodeAt(0);
var dot = ".".charCodeAt(0);
var exp = "e".charCodeAt(0);
var EXP = "E".charCodeAt(0);

// Check if three code points would start a number
// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number
function likeNumber(value) {
  var code = value.charCodeAt(0);
  var nextCode;

  if (code === plus$1 || code === minus) {
    nextCode = value.charCodeAt(1);

    if (nextCode >= 48 && nextCode <= 57) {
      return true;
    }

    var nextNextCode = value.charCodeAt(2);

    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
      return true;
    }

    return false;
  }

  if (code === dot) {
    nextCode = value.charCodeAt(1);

    if (nextCode >= 48 && nextCode <= 57) {
      return true;
    }

    return false;
  }

  if (code >= 48 && code <= 57) {
    return true;
  }

  return false;
}

// Consume a number
// https://www.w3.org/TR/css-syntax-3/#consume-number
var unit = function(value) {
  var pos = 0;
  var length = value.length;
  var code;
  var nextCode;
  var nextNextCode;

  if (length === 0 || !likeNumber(value)) {
    return false;
  }

  code = value.charCodeAt(pos);

  if (code === plus$1 || code === minus) {
    pos++;
  }

  while (pos < length) {
    code = value.charCodeAt(pos);

    if (code < 48 || code > 57) {
      break;
    }

    pos += 1;
  }

  code = value.charCodeAt(pos);
  nextCode = value.charCodeAt(pos + 1);

  if (code === dot && nextCode >= 48 && nextCode <= 57) {
    pos += 2;

    while (pos < length) {
      code = value.charCodeAt(pos);

      if (code < 48 || code > 57) {
        break;
      }

      pos += 1;
    }
  }

  code = value.charCodeAt(pos);
  nextCode = value.charCodeAt(pos + 1);
  nextNextCode = value.charCodeAt(pos + 2);

  if (
    (code === exp || code === EXP) &&
    ((nextCode >= 48 && nextCode <= 57) ||
      ((nextCode === plus$1 || nextCode === minus) &&
        nextNextCode >= 48 &&
        nextNextCode <= 57))
  ) {
    pos += nextCode === plus$1 || nextCode === minus ? 3 : 2;

    while (pos < length) {
      code = value.charCodeAt(pos);

      if (code < 48 || code > 57) {
        break;
      }

      pos += 1;
    }
  }

  return {
    number: value.slice(0, pos),
    unit: value.slice(pos)
  };
};

function ValueParser(value) {
  if (this instanceof ValueParser) {
    this.nodes = parse$1(value);
    return this;
  }
  return new ValueParser(value);
}

ValueParser.prototype.toString = function() {
  return Array.isArray(this.nodes) ? stringify_1$1(this.nodes) : "";
};

ValueParser.prototype.walk = function(cb, bubble) {
  walk(this.nodes, cb, bubble);
  return this;
};

ValueParser.unit = unit;

ValueParser.walk = walk;

ValueParser.stringify = stringify_1$1;

var lib = ValueParser;

function _createForOfIteratorHelperLoose$4(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$4(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$4(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen); }

function _arrayLikeToArray$4(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var vendor$1 = postcss_1.vendor;

var list$1 = postcss_1.list;



var Transition = /*#__PURE__*/function () {
  function Transition(prefixes) {
    _defineProperty(this, "props", ['transition', 'transition-property']);

    this.prefixes = prefixes;
  }
  /**
   * Process transition and add prefixes for all necessary properties
   */


  var _proto = Transition.prototype;

  _proto.add = function add(decl, result) {
    var _this = this;

    var prefix, prop;
    var add = this.prefixes.add[decl.prop];
    var vendorPrefixes = this.ruleVendorPrefixes(decl);
    var declPrefixes = vendorPrefixes || add && add.prefixes || [];
    var params = this.parse(decl.value);
    var names = params.map(function (i) {
      return _this.findProp(i);
    });
    var added = [];

    if (names.some(function (i) {
      return i[0] === '-';
    })) {
      return;
    }

    for (var _iterator = _createForOfIteratorHelperLoose$4(params), _step; !(_step = _iterator()).done;) {
      var param = _step.value;
      prop = this.findProp(param);
      if (prop[0] === '-') continue;
      var prefixer = this.prefixes.add[prop];
      if (!prefixer || !prefixer.prefixes) continue;

      for (var _iterator3 = _createForOfIteratorHelperLoose$4(prefixer.prefixes), _step3; !(_step3 = _iterator3()).done;) {
        prefix = _step3.value;

        if (vendorPrefixes && !vendorPrefixes.some(function (p) {
          return prefix.includes(p);
        })) {
          continue;
        }

        var prefixed = this.prefixes.prefixed(prop, prefix);

        if (prefixed !== '-ms-transform' && !names.includes(prefixed)) {
          if (!this.disabled(prop, prefix)) {
            added.push(this.clone(prop, prefixed, param));
          }
        }
      }
    }

    params = params.concat(added);
    var value = this.stringify(params);
    var webkitClean = this.stringify(this.cleanFromUnprefixed(params, '-webkit-'));

    if (declPrefixes.includes('-webkit-')) {
      this.cloneBefore(decl, "-webkit-" + decl.prop, webkitClean);
    }

    this.cloneBefore(decl, decl.prop, webkitClean);

    if (declPrefixes.includes('-o-')) {
      var operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'));
      this.cloneBefore(decl, "-o-" + decl.prop, operaClean);
    }

    for (var _iterator2 = _createForOfIteratorHelperLoose$4(declPrefixes), _step2; !(_step2 = _iterator2()).done;) {
      prefix = _step2.value;

      if (prefix !== '-webkit-' && prefix !== '-o-') {
        var prefixValue = this.stringify(this.cleanOtherPrefixes(params, prefix));
        this.cloneBefore(decl, prefix + decl.prop, prefixValue);
      }
    }

    if (value !== decl.value && !this.already(decl, decl.prop, value)) {
      this.checkForWarning(result, decl);
      decl.cloneBefore();
      decl.value = value;
    }
  }
  /**
   * Find property name
   */
  ;

  _proto.findProp = function findProp(param) {
    var prop = param[0].value;

    if (/^\d/.test(prop)) {
      for (var _iterator4 = _createForOfIteratorHelperLoose$4(param.entries()), _step4; !(_step4 = _iterator4()).done;) {
        var _step4$value = _step4.value,
            i = _step4$value[0],
            token = _step4$value[1];

        if (i !== 0 && token.type === 'word') {
          return token.value;
        }
      }
    }

    return prop;
  }
  /**
   * Does we already have this declaration
   */
  ;

  _proto.already = function already(decl, prop, value) {
    return decl.parent.some(function (i) {
      return i.prop === prop && i.value === value;
    });
  }
  /**
   * Add declaration if it is not exist
   */
  ;

  _proto.cloneBefore = function cloneBefore(decl, prop, value) {
    if (!this.already(decl, prop, value)) {
      decl.cloneBefore({
        prop: prop,
        value: value
      });
    }
  }
  /**
   * Show transition-property warning
   */
  ;

  _proto.checkForWarning = function checkForWarning(result, decl) {
    if (decl.prop !== 'transition-property') {
      return;
    }

    decl.parent.each(function (i) {
      if (i.type !== 'decl') {
        return undefined;
      }

      if (i.prop.indexOf('transition-') !== 0) {
        return undefined;
      }

      if (i.prop === 'transition-property') {
        return undefined;
      }

      if (list$1.comma(i.value).length > 1) {
        decl.warn(result, 'Replace transition-property to transition, ' + 'because Autoprefixer could not support ' + 'any cases of transition-property ' + 'and other transition-*');
      }

      return false;
    });
  }
  /**
   * Process transition and remove all unnecessary properties
   */
  ;

  _proto.remove = function remove(decl) {
    var _this2 = this;

    var params = this.parse(decl.value);
    params = params.filter(function (i) {
      var prop = _this2.prefixes.remove[_this2.findProp(i)];

      return !prop || !prop.remove;
    });
    var value = this.stringify(params);

    if (decl.value === value) {
      return;
    }

    if (params.length === 0) {
      decl.remove();
      return;
    }

    var _double = decl.parent.some(function (i) {
      return i.prop === decl.prop && i.value === value;
    });

    var smaller = decl.parent.some(function (i) {
      return i !== decl && i.prop === decl.prop && i.value.length > value.length;
    });

    if (_double || smaller) {
      decl.remove();
      return;
    }

    decl.value = value;
  }
  /**
   * Parse properties list to array
   */
  ;

  _proto.parse = function parse(value) {
    var ast = lib(value);
    var result = [];
    var param = [];

    for (var _iterator5 = _createForOfIteratorHelperLoose$4(ast.nodes), _step5; !(_step5 = _iterator5()).done;) {
      var node = _step5.value;
      param.push(node);

      if (node.type === 'div' && node.value === ',') {
        result.push(param);
        param = [];
      }
    }

    result.push(param);
    return result.filter(function (i) {
      return i.length > 0;
    });
  }
  /**
   * Return properties string from array
   */
  ;

  _proto.stringify = function stringify(params) {
    if (params.length === 0) {
      return '';
    }

    var nodes = [];

    for (var _iterator6 = _createForOfIteratorHelperLoose$4(params), _step6; !(_step6 = _iterator6()).done;) {
      var param = _step6.value;

      if (param[param.length - 1].type !== 'div') {
        param.push(this.div(params));
      }

      nodes = nodes.concat(param);
    }

    if (nodes[0].type === 'div') {
      nodes = nodes.slice(1);
    }

    if (nodes[nodes.length - 1].type === 'div') {
      nodes = nodes.slice(0, +-2 + 1 );
    }

    return lib.stringify({
      nodes: nodes
    });
  }
  /**
   * Return new param array with different name
   */
  ;

  _proto.clone = function clone(origin, name, param) {
    var result = [];
    var changed = false;

    for (var _iterator7 = _createForOfIteratorHelperLoose$4(param), _step7; !(_step7 = _iterator7()).done;) {
      var i = _step7.value;

      if (!changed && i.type === 'word' && i.value === origin) {
        result.push({
          type: 'word',
          value: name
        });
        changed = true;
      } else {
        result.push(i);
      }
    }

    return result;
  }
  /**
   * Find or create separator
   */
  ;

  _proto.div = function div(params) {
    for (var _iterator8 = _createForOfIteratorHelperLoose$4(params), _step8; !(_step8 = _iterator8()).done;) {
      var param = _step8.value;

      for (var _iterator9 = _createForOfIteratorHelperLoose$4(param), _step9; !(_step9 = _iterator9()).done;) {
        var node = _step9.value;

        if (node.type === 'div' && node.value === ',') {
          return node;
        }
      }
    }

    return {
      type: 'div',
      value: ',',
      after: ' '
    };
  };

  _proto.cleanOtherPrefixes = function cleanOtherPrefixes(params, prefix) {
    var _this3 = this;

    return params.filter(function (param) {
      var current = vendor$1.prefix(_this3.findProp(param));
      return current === '' || current === prefix;
    });
  }
  /**
   * Remove all non-webkit prefixes and unprefixed params if we have prefixed
   */
  ;

  _proto.cleanFromUnprefixed = function cleanFromUnprefixed(params, prefix) {
    var _this4 = this;

    var remove = params.map(function (i) {
      return _this4.findProp(i);
    }).filter(function (i) {
      return i.slice(0, prefix.length) === prefix;
    }).map(function (i) {
      return _this4.prefixes.unprefixed(i);
    });
    var result = [];

    for (var _iterator10 = _createForOfIteratorHelperLoose$4(params), _step10; !(_step10 = _iterator10()).done;) {
      var param = _step10.value;
      var prop = this.findProp(param);
      var p = vendor$1.prefix(prop);

      if (!remove.includes(prop) && (p === prefix || p === '')) {
        result.push(param);
      }
    }

    return result;
  }
  /**
   * Check property for disabled by option
   */
  ;

  _proto.disabled = function disabled(prop, prefix) {
    var other = ['order', 'justify-content', 'align-self', 'align-content'];

    if (prop.includes('flex') || other.includes(prop)) {
      if (this.prefixes.options.flexbox === false) {
        return true;
      }

      if (this.prefixes.options.flexbox === 'no-2009') {
        return prefix.includes('2009');
      }
    }

    return undefined;
  }
  /**
   * Check if transition prop is inside vendor specific rule
   */
  ;

  _proto.ruleVendorPrefixes = function ruleVendorPrefixes(decl) {
    var parent = decl.parent;

    if (parent.type !== 'rule') {
      return false;
    } else if (!parent.selector.includes(':-')) {
      return false;
    }

    var selectors = browsers$1.prefixes().filter(function (s) {
      return parent.selector.includes(':' + s);
    });
    return selectors.length > 0 ? selectors : false;
  };

  return Transition;
}();

var transition = Transition;

var OldValue = /*#__PURE__*/function () {
  function OldValue(unprefixed, prefixed, string, regexp) {
    this.unprefixed = unprefixed;
    this.prefixed = prefixed;
    this.string = string || prefixed;
    this.regexp = regexp || utils.regexp(prefixed);
  }
  /**
     * Check, that value contain old value
     */


  var _proto = OldValue.prototype;

  _proto.check = function check(value) {
    if (value.includes(this.string)) {
      return !!value.match(this.regexp);
    }

    return false;
  };

  return OldValue;
}();

var oldValue = OldValue;

function _defaults$2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$2(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$2(subClass, superClass); }

var vendor$2 = postcss_1.vendor;







var Value = /*#__PURE__*/function (_Prefixer) {
  _inheritsLoose$2(Value, _Prefixer);

  function Value() {
    return _Prefixer.apply(this, arguments) || this;
  }

  /**
     * Clone decl for each prefixed values
     */
  Value.save = function save(prefixes, decl) {
    var _this = this;

    var prop = decl.prop;
    var result = [];

    var _loop = function _loop(prefix) {
      var value = decl._autoprefixerValues[prefix];

      if (value === decl.value) {
        return "continue";
      }

      var item = void 0;
      var propPrefix = vendor$2.prefix(prop);

      if (propPrefix === '-pie-') {
        return "continue";
      }

      if (propPrefix === prefix) {
        item = decl.value = value;
        result.push(item);
        return "continue";
      }

      var prefixed = prefixes.prefixed(prop, prefix);
      var rule = decl.parent;

      if (!rule.every(function (i) {
        return i.prop !== prefixed;
      })) {
        result.push(item);
        return "continue";
      }

      var trimmed = value.replace(/\s+/, ' ');
      var already = rule.some(function (i) {
        return i.prop === decl.prop && i.value.replace(/\s+/, ' ') === trimmed;
      });

      if (already) {
        result.push(item);
        return "continue";
      }

      var cloned = _this.clone(decl, {
        value: value
      });

      item = decl.parent.insertBefore(decl, cloned);
      result.push(item);
    };

    for (var prefix in decl._autoprefixerValues) {
      var _ret = _loop(prefix);

      if (_ret === "continue") continue;
    }

    return result;
  }
  /**
     * Is declaration need to be prefixed
     */
  ;

  var _proto = Value.prototype;

  _proto.check = function check(decl) {
    var value = decl.value;

    if (!value.includes(this.name)) {
      return false;
    }

    return !!value.match(this.regexp());
  }
  /**
     * Lazy regexp loading
     */
  ;

  _proto.regexp = function regexp() {
    return this.regexpCache || (this.regexpCache = utils.regexp(this.name));
  }
  /**
     * Add prefix to values in string
     */
  ;

  _proto.replace = function replace(string, prefix) {
    return string.replace(this.regexp(), "$1" + prefix + "$2");
  }
  /**
     * Get value with comments if it was not changed
     */
  ;

  _proto.value = function value(decl) {
    if (decl.raws.value && decl.raws.value.value === decl.value) {
      return decl.raws.value.raw;
    } else {
      return decl.value;
    }
  }
  /**
     * Save values with next prefixed token
     */
  ;

  _proto.add = function add(decl, prefix) {
    if (!decl._autoprefixerValues) {
      decl._autoprefixerValues = {};
    }

    var value = decl._autoprefixerValues[prefix] || this.value(decl);
    var before;

    do {
      before = value;
      value = this.replace(value, prefix);
      if (value === false) return;
    } while (value !== before);

    decl._autoprefixerValues[prefix] = value;
  }
  /**
     * Return function to fast find prefixed value
     */
  ;

  _proto.old = function old(prefix) {
    return new oldValue(this.name, prefix + this.name);
  };

  return Value;
}(prefixer);

var value = Value;

function _createForOfIteratorHelperLoose$5(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$5(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$5(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen); }

function _arrayLikeToArray$5(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var list$2 = postcss_1.list;

var uniq$1 = utils.uniq;

var escapeRegexp = utils.escapeRegexp;

var splitSelector = utils.splitSelector;

function convert$1(value) {
  if (value && value.length === 2 && value[0] === 'span' && parseInt(value[1], 10) > 0) {
    return [false, parseInt(value[1], 10)];
  }

  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {
    return [parseInt(value[0], 10), false];
  }

  return [false, false];
}

function translate(values, startIndex, endIndex) {
  var startValue = values[startIndex];
  var endValue = values[endIndex];

  if (!startValue) {
    return [false, false];
  }

  var _convert = convert$1(startValue),
      start = _convert[0],
      spanStart = _convert[1];

  var _convert2 = convert$1(endValue),
      end = _convert2[0],
      spanEnd = _convert2[1];

  if (start && !endValue) {
    return [start, false];
  }

  if (spanStart && end) {
    return [end - spanStart, spanStart];
  }

  if (start && spanEnd) {
    return [start, spanEnd];
  }

  if (start && end) {
    return [start, end - start];
  }

  return [false, false];
}

function parse$2(decl) {
  var node = lib(decl.value);
  var values = [];
  var current = 0;
  values[current] = [];

  for (var _iterator = _createForOfIteratorHelperLoose$5(node.nodes), _step; !(_step = _iterator()).done;) {
    var i = _step.value;

    if (i.type === 'div') {
      current += 1;
      values[current] = [];
    } else if (i.type === 'word') {
      values[current].push(i.value);
    }
  }

  return values;
}

function insertDecl(decl, prop, value) {
  if (value && !decl.parent.some(function (i) {
    return i.prop === "-ms-" + prop;
  })) {
    decl.cloneBefore({
      prop: "-ms-" + prop,
      value: value.toString()
    });
  }
} // Track transforms


function prefixTrackProp(_ref) {
  var prop = _ref.prop,
      prefix = _ref.prefix;
  return prefix + prop.replace('template-', '');
}

function transformRepeat(_ref2, _ref3) {
  var nodes = _ref2.nodes;
  var gap = _ref3.gap;

  var _nodes$reduce = nodes.reduce(function (result, node) {
    if (node.type === 'div' && node.value === ',') {
      result.key = 'size';
    } else {
      result[result.key].push(lib.stringify(node));
    }

    return result;
  }, {
    key: 'count',
    size: [],
    count: []
  }),
      count = _nodes$reduce.count,
      size = _nodes$reduce.size; // insert gap values


  if (gap) {
    var _ret = function () {
      size = size.filter(function (i) {
        return i.trim();
      });
      var val = [];

      var _loop = function _loop(i) {
        size.forEach(function (item, index) {
          if (index > 0 || i > 1) {
            val.push(gap);
          }

          val.push(item);
        });
      };

      for (var i = 1; i <= count; i++) {
        _loop(i);
      }

      return {
        v: val.join(' ')
      };
    }();

    if (typeof _ret === "object") return _ret.v;
  }

  return "(" + size.join('') + ")[" + count.join('') + "]";
}

function prefixTrackValue(_ref4) {
  var value = _ref4.value,
      gap = _ref4.gap;
  var result = lib(value).nodes.reduce(function (nodes, node) {
    if (node.type === 'function' && node.value === 'repeat') {
      return nodes.concat({
        type: 'word',
        value: transformRepeat(node, {
          gap: gap
        })
      });
    }

    if (gap && node.type === 'space') {
      return nodes.concat({
        type: 'space',
        value: ' '
      }, {
        type: 'word',
        value: gap
      }, node);
    }

    return nodes.concat(node);
  }, []);
  return lib.stringify(result);
} // Parse grid-template-areas


var DOTS = /^\.+$/;

function track(start, end) {
  return {
    start: start,
    end: end,
    span: end - start
  };
}

function getColumns(line) {
  return line.trim().split(/\s+/g);
}

function parseGridAreas(_ref5) {
  var rows = _ref5.rows,
      gap = _ref5.gap;
  return rows.reduce(function (areas, line, rowIndex) {
    if (gap.row) rowIndex *= 2;
    if (line.trim() === '') return areas;
    getColumns(line).forEach(function (area, columnIndex) {
      if (DOTS.test(area)) return;
      if (gap.column) columnIndex *= 2;

      if (typeof areas[area] === 'undefined') {
        areas[area] = {
          column: track(columnIndex + 1, columnIndex + 2),
          row: track(rowIndex + 1, rowIndex + 2)
        };
      } else {
        var _areas$area = areas[area],
            column = _areas$area.column,
            row = _areas$area.row;
        column.start = Math.min(column.start, columnIndex + 1);
        column.end = Math.max(column.end, columnIndex + 2);
        column.span = column.end - column.start;
        row.start = Math.min(row.start, rowIndex + 1);
        row.end = Math.max(row.end, rowIndex + 2);
        row.span = row.end - row.start;
      }
    });
    return areas;
  }, {});
} // Parse grid-template


function testTrack(node) {
  return node.type === 'word' && /^\[.+]$/.test(node.value);
}

function verifyRowSize(result) {
  if (result.areas.length > result.rows.length) {
    result.rows.push('auto');
  }

  return result;
}

function parseTemplate(_ref6) {
  var decl = _ref6.decl,
      gap = _ref6.gap;
  var gridTemplate = lib(decl.value).nodes.reduce(function (result, node) {
    var type = node.type,
        value = node.value;
    if (testTrack(node) || type === 'space') return result; // area

    if (type === 'string') {
      result = verifyRowSize(result);
      result.areas.push(value);
    } // values and function


    if (type === 'word' || type === 'function') {
      result[result.key].push(lib.stringify(node));
    } // divider(/)


    if (type === 'div' && value === '/') {
      result.key = 'columns';
      result = verifyRowSize(result);
    }

    return result;
  }, {
    key: 'rows',
    columns: [],
    rows: [],
    areas: []
  });
  return {
    areas: parseGridAreas({
      rows: gridTemplate.areas,
      gap: gap
    }),
    columns: prefixTrackValue({
      value: gridTemplate.columns.join(' '),
      gap: gap.column
    }),
    rows: prefixTrackValue({
      value: gridTemplate.rows.join(' '),
      gap: gap.row
    })
  };
} // Insert parsed grid areas

/**
 * Get an array of -ms- prefixed props and values
 * @param  {Object} [area] area object with column and row data
 * @param  {Boolean} [addRowSpan] should we add grid-column-row value?
 * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?
 * @return {Array<Object>}
 */


function getMSDecls(area, addRowSpan, addColumnSpan) {
  if (addRowSpan === void 0) {
    addRowSpan = false;
  }

  if (addColumnSpan === void 0) {
    addColumnSpan = false;
  }

  return [].concat({
    prop: '-ms-grid-row',
    value: String(area.row.start)
  }, area.row.span > 1 || addRowSpan ? {
    prop: '-ms-grid-row-span',
    value: String(area.row.span)
  } : [], {
    prop: '-ms-grid-column',
    value: String(area.column.start)
  }, area.column.span > 1 || addColumnSpan ? {
    prop: '-ms-grid-column-span',
    value: String(area.column.span)
  } : []);
}

function getParentMedia(parent) {
  if (parent.type === 'atrule' && parent.name === 'media') {
    return parent;
  }

  if (!parent.parent) {
    return false;
  }

  return getParentMedia(parent.parent);
}
/**
 * change selectors for rules with duplicate grid-areas.
 * @param  {Array<Rule>} rules
 * @param  {Array<String>} templateSelectors
 * @return {Array<Rule>} rules with changed selectors
 */


function changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {
  ruleSelectors = ruleSelectors.map(function (selector) {
    var selectorBySpace = list$2.space(selector);
    var selectorByComma = list$2.comma(selector);

    if (selectorBySpace.length > selectorByComma.length) {
      selector = selectorBySpace.slice(-1).join('');
    }

    return selector;
  });
  return ruleSelectors.map(function (ruleSelector) {
    var newSelector = templateSelectors.map(function (tplSelector, index) {
      var space = index === 0 ? '' : ' ';
      return "" + space + tplSelector + " > " + ruleSelector;
    });
    return newSelector;
  });
}
/**
 * check if selector of rules are equal
 * @param  {Rule} ruleA
 * @param  {Rule} ruleB
 * @return {Boolean}
 */


function selectorsEqual(ruleA, ruleB) {
  return ruleA.selectors.some(function (sel) {
    return ruleB.selectors.some(function (s) {
      return s === sel;
    });
  });
}
/**
 * Parse data from all grid-template(-areas) declarations
 * @param  {Root} css css root
 * @return {Object} parsed data
 */


function parseGridTemplatesData(css) {
  var parsed = []; // we walk through every grid-template(-areas) declaration and store
  // data with the same area names inside the item

  css.walkDecls(/grid-template(-areas)?$/, function (d) {
    var rule = d.parent;
    var media = getParentMedia(rule);
    var gap = getGridGap(d);
    var inheritedGap = inheritGridGap(d, gap);

    var _parseTemplate = parseTemplate({
      decl: d,
      gap: inheritedGap || gap
    }),
        areas = _parseTemplate.areas;

    var areaNames = Object.keys(areas); // skip node if it doesn't have areas

    if (areaNames.length === 0) {
      return true;
    } // check parsed array for item that include the same area names
    // return index of that item


    var index = parsed.reduce(function (acc, _ref7, idx) {
      var allAreas = _ref7.allAreas;
      var hasAreas = allAreas && areaNames.some(function (area) {
        return allAreas.includes(area);
      });
      return hasAreas ? idx : acc;
    }, null);

    if (index !== null) {
      // index is found, add the grid-template data to that item
      var _parsed$index = parsed[index],
          allAreas = _parsed$index.allAreas,
          rules = _parsed$index.rules; // check if rule has no duplicate area names

      var hasNoDuplicates = rules.some(function (r) {
        return r.hasDuplicates === false && selectorsEqual(r, rule);
      });
      var duplicatesFound = false; // check need to gather all duplicate area names

      var duplicateAreaNames = rules.reduce(function (acc, r) {
        if (!r.params && selectorsEqual(r, rule)) {
          duplicatesFound = true;
          return r.duplicateAreaNames;
        }

        if (!duplicatesFound) {
          areaNames.forEach(function (name) {
            if (r.areas[name]) {
              acc.push(name);
            }
          });
        }

        return uniq$1(acc);
      }, []); // update grid-row/column-span values for areas with duplicate
      // area names. @see #1084 and #1146

      rules.forEach(function (r) {
        areaNames.forEach(function (name) {
          var area = r.areas[name];

          if (area && area.row.span !== areas[name].row.span) {
            areas[name].row.updateSpan = true;
          }

          if (area && area.column.span !== areas[name].column.span) {
            areas[name].column.updateSpan = true;
          }
        });
      });
      parsed[index].allAreas = uniq$1([].concat(allAreas, areaNames));
      parsed[index].rules.push({
        hasDuplicates: !hasNoDuplicates,
        params: media.params,
        selectors: rule.selectors,
        node: rule,
        duplicateAreaNames: duplicateAreaNames,
        areas: areas
      });
    } else {
      // index is NOT found, push the new item to the parsed array
      parsed.push({
        allAreas: areaNames,
        areasCount: 0,
        rules: [{
          hasDuplicates: false,
          duplicateRules: [],
          params: media.params,
          selectors: rule.selectors,
          node: rule,
          duplicateAreaNames: [],
          areas: areas
        }]
      });
    }

    return undefined;
  });
  return parsed;
}
/**
 * insert prefixed grid-area declarations
 * @param  {Root}  css css root
 * @param  {Function} isDisabled check if the rule is disabled
 * @return {void}
 */


function insertAreas(css, isDisabled) {
  // parse grid-template declarations
  var gridTemplatesData = parseGridTemplatesData(css); // return undefined if no declarations found

  if (gridTemplatesData.length === 0) {
    return undefined;
  } // we need to store the rules that we will insert later


  var rulesToInsert = {};
  css.walkDecls('grid-area', function (gridArea) {
    var gridAreaRule = gridArea.parent;
    var hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row';
    var gridAreaMedia = getParentMedia(gridAreaRule);

    if (isDisabled(gridArea)) {
      return undefined;
    }

    var gridAreaRuleIndex = gridAreaMedia ? css.index(gridAreaMedia) : css.index(gridAreaRule);
    var value = gridArea.value; // found the data that matches grid-area identifier

    var data = gridTemplatesData.filter(function (d) {
      return d.allAreas.includes(value);
    })[0];

    if (!data) {
      return true;
    }

    var lastArea = data.allAreas[data.allAreas.length - 1];
    var selectorBySpace = list$2.space(gridAreaRule.selector);
    var selectorByComma = list$2.comma(gridAreaRule.selector);
    var selectorIsComplex = selectorBySpace.length > 1 && selectorBySpace.length > selectorByComma.length; // prevent doubling of prefixes

    if (hasPrefixedRow) {
      return false;
    } // create the empty object with the key as the last area name
    // e.g if we have templates with "a b c" values, "c" will be the last area


    if (!rulesToInsert[lastArea]) {
      rulesToInsert[lastArea] = {};
    }

    var lastRuleIsSet = false; // walk through every grid-template rule data

    for (var _iterator2 = _createForOfIteratorHelperLoose$5(data.rules), _step2; !(_step2 = _iterator2()).done;) {
      var rule = _step2.value;
      var area = rule.areas[value];
      var hasDuplicateName = rule.duplicateAreaNames.includes(value); // if we can't find the area name, update lastRule and continue

      if (!area) {
        var lastRuleIndex = css.index(rulesToInsert[lastArea].lastRule);

        if (gridAreaRuleIndex > lastRuleIndex) {
          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
        }

        continue;
      } // for grid-templates inside media rule we need to create empty
      // array to push prefixed grid-area rules later


      if (rule.params && !rulesToInsert[lastArea][rule.params]) {
        rulesToInsert[lastArea][rule.params] = [];
      }

      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {
        // grid-template has no duplicates and not inside media rule
        getMSDecls(area, false, false).reverse().forEach(function (i) {
          return gridAreaRule.prepend(Object.assign(i, {
            raws: {
              between: gridArea.raws.between
            }
          }));
        });
        rulesToInsert[lastArea].lastRule = gridAreaRule;
        lastRuleIsSet = true;
      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {
        (function () {
          // grid-template has duplicates and not inside media rule
          var cloned = gridAreaRule.clone();
          cloned.removeAll();
          getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(function (i) {
            return cloned.prepend(Object.assign(i, {
              raws: {
                between: gridArea.raws.between
              }
            }));
          });
          cloned.selectors = changeDuplicateAreaSelectors(cloned.selectors, rule.selectors);

          if (rulesToInsert[lastArea].lastRule) {
            rulesToInsert[lastArea].lastRule.after(cloned);
          }

          rulesToInsert[lastArea].lastRule = cloned;
          lastRuleIsSet = true;
        })();
      } else if (rule.hasDuplicates && !rule.params && selectorIsComplex && gridAreaRule.selector.includes(rule.selectors[0])) {
        // grid-template has duplicates and not inside media rule
        // and the selector is complex
        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, function (d) {
          return d.remove();
        });
        getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(function (i) {
          return gridAreaRule.prepend(Object.assign(i, {
            raws: {
              between: gridArea.raws.between
            }
          }));
        });
      } else if (rule.params) {
        (function () {
          // grid-template is inside media rule
          // if we're inside media rule, we need to store prefixed rules
          // inside rulesToInsert object to be able to preserve the order of media
          // rules and merge them easily
          var cloned = gridAreaRule.clone();
          cloned.removeAll();
          getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(function (i) {
            return cloned.prepend(Object.assign(i, {
              raws: {
                between: gridArea.raws.between
              }
            }));
          });

          if (rule.hasDuplicates && hasDuplicateName) {
            cloned.selectors = changeDuplicateAreaSelectors(cloned.selectors, rule.selectors);
          }

          cloned.raws = rule.node.raws;

          if (css.index(rule.node.parent) > gridAreaRuleIndex) {
            // append the prefixed rules right inside media rule
            // with grid-template
            rule.node.parent.append(cloned);
          } else {
            // store the rule to insert later
            rulesToInsert[lastArea][rule.params].push(cloned);
          } // set new rule as last rule ONLY if we didn't set lastRule for
          // this grid-area before


          if (!lastRuleIsSet) {
            rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
          }
        })();
      }
    }

    return undefined;
  }); // append stored rules inside the media rules

  Object.keys(rulesToInsert).forEach(function (area) {
    var data = rulesToInsert[area];
    var lastRule = data.lastRule;
    Object.keys(data).reverse().filter(function (p) {
      return p !== 'lastRule';
    }).forEach(function (params) {
      if (data[params].length > 0 && lastRule) {
        lastRule.after({
          name: 'media',
          params: params
        });
        lastRule.next().append(data[params]);
      }
    });
  });
  return undefined;
}
/**
 * Warn user if grid area identifiers are not found
 * @param  {Object} areas
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */


function warnMissedAreas(areas, decl, result) {
  var missed = Object.keys(areas);
  decl.root().walkDecls('grid-area', function (gridArea) {
    missed = missed.filter(function (e) {
      return e !== gridArea.value;
    });
  });

  if (missed.length > 0) {
    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '));
  }

  return undefined;
}
/**
 * compare selectors with grid-area rule and grid-template rule
 * show warning if grid-template selector is not found
 * (this function used for grid-area rule)
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */


function warnTemplateSelectorNotFound(decl, result) {
  var rule = decl.parent;
  var root = decl.root();
  var duplicatesFound = false; // slice selector array. Remove the last part (for comparison)

  var slicedSelectorArr = list$2.space(rule.selector).filter(function (str) {
    return str !== '>';
  }).slice(0, -1); // we need to compare only if selector is complex.
  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex

  if (slicedSelectorArr.length > 0) {
    var gridTemplateFound = false;
    var foundAreaSelector = null;
    root.walkDecls(/grid-template(-areas)?$/, function (d) {
      var parent = d.parent;
      var templateSelectors = parent.selectors;

      var _parseTemplate2 = parseTemplate({
        decl: d,
        gap: getGridGap(d)
      }),
          areas = _parseTemplate2.areas;

      var hasArea = areas[decl.value]; // find the the matching selectors

      for (var _iterator3 = _createForOfIteratorHelperLoose$5(templateSelectors), _step3; !(_step3 = _iterator3()).done;) {
        var tplSelector = _step3.value;

        if (gridTemplateFound) {
          break;
        }

        var tplSelectorArr = list$2.space(tplSelector).filter(function (str) {
          return str !== '>';
        });
        gridTemplateFound = tplSelectorArr.every(function (item, idx) {
          return item === slicedSelectorArr[idx];
        });
      }

      if (gridTemplateFound || !hasArea) {
        return true;
      }

      if (!foundAreaSelector) {
        foundAreaSelector = parent.selector;
      } // if we found the duplicate area with different selector


      if (foundAreaSelector && foundAreaSelector !== parent.selector) {
        duplicatesFound = true;
      }

      return undefined;
    }); // warn user if we didn't find template

    if (!gridTemplateFound && duplicatesFound) {
      decl.warn(result, 'Autoprefixer cannot find a grid-template ' + ("containing the duplicate grid-area \"" + decl.value + "\" ") + ("with full selector matching: " + slicedSelectorArr.join(' ')));
    }
  }
}
/**
 * warn user if both grid-area and grid-(row|column)
 * declarations are present in the same rule
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */


function warnIfGridRowColumnExists(decl, result) {
  var rule = decl.parent;
  var decls = [];
  rule.walkDecls(/^grid-(row|column)/, function (d) {
    if (!d.prop.endsWith('-end') && !d.value.startsWith('span')) {
      decls.push(d);
    }
  });

  if (decls.length > 0) {
    decls.forEach(function (d) {
      d.warn(result, 'You already have a grid-area declaration present in the rule. ' + ("You should use either grid-area or " + d.prop + ", not both"));
    });
  }

  return undefined;
} // Gap utils


function getGridGap(decl) {
  var gap = {}; // try to find gap

  var testGap = /^(grid-)?((row|column)-)?gap$/;
  decl.parent.walkDecls(testGap, function (_ref8) {
    var prop = _ref8.prop,
        value = _ref8.value;

    if (/^(grid-)?gap$/.test(prop)) {
      var _parser$nodes = lib(value).nodes,
          row = _parser$nodes[0],
          column = _parser$nodes[2];
      gap.row = row && lib.stringify(row);
      gap.column = column ? lib.stringify(column) : gap.row;
    }

    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value;
    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value;
  });
  return gap;
}
/**
 * parse media parameters (for example 'min-width: 500px')
 * @param  {String} params parameter to parse
 * @return {}
 */


function parseMediaParams(params) {
  if (!params) {
    return false;
  }

  var parsed = lib(params);
  var prop;
  var value;
  parsed.walk(function (node) {
    if (node.type === 'word' && /min|max/g.test(node.value)) {
      prop = node.value;
    } else if (node.value.includes('px')) {
      value = parseInt(node.value.replace(/\D/g, ''));
    }
  });
  return [prop, value];
}
/**
 * Compare the selectors and decide if we
 * need to inherit gap from compared selector or not.
 * @type {String} selA
 * @type {String} selB
 * @return {Boolean}
 */


function shouldInheritGap(selA, selB) {
  var result; // get arrays of selector split in 3-deep array

  var splitSelectorArrA = splitSelector(selA);
  var splitSelectorArrB = splitSelector(selB);

  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {
    // abort if selectorA has lower descendant specificity then selectorB
    // (e.g '.grid' and '.hello .world .grid')
    return false;
  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {
    // if selectorA has higher descendant specificity then selectorB
    // (e.g '.foo .bar .grid' and '.grid')
    var idx = splitSelectorArrA[0].reduce(function (res, _ref9, index) {
      var item = _ref9[0];
      var firstSelectorPart = splitSelectorArrB[0][0][0];

      if (item === firstSelectorPart) {
        return index;
      }

      return false;
    }, false);

    if (idx) {
      result = splitSelectorArrB[0].every(function (arr, index) {
        return arr.every(function (part, innerIndex) {
          return (// because selectorA has more space elements, we need to slice
            // selectorA array by 'idx' number to compare them
            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part
          );
        });
      });
    }
  } else {
    // if selectorA has the same descendant specificity as selectorB
    // this condition covers cases such as: '.grid.foo.bar' and '.grid'
    result = splitSelectorArrB.some(function (byCommaArr) {
      return byCommaArr.every(function (bySpaceArr, index) {
        return bySpaceArr.every(function (part, innerIndex) {
          return splitSelectorArrA[0][index][innerIndex] === part;
        });
      });
    });
  }

  return result;
}
/**
 * inherit grid gap values from the closest rule above
 * with the same selector
 * @param  {Declaration} decl
 * @param  {Object} gap gap values
 * @return {Object | Boolean} return gap values or false (if not found)
 */


function inheritGridGap(decl, gap) {
  var rule = decl.parent;
  var mediaRule = getParentMedia(rule);
  var root = rule.root(); // get an array of selector split in 3-deep array

  var splitSelectorArr = splitSelector(rule.selector); // abort if the rule already has gaps

  if (Object.keys(gap).length > 0) {
    return false;
  } // e.g ['min-width']


  var _parseMediaParams = parseMediaParams(mediaRule.params),
      prop = _parseMediaParams[0];

  var lastBySpace = splitSelectorArr[0]; // get escaped value from the selector
  // if we have '.grid-2.foo.bar' selector, will be '\.grid\-2'

  var escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0]);
  var regexp = new RegExp("(" + escaped + "$)|(" + escaped + "[,.])"); // find the closest rule with the same selector

  var closestRuleGap;
  root.walkRules(regexp, function (r) {
    var gridGap; // abort if are checking the same rule

    if (rule.toString() === r.toString()) {
      return false;
    } // find grid-gap values


    r.walkDecls('grid-gap', function (d) {
      return gridGap = getGridGap(d);
    }); // skip rule without gaps

    if (!gridGap || Object.keys(gridGap).length === 0) {
      return true;
    } // skip rules that should not be inherited from


    if (!shouldInheritGap(rule.selector, r.selector)) {
      return true;
    }

    var media = getParentMedia(r);

    if (media) {
      // if we are inside media, we need to check that media props match
      // e.g ('min-width' === 'min-width')
      var propToCompare = parseMediaParams(media.params)[0];

      if (propToCompare === prop) {
        closestRuleGap = gridGap;
        return true;
      }
    } else {
      closestRuleGap = gridGap;
      return true;
    }

    return undefined;
  }); // if we find the closest gap object

  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {
    return closestRuleGap;
  }

  return false;
}

function warnGridGap(_ref10) {
  var gap = _ref10.gap,
      hasColumns = _ref10.hasColumns,
      decl = _ref10.decl,
      result = _ref10.result;
  var hasBothGaps = gap.row && gap.column;

  if (!hasColumns && (hasBothGaps || gap.column && !gap.row)) {
    delete gap.column;
    decl.warn(result, 'Can not implement grid-gap without grid-template-columns');
  }
}
/**
 * normalize the grid-template-rows/columns values
 * @param  {String} str grid-template-rows/columns value
 * @return {Array} normalized array with values
 * @example
 * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')
 * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']
 */


function normalizeRowColumn(str) {
  var normalized = lib(str).nodes.reduce(function (result, node) {
    if (node.type === 'function' && node.value === 'repeat') {
      var key = 'count';

      var _node$nodes$reduce = node.nodes.reduce(function (acc, n) {
        if (n.type === 'word' && key === 'count') {
          acc[0] = Math.abs(parseInt(n.value));
          return acc;
        }

        if (n.type === 'div' && n.value === ',') {
          key = 'value';
          return acc;
        }

        if (key === 'value') {
          acc[1] += lib.stringify(n);
        }

        return acc;
      }, [0, '']),
          count = _node$nodes$reduce[0],
          value = _node$nodes$reduce[1];

      if (count) {
        for (var i = 0; i < count; i++) {
          result.push(value);
        }
      }

      return result;
    }

    if (node.type === 'space') {
      return result;
    }

    return result.concat(lib.stringify(node));
  }, []);
  return normalized;
}
/**
 * Autoplace grid items
 * @param {Declaration} decl
 * @param {Result} result
 * @param {Object} gap gap values
 * @param {String} autoflowValue grid-auto-flow value
 * @return {void}
 * @see https://github.com/postcss/autoprefixer/issues/1148
 */


function autoplaceGridItems(decl, result, gap, autoflowValue) {
  if (autoflowValue === void 0) {
    autoflowValue = 'row';
  }

  var parent = decl.parent;
  var rowDecl = parent.nodes.find(function (i) {
    return i.prop === 'grid-template-rows';
  });
  var rows = normalizeRowColumn(rowDecl.value);
  var columns = normalizeRowColumn(decl.value); // Build array of area names with dummy values. If we have 3 columns and
  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']

  var filledRows = rows.map(function (_, rowIndex) {
    return Array.from({
      length: columns.length
    }, function (v, k) {
      return k + rowIndex * columns.length + 1;
    }).join(' ');
  });
  var areas = parseGridAreas({
    rows: filledRows,
    gap: gap
  });
  var keys = Object.keys(areas);
  var items = keys.map(function (i) {
    return areas[i];
  }); // Change the order of cells if grid-auto-flow value is 'column'

  if (autoflowValue.includes('column')) {
    items = items.sort(function (a, b) {
      return a.column.start - b.column.start;
    });
  } // Insert new rules


  items.reverse().forEach(function (item, index) {
    var column = item.column,
        row = item.row;
    var nodeSelector = parent.selectors.map(function (sel) {
      return sel + (" > *:nth-child(" + (keys.length - index) + ")");
    }).join(', '); // create new rule

    var node = parent.clone().removeAll(); // change rule selector

    node.selector = nodeSelector; // insert prefixed row/column values

    node.append({
      prop: '-ms-grid-row',
      value: row.start
    });
    node.append({
      prop: '-ms-grid-column',
      value: column.start
    }); // insert rule

    parent.after(node);
  });
  return undefined;
}

var gridUtils = {
  parse: parse$2,
  translate: translate,
  parseTemplate: parseTemplate,
  parseGridAreas: parseGridAreas,
  warnMissedAreas: warnMissedAreas,
  insertAreas: insertAreas,
  insertDecl: insertDecl,
  prefixTrackProp: prefixTrackProp,
  prefixTrackValue: prefixTrackValue,
  getGridGap: getGridGap,
  warnGridGap: warnGridGap,
  warnTemplateSelectorNotFound: warnTemplateSelectorNotFound,
  warnIfGridRowColumnExists: warnIfGridRowColumnExists,
  inheritGridGap: inheritGridGap,
  autoplaceGridItems: autoplaceGridItems
};

function _createForOfIteratorHelperLoose$6(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$6(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$6(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen); }

function _arrayLikeToArray$6(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }





var insertAreas$1 = gridUtils.insertAreas;

var OLD_LINEAR = /(^|[^-])linear-gradient\(\s*(top|left|right|bottom)/i;
var OLD_RADIAL = /(^|[^-])radial-gradient\(\s*\d+(\w*|%)\s+\d+(\w*|%)\s*,/i;
var IGNORE_NEXT = /(!\s*)?autoprefixer:\s*ignore\s+next/i;
var GRID_REGEX = /(!\s*)?autoprefixer\s*grid:\s*(on|off|(no-)?autoplace)/i;
var SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];

function hasGridTemplate(decl) {
  return decl.parent.some(function (i) {
    return i.prop === 'grid-template' || i.prop === 'grid-template-areas';
  });
}

function hasRowsAndColumns(decl) {
  var hasRows = decl.parent.some(function (i) {
    return i.prop === 'grid-template-rows';
  });
  var hasColumns = decl.parent.some(function (i) {
    return i.prop === 'grid-template-columns';
  });
  return hasRows && hasColumns;
}

var Processor = /*#__PURE__*/function () {
  function Processor(prefixes) {
    this.prefixes = prefixes;
  }
  /**
   * Add necessary prefixes
   */


  var _proto = Processor.prototype;

  _proto.add = function add(css, result) {
    var _this = this;

    // At-rules
    var resolution = this.prefixes.add['@resolution'];
    var keyframes = this.prefixes.add['@keyframes'];
    var viewport = this.prefixes.add['@viewport'];
    var supports = this.prefixes.add['@supports'];
    css.walkAtRules(function (rule) {
      if (rule.name === 'keyframes') {
        if (!_this.disabled(rule, result)) {
          return keyframes && keyframes.process(rule);
        }
      } else if (rule.name === 'viewport') {
        if (!_this.disabled(rule, result)) {
          return viewport && viewport.process(rule);
        }
      } else if (rule.name === 'supports') {
        if (_this.prefixes.options.supports !== false && !_this.disabled(rule, result)) {
          return supports.process(rule);
        }
      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {
        if (!_this.disabled(rule, result)) {
          return resolution && resolution.process(rule);
        }
      }

      return undefined;
    }); // Selectors

    css.walkRules(function (rule) {
      if (_this.disabled(rule, result)) return undefined;
      return _this.prefixes.add.selectors.map(function (selector) {
        return selector.process(rule, result);
      });
    });

    function insideGrid(decl) {
      return decl.parent.nodes.some(function (node) {
        if (node.type !== 'decl') return false;
        var displayGrid = node.prop === 'display' && /(inline-)?grid/.test(node.value);
        var gridTemplate = node.prop.startsWith('grid-template');
        var gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);
        return displayGrid || gridTemplate || gridGap;
      });
    }

    function insideFlex(decl) {
      return decl.parent.some(function (node) {
        return node.prop === 'display' && /(inline-)?flex/.test(node.value);
      });
    }

    var gridPrefixes = this.gridStatus(css, result) && this.prefixes.add['grid-area'] && this.prefixes.add['grid-area'].prefixes;
    css.walkDecls(function (decl) {
      if (_this.disabledDecl(decl, result)) return undefined;
      var parent = decl.parent;
      var prop = decl.prop;
      var value = decl.value;

      if (prop === 'grid-row-span') {
        result.warn('grid-row-span is not part of final Grid Layout. Use grid-row.', {
          node: decl
        });
        return undefined;
      } else if (prop === 'grid-column-span') {
        result.warn('grid-column-span is not part of final Grid Layout. Use grid-column.', {
          node: decl
        });
        return undefined;
      } else if (prop === 'display' && value === 'box') {
        result.warn('You should write display: flex by final spec ' + 'instead of display: box', {
          node: decl
        });
        return undefined;
      } else if (prop === 'text-emphasis-position') {
        if (value === 'under' || value === 'over') {
          result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {
            node: decl
          });
        }
      } else if (/^(align|justify|place)-(items|content)$/.test(prop) && insideFlex(decl)) {
        if (value === 'start' || value === 'end') {
          result.warn(value + " value has mixed support, consider using " + ("flex-" + value + " instead"), {
            node: decl
          });
        }
      } else if (prop === 'text-decoration-skip' && value === 'ink') {
        result.warn('Replace text-decoration-skip: ink to ' + 'text-decoration-skip-ink: auto, because spec had been changed', {
          node: decl
        });
      } else {
        if (gridPrefixes && _this.gridStatus(decl, result)) {
          if (decl.value === 'subgrid') {
            result.warn('IE does not support subgrid', {
              node: decl
            });
          }

          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {
            var fixed = prop.replace('-items', '-self');
            result.warn("IE does not support " + prop + " on grid containers. " + ("Try using " + fixed + " on child elements instead: ") + (decl.parent.selector + " > * { " + fixed + ": " + decl.value + " }"), {
              node: decl
            });
          } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl)) {
            result.warn("IE does not support " + decl.prop + " on grid containers", {
              node: decl
            });
          } else if (prop === 'display' && decl.value === 'contents') {
            result.warn('Please do not use display: contents; ' + 'if you have grid setting enabled', {
              node: decl
            });
            return undefined;
          } else if (decl.prop === 'grid-gap') {
            var status = _this.gridStatus(decl, result);

            if (status === 'autoplace' && !hasRowsAndColumns(decl) && !hasGridTemplate(decl)) {
              result.warn('grid-gap only works if grid-template(-areas) is being ' + 'used or both rows and columns have been declared ' + 'and cells have not been manually ' + 'placed inside the explicit grid', {
                node: decl
              });
            } else if ((status === true || status === 'no-autoplace') && !hasGridTemplate(decl)) {
              result.warn('grid-gap only works if grid-template(-areas) is being used', {
                node: decl
              });
            }
          } else if (prop === 'grid-auto-columns') {
            result.warn('grid-auto-columns is not supported by IE', {
              node: decl
            });
            return undefined;
          } else if (prop === 'grid-auto-rows') {
            result.warn('grid-auto-rows is not supported by IE', {
              node: decl
            });
            return undefined;
          } else if (prop === 'grid-auto-flow') {
            var hasRows = parent.some(function (i) {
              return i.prop === 'grid-template-rows';
            });
            var hasCols = parent.some(function (i) {
              return i.prop === 'grid-template-columns';
            });

            if (hasGridTemplate(decl)) {
              result.warn('grid-auto-flow is not supported by IE', {
                node: decl
              });
            } else if (value.includes('dense')) {
              result.warn('grid-auto-flow: dense is not supported by IE', {
                node: decl
              });
            } else if (!hasRows && !hasCols) {
              result.warn('grid-auto-flow works only if grid-template-rows and ' + 'grid-template-columns are present in the same rule', {
                node: decl
              });
            }

            return undefined;
          } else if (value.includes('auto-fit')) {
            result.warn('auto-fit value is not supported by IE', {
              node: decl,
              word: 'auto-fit'
            });
            return undefined;
          } else if (value.includes('auto-fill')) {
            result.warn('auto-fill value is not supported by IE', {
              node: decl,
              word: 'auto-fill'
            });
            return undefined;
          } else if (prop.startsWith('grid-template') && value.includes('[')) {
            result.warn('Autoprefixer currently does not support line names. ' + 'Try using grid-template-areas instead.', {
              node: decl,
              word: '['
            });
          }
        }

        if (value.includes('radial-gradient')) {
          if (OLD_RADIAL.test(decl.value)) {
            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `closest-side at 0 0` ' + 'instead of `0 0, closest-side`.', {
              node: decl
            });
          } else {
            var ast = lib(value);

            for (var _iterator = _createForOfIteratorHelperLoose$6(ast.nodes), _step; !(_step = _iterator()).done;) {
              var i = _step.value;

              if (i.type === 'function' && i.value === 'radial-gradient') {
                for (var _iterator2 = _createForOfIteratorHelperLoose$6(i.nodes), _step2; !(_step2 = _iterator2()).done;) {
                  var word = _step2.value;

                  if (word.type === 'word') {
                    if (word.value === 'cover') {
                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `cover` to `farthest-corner`.', {
                        node: decl
                      });
                    } else if (word.value === 'contain') {
                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `contain` to `closest-side`.', {
                        node: decl
                      });
                    }
                  }
                }
              }
            }
          }
        }

        if (value.includes('linear-gradient')) {
          if (OLD_LINEAR.test(value)) {
            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {
              node: decl
            });
          }
        }
      }

      if (SIZES.includes(decl.prop)) {
        if (!decl.value.includes('-fill-available')) {
          if (decl.value.includes('fill-available')) {
            result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {
              node: decl
            });
          } else if (decl.value.includes('fill')) {
            var _ast = lib(value);

            if (_ast.nodes.some(function (i) {
              return i.type === 'word' && i.value === 'fill';
            })) {
              result.warn('Replace fill to stretch, because spec had been changed', {
                node: decl
              });
            }
          }
        }
      }

      var prefixer;

      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        // Transition
        return _this.prefixes.transition.add(decl, result);
      } else if (decl.prop === 'align-self') {
        // align-self flexbox or grid
        var display = _this.displayType(decl);

        if (display !== 'grid' && _this.prefixes.options.flexbox !== false) {
          prefixer = _this.prefixes.add['align-self'];

          if (prefixer && prefixer.prefixes) {
            prefixer.process(decl);
          }
        }

        if (_this.gridStatus(decl, result) !== false) {
          prefixer = _this.prefixes.add['grid-row-align'];

          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result);
          }
        }
      } else if (decl.prop === 'justify-self') {
        // justify-self flexbox or grid
        if (_this.gridStatus(decl, result) !== false) {
          prefixer = _this.prefixes.add['grid-column-align'];

          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result);
          }
        }
      } else if (decl.prop === 'place-self') {
        prefixer = _this.prefixes.add['place-self'];

        if (prefixer && prefixer.prefixes && _this.gridStatus(decl, result) !== false) {
          return prefixer.process(decl, result);
        }
      } else {
        // Properties
        prefixer = _this.prefixes.add[decl.prop];

        if (prefixer && prefixer.prefixes) {
          return prefixer.process(decl, result);
        }
      }

      return undefined;
    }); // Insert grid-area prefixes. We need to be able to store the different
    // rules as a data and hack API is not enough for this

    if (this.gridStatus(css, result)) {
      insertAreas$1(css, this.disabled);
    } // Values


    return css.walkDecls(function (decl) {
      if (_this.disabledValue(decl, result)) return;

      var unprefixed = _this.prefixes.unprefixed(decl.prop);

      var list = _this.prefixes.values('add', unprefixed);

      if (Array.isArray(list)) {
        for (var _iterator3 = _createForOfIteratorHelperLoose$6(list), _step3; !(_step3 = _iterator3()).done;) {
          var value$1 = _step3.value;
          if (value$1.process) value$1.process(decl, result);
        }
      }

      value.save(_this.prefixes, decl);
    });
  }
  /**
   * Remove unnecessary pefixes
   */
  ;

  _proto.remove = function remove(css, result) {
    var _this2 = this;

    // At-rules
    var resolution = this.prefixes.remove['@resolution'];
    css.walkAtRules(function (rule, i) {
      if (_this2.prefixes.remove["@" + rule.name]) {
        if (!_this2.disabled(rule, result)) {
          rule.parent.removeChild(i);
        }
      } else if (rule.name === 'media' && rule.params.includes('-resolution') && resolution) {
        resolution.clean(rule);
      }
    }); // Selectors

    var _loop = function _loop() {
      var checker = _step4.value;
      css.walkRules(function (rule, i) {
        if (checker.check(rule)) {
          if (!_this2.disabled(rule, result)) {
            rule.parent.removeChild(i);
          }
        }
      });
    };

    for (var _iterator4 = _createForOfIteratorHelperLoose$6(this.prefixes.remove.selectors), _step4; !(_step4 = _iterator4()).done;) {
      _loop();
    }

    return css.walkDecls(function (decl, i) {
      if (_this2.disabled(decl, result)) return;
      var rule = decl.parent;

      var unprefixed = _this2.prefixes.unprefixed(decl.prop); // Transition


      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        _this2.prefixes.transition.remove(decl);
      } // Properties


      if (_this2.prefixes.remove[decl.prop] && _this2.prefixes.remove[decl.prop].remove) {
        var notHack = _this2.prefixes.group(decl).down(function (other) {
          return _this2.prefixes.normalize(other.prop) === unprefixed;
        });

        if (unprefixed === 'flex-flow') {
          notHack = true;
        }

        if (decl.prop === '-webkit-box-orient') {
          var hacks = {
            'flex-direction': true,
            'flex-flow': true
          };
          if (!decl.parent.some(function (j) {
            return hacks[j.prop];
          })) return;
        }

        if (notHack && !_this2.withHackValue(decl)) {
          if (decl.raw('before').includes('\n')) {
            _this2.reduceSpaces(decl);
          }

          rule.removeChild(i);
          return;
        }
      } // Values


      for (var _iterator5 = _createForOfIteratorHelperLoose$6(_this2.prefixes.values('remove', unprefixed)), _step5; !(_step5 = _iterator5()).done;) {
        var checker = _step5.value;
        if (!checker.check) continue;
        if (!checker.check(decl.value)) continue;
        unprefixed = checker.unprefixed;

        var _notHack = _this2.prefixes.group(decl).down(function (other) {
          return other.value.includes(unprefixed);
        });

        if (_notHack) {
          rule.removeChild(i);
          return;
        }
      }
    });
  }
  /**
   * Some rare old values, which is not in standard
   */
  ;

  _proto.withHackValue = function withHackValue(decl) {
    return decl.prop === '-webkit-background-clip' && decl.value === 'text';
  }
  /**
   * Check for grid/flexbox options.
   */
  ;

  _proto.disabledValue = function disabledValue(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.includes('grid')) {
        return true;
      }
    }

    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.includes('flex')) {
        return true;
      }
    }

    return this.disabled(node, result);
  }
  /**
   * Check for grid/flexbox options.
   */
  ;

  _proto.disabledDecl = function disabledDecl(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop.includes('grid') || node.prop === 'justify-items') {
        return true;
      }
    }

    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      var other = ['order', 'justify-content', 'align-items', 'align-content'];

      if (node.prop.includes('flex') || other.includes(node.prop)) {
        return true;
      }
    }

    return this.disabled(node, result);
  }
  /**
   * Check for control comment and global options
   */
  ;

  _proto.disabled = function disabled(node, result) {
    if (!node) return false;

    if (node._autoprefixerDisabled !== undefined) {
      return node._autoprefixerDisabled;
    }

    if (node.parent) {
      var p = node.prev();

      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {
        node._autoprefixerDisabled = true;
        node._autoprefixerSelfDisabled = true;
        return true;
      }
    }

    var value = null;

    if (node.nodes) {
      var status;
      node.each(function (i) {
        if (i.type !== 'comment') return;

        if (/(!\s*)?autoprefixer:\s*(off|on)/i.test(i.text)) {
          if (typeof status !== 'undefined') {
            result.warn('Second Autoprefixer control comment ' + 'was ignored. Autoprefixer applies control ' + 'comment to whole block, not to next rules.', {
              node: i
            });
          } else {
            status = /on/i.test(i.text);
          }
        }
      });

      if (status !== undefined) {
        value = !status;
      }
    }

    if (!node.nodes || value === null) {
      if (node.parent) {
        var isParentDisabled = this.disabled(node.parent, result);

        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false;
        } else {
          value = isParentDisabled;
        }
      } else {
        value = false;
      }
    }

    node._autoprefixerDisabled = value;
    return value;
  }
  /**
   * Normalize spaces in cascade declaration group
   */
  ;

  _proto.reduceSpaces = function reduceSpaces(decl) {
    var stop = false;
    this.prefixes.group(decl).up(function () {
      stop = true;
      return true;
    });

    if (stop) {
      return;
    }

    var parts = decl.raw('before').split('\n');
    var prevMin = parts[parts.length - 1].length;
    var diff = false;
    this.prefixes.group(decl).down(function (other) {
      parts = other.raw('before').split('\n');
      var last = parts.length - 1;

      if (parts[last].length > prevMin) {
        if (diff === false) {
          diff = parts[last].length - prevMin;
        }

        parts[last] = parts[last].slice(0, -diff);
        other.raws.before = parts.join('\n');
      }
    });
  }
  /**
   * Is it flebox or grid rule
   */
  ;

  _proto.displayType = function displayType(decl) {
    for (var _iterator6 = _createForOfIteratorHelperLoose$6(decl.parent.nodes), _step6; !(_step6 = _iterator6()).done;) {
      var i = _step6.value;

      if (i.prop !== 'display') {
        continue;
      }

      if (i.value.includes('flex')) {
        return 'flex';
      }

      if (i.value.includes('grid')) {
        return 'grid';
      }
    }

    return false;
  }
  /**
   * Set grid option via control comment
   */
  ;

  _proto.gridStatus = function gridStatus(node, result) {
    if (!node) return false;

    if (node._autoprefixerGridStatus !== undefined) {
      return node._autoprefixerGridStatus;
    }

    var value = null;

    if (node.nodes) {
      var status;
      node.each(function (i) {
        if (i.type !== 'comment') return;

        if (GRID_REGEX.test(i.text)) {
          var hasAutoplace = /:\s*autoplace/i.test(i.text);
          var noAutoplace = /no-autoplace/i.test(i.text);

          if (typeof status !== 'undefined') {
            result.warn('Second Autoprefixer grid control comment was ' + 'ignored. Autoprefixer applies control comments to the whole ' + 'block, not to the next rules.', {
              node: i
            });
          } else if (hasAutoplace) {
            status = 'autoplace';
          } else if (noAutoplace) {
            status = true;
          } else {
            status = /on/i.test(i.text);
          }
        }
      });

      if (status !== undefined) {
        value = status;
      }
    }

    if (node.type === 'atrule' && node.name === 'supports') {
      var params = node.params;

      if (params.includes('grid') && params.includes('auto')) {
        value = false;
      }
    }

    if (!node.nodes || value === null) {
      if (node.parent) {
        var isParentGrid = this.gridStatus(node.parent, result);

        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false;
        } else {
          value = isParentGrid;
        }
      } else if (typeof this.prefixes.options.grid !== 'undefined') {
        value = this.prefixes.options.grid;
      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {
        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {
          value = 'autoplace';
        } else {
          value = true;
        }
      } else {
        value = false;
      }
    }

    node._autoprefixerGridStatus = value;
    return value;
  };

  return Processor;
}();

var processor$1 = Processor;

function _createForOfIteratorHelperLoose$7(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$7(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$7(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen); }

function _arrayLikeToArray$7(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function last(array) {
  return array[array.length - 1];
}

var brackets = {
  /**
     * Parse string to nodes tree
     */
  parse: function parse(str) {
    var current = [''];
    var stack = [current];

    for (var _iterator = _createForOfIteratorHelperLoose$7(str), _step; !(_step = _iterator()).done;) {
      var sym = _step.value;

      if (sym === '(') {
        current = [''];
        last(stack).push(current);
        stack.push(current);
        continue;
      }

      if (sym === ')') {
        stack.pop();
        current = last(stack);
        current.push('');
        continue;
      }

      current[current.length - 1] += sym;
    }

    return stack[0];
  },

  /**
     * Generate output string by nodes tree
     */
  stringify: function stringify(ast) {
    var result = '';

    for (var _iterator2 = _createForOfIteratorHelperLoose$7(ast), _step2; !(_step2 = _iterator2()).done;) {
      var i = _step2.value;

      if (typeof i === 'object') {
        result += "(" + brackets.stringify(i) + ")";
        continue;
      }

      result += i;
    }

    return result;
  }
};
var brackets_1 = brackets;

function _createForOfIteratorHelperLoose$8(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$8(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$8(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$8(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen); }

function _arrayLikeToArray$8(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var data = unpacker.feature(cssFeaturequeries);









var supported$1 = [];

for (var browser in data.stats) {
  var versions$1 = data.stats[browser];

  for (var version in versions$1) {
    var support = versions$1[version];

    if (/y/.test(support)) {
      supported$1.push(browser + ' ' + version);
    }
  }
}

var Supports = /*#__PURE__*/function () {
  function Supports(Prefixes, all) {
    this.Prefixes = Prefixes;
    this.all = all;
  }
  /**
     * Return prefixer only with @supports supported browsers
     */


  var _proto = Supports.prototype;

  _proto.prefixer = function prefixer() {
    if (this.prefixerCache) {
      return this.prefixerCache;
    }

    var filtered = this.all.browsers.selected.filter(function (i) {
      return supported$1.includes(i);
    });
    var browsers = new browsers$1(this.all.browsers.data, filtered, this.all.options);
    this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);
    return this.prefixerCache;
  }
  /**
     * Parse string into declaration property and value
     */
  ;

  _proto.parse = function parse(str) {
    var parts = str.split(':');
    var prop = parts[0];
    var value = parts[1];
    if (!value) value = '';
    return [prop.trim(), value.trim()];
  }
  /**
     * Create virtual rule to process it by prefixer
     */
  ;

  _proto.virtual = function virtual(str) {
    var _this$parse = this.parse(str),
        prop = _this$parse[0],
        value = _this$parse[1];

    var rule = postcss_1.parse('a{}').first;
    rule.append({
      prop: prop,
      value: value,
      raws: {
        before: ''
      }
    });
    return rule;
  }
  /**
     * Return array of Declaration with all necessary prefixes
     */
  ;

  _proto.prefixed = function prefixed(str) {
    var rule = this.virtual(str);

    if (this.disabled(rule.first)) {
      return rule.nodes;
    }

    var result = {
      warn: function warn() {
        return null;
      }
    };
    var prefixer = this.prefixer().add[rule.first.prop];
    prefixer && prefixer.process && prefixer.process(rule.first, result);

    for (var _iterator = _createForOfIteratorHelperLoose$8(rule.nodes), _step; !(_step = _iterator()).done;) {
      var decl = _step.value;

      for (var _iterator2 = _createForOfIteratorHelperLoose$8(this.prefixer().values('add', rule.first.prop)), _step2; !(_step2 = _iterator2()).done;) {
        var value$1 = _step2.value;
        value$1.process(decl);
      }

      value.save(this.all, decl);
    }

    return rule.nodes;
  }
  /**
     * Return true if brackets node is "not" word
     */
  ;

  _proto.isNot = function isNot(node) {
    return typeof node === 'string' && /not\s*/i.test(node);
  }
  /**
     * Return true if brackets node is "or" word
     */
  ;

  _proto.isOr = function isOr(node) {
    return typeof node === 'string' && /\s*or\s*/i.test(node);
  }
  /**
     * Return true if brackets node is (prop: value)
     */
  ;

  _proto.isProp = function isProp(node) {
    return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';
  }
  /**
     * Return true if prefixed property has no unprefixed
     */
  ;

  _proto.isHack = function isHack(all, unprefixed) {
    var check = new RegExp("(\\(|\\s)" + utils.escapeRegexp(unprefixed) + ":");
    return !check.test(all);
  }
  /**
     * Return true if we need to remove node
     */
  ;

  _proto.toRemove = function toRemove(str, all) {
    var _this$parse2 = this.parse(str),
        prop = _this$parse2[0],
        value = _this$parse2[1];

    var unprefixed = this.all.unprefixed(prop);
    var cleaner = this.all.cleaner();

    if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {
      return true;
    }

    for (var _iterator3 = _createForOfIteratorHelperLoose$8(cleaner.values('remove', unprefixed)), _step3; !(_step3 = _iterator3()).done;) {
      var checker = _step3.value;

      if (checker.check(value)) {
        return true;
      }
    }

    return false;
  }
  /**
     * Remove all unnecessary prefixes
     */
  ;

  _proto.remove = function remove(nodes, all) {
    var i = 0;

    while (i < nodes.length) {
      if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {
        if (this.toRemove(nodes[i][0], all)) {
          nodes.splice(i, 2);
          continue;
        }

        i += 2;
        continue;
      }

      if (typeof nodes[i] === 'object') {
        nodes[i] = this.remove(nodes[i], all);
      }

      i += 1;
    }

    return nodes;
  }
  /**
     * Clean brackets with one child
     */
  ;

  _proto.cleanBrackets = function cleanBrackets(nodes) {
    var _this = this;

    return nodes.map(function (i) {
      if (typeof i !== 'object') {
        return i;
      }

      if (i.length === 1 && typeof i[0] === 'object') {
        return _this.cleanBrackets(i[0]);
      }

      return _this.cleanBrackets(i);
    });
  }
  /**
     * Add " or " between properties and convert it to brackets format
     */
  ;

  _proto.convert = function convert(progress) {
    var result = [''];

    for (var _iterator4 = _createForOfIteratorHelperLoose$8(progress), _step4; !(_step4 = _iterator4()).done;) {
      var i = _step4.value;
      result.push([i.prop + ": " + i.value]);
      result.push(' or ');
    }

    result[result.length - 1] = '';
    return result;
  }
  /**
     * Compress value functions into a string nodes
     */
  ;

  _proto.normalize = function normalize(nodes) {
    var _this2 = this;

    if (typeof nodes !== 'object') {
      return nodes;
    }

    nodes = nodes.filter(function (i) {
      return i !== '';
    });

    if (typeof nodes[0] === 'string' && nodes[0].includes(':')) {
      return [brackets_1.stringify(nodes)];
    }

    return nodes.map(function (i) {
      return _this2.normalize(i);
    });
  }
  /**
     * Add prefixes
     */
  ;

  _proto.add = function add(nodes, all) {
    var _this3 = this;

    return nodes.map(function (i) {
      if (_this3.isProp(i)) {
        var prefixed = _this3.prefixed(i[0]);

        if (prefixed.length > 1) {
          return _this3.convert(prefixed);
        }

        return i;
      }

      if (typeof i === 'object') {
        return _this3.add(i, all);
      }

      return i;
    });
  }
  /**
     * Add prefixed declaration
     */
  ;

  _proto.process = function process(rule) {
    var ast = brackets_1.parse(rule.params);
    ast = this.normalize(ast);
    ast = this.remove(ast, rule.params);
    ast = this.add(ast, rule.params);
    ast = this.cleanBrackets(ast);
    rule.params = brackets_1.stringify(ast);
  }
  /**
     * Check global options
     */
  ;

  _proto.disabled = function disabled(node) {
    if (!this.all.options.grid) {
      if (node.prop === 'display' && node.value.includes('grid')) {
        return true;
      }

      if (node.prop.includes('grid') || node.prop === 'justify-items') {
        return true;
      }
    }

    if (this.all.options.flexbox === false) {
      if (node.prop === 'display' && node.value.includes('flex')) {
        return true;
      }

      var other = ['order', 'justify-content', 'align-items', 'align-content'];

      if (node.prop.includes('flex') || other.includes(node.prop)) {
        return true;
      }
    }

    return false;
  };

  return Supports;
}();

var supports = Supports;

function _createForOfIteratorHelperLoose$9(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$9(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$9(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$9(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$9(o, minLen); }

function _arrayLikeToArray$9(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var OldSelector = /*#__PURE__*/function () {
  function OldSelector(selector, prefix) {
    this.prefix = prefix;
    this.prefixed = selector.prefixed(this.prefix);
    this.regexp = selector.regexp(this.prefix);
    this.prefixeds = selector.possible().map(function (x) {
      return [selector.prefixed(x), selector.regexp(x)];
    });
    this.unprefixed = selector.name;
    this.nameRegexp = selector.regexp();
  }
  /**
     * Is rule a hack without unprefixed version bottom
     */


  var _proto = OldSelector.prototype;

  _proto.isHack = function isHack(rule) {
    var index = rule.parent.index(rule) + 1;
    var rules = rule.parent.nodes;

    while (index < rules.length) {
      var before = rules[index].selector;

      if (!before) {
        return true;
      }

      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {
        return false;
      }

      var some = false;

      for (var _iterator = _createForOfIteratorHelperLoose$9(this.prefixeds), _step; !(_step = _iterator()).done;) {
        var _step$value = _step.value,
            string = _step$value[0],
            regexp = _step$value[1];

        if (before.includes(string) && before.match(regexp)) {
          some = true;
          break;
        }
      }

      if (!some) {
        return true;
      }

      index += 1;
    }

    return true;
  }
  /**
     * Does rule contain an unnecessary prefixed selector
     */
  ;

  _proto.check = function check(rule) {
    if (!rule.selector.includes(this.prefixed)) {
      return false;
    }

    if (!rule.selector.match(this.regexp)) {
      return false;
    }

    if (this.isHack(rule)) {
      return false;
    }

    return true;
  };

  return OldSelector;
}();

var oldSelector = OldSelector;

function _defaults$3(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _createForOfIteratorHelperLoose$a(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$a(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$a(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$a(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$a(o, minLen); }

function _arrayLikeToArray$a(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _inheritsLoose$3(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$3(subClass, superClass); }

var list$3 = postcss_1.list;









var Selector = /*#__PURE__*/function (_Prefixer) {
  _inheritsLoose$3(Selector, _Prefixer);

  function Selector(name, prefixes, all) {
    var _this;

    _this = _Prefixer.call(this, name, prefixes, all) || this;
    _this.regexpCache = {};
    return _this;
  }
  /**
     * Is rule selectors need to be prefixed
     */


  var _proto = Selector.prototype;

  _proto.check = function check(rule) {
    if (rule.selector.includes(this.name)) {
      return !!rule.selector.match(this.regexp());
    }

    return false;
  }
  /**
     * Return prefixed version of selector
     */
  ;

  _proto.prefixed = function prefixed(prefix) {
    return this.name.replace(/^(\W*)/, "$1" + prefix);
  }
  /**
     * Lazy loadRegExp for name
     */
  ;

  _proto.regexp = function regexp(prefix) {
    if (this.regexpCache[prefix]) {
      return this.regexpCache[prefix];
    }

    var name = prefix ? this.prefixed(prefix) : this.name;
    this.regexpCache[prefix] = new RegExp("(^|[^:\"'=])" + utils.escapeRegexp(name), 'gi');
    return this.regexpCache[prefix];
  }
  /**
     * All possible prefixes
     */
  ;

  _proto.possible = function possible() {
    return browsers$1.prefixes();
  }
  /**
     * Return all possible selector prefixes
     */
  ;

  _proto.prefixeds = function prefixeds(rule) {
    var _this2 = this;

    if (rule._autoprefixerPrefixeds) {
      if (rule._autoprefixerPrefixeds[this.name]) {
        return rule._autoprefixerPrefixeds;
      }
    } else {
      rule._autoprefixerPrefixeds = {};
    }

    var prefixeds = {};

    if (rule.selector.includes(',')) {
      var ruleParts = list$3.comma(rule.selector);
      var toProcess = ruleParts.filter(function (el) {
        return el.includes(_this2.name);
      });

      var _loop = function _loop() {
        var prefix = _step.value;
        prefixeds[prefix] = toProcess.map(function (el) {
          return _this2.replace(el, prefix);
        }).join(', ');
      };

      for (var _iterator = _createForOfIteratorHelperLoose$a(this.possible()), _step; !(_step = _iterator()).done;) {
        _loop();
      }
    } else {
      for (var _iterator2 = _createForOfIteratorHelperLoose$a(this.possible()), _step2; !(_step2 = _iterator2()).done;) {
        var prefix = _step2.value;
        prefixeds[prefix] = this.replace(rule.selector, prefix);
      }
    }

    rule._autoprefixerPrefixeds[this.name] = prefixeds;
    return rule._autoprefixerPrefixeds;
  }
  /**
     * Is rule already prefixed before
     */
  ;

  _proto.already = function already(rule, prefixeds, prefix) {
    var index = rule.parent.index(rule) - 1;

    while (index >= 0) {
      var before = rule.parent.nodes[index];

      if (before.type !== 'rule') {
        return false;
      }

      var some = false;

      for (var key in prefixeds[this.name]) {
        var prefixed = prefixeds[this.name][key];

        if (before.selector === prefixed) {
          if (prefix === key) {
            return true;
          } else {
            some = true;
            break;
          }
        }
      }

      if (!some) {
        return false;
      }

      index -= 1;
    }

    return false;
  }
  /**
     * Replace selectors by prefixed one
     */
  ;

  _proto.replace = function replace(selector, prefix) {
    return selector.replace(this.regexp(), "$1" + this.prefixed(prefix));
  }
  /**
     * Clone and add prefixes for at-rule
     */
  ;

  _proto.add = function add(rule, prefix) {
    var prefixeds = this.prefixeds(rule);

    if (this.already(rule, prefixeds, prefix)) {
      return;
    }

    var cloned = this.clone(rule, {
      selector: prefixeds[this.name][prefix]
    });
    rule.parent.insertBefore(rule, cloned);
  }
  /**
     * Return function to fast find prefixed selector
     */
  ;

  _proto.old = function old(prefix) {
    return new oldSelector(this, prefix);
  };

  return Selector;
}(prefixer);

var selector = Selector;

function _defaults$4(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _createForOfIteratorHelperLoose$b(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$b(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$b(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$b(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$b(o, minLen); }

function _arrayLikeToArray$b(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _inheritsLoose$4(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$4(subClass, superClass); }



var AtRule = /*#__PURE__*/function (_Prefixer) {
  _inheritsLoose$4(AtRule, _Prefixer);

  function AtRule() {
    return _Prefixer.apply(this, arguments) || this;
  }

  var _proto = AtRule.prototype;

  /**
     * Clone and add prefixes for at-rule
     */
  _proto.add = function add(rule, prefix) {
    var prefixed = prefix + rule.name;
    var already = rule.parent.some(function (i) {
      return i.name === prefixed && i.params === rule.params;
    });

    if (already) {
      return undefined;
    }

    var cloned = this.clone(rule, {
      name: prefixed
    });
    return rule.parent.insertBefore(rule, cloned);
  }
  /**
     * Clone node with prefixes
     */
  ;

  _proto.process = function process(node) {
    var parent = this.parentPrefix(node);

    for (var _iterator = _createForOfIteratorHelperLoose$b(this.prefixes), _step; !(_step = _iterator()).done;) {
      var prefix = _step.value;

      if (!parent || parent === prefix) {
        this.add(node, prefix);
      }
    }
  };

  return AtRule;
}(prefixer);

var atRule$1 = AtRule;

function _defaults$5(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$5(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$5(subClass, superClass); }

function _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var Fullscreen = /*#__PURE__*/function (_Selector) {
  _inheritsLoose$5(Fullscreen, _Selector);

  function Fullscreen() {
    return _Selector.apply(this, arguments) || this;
  }

  var _proto = Fullscreen.prototype;

  /**
   * Return different selectors depend on prefix
   */
  _proto.prefixed = function prefixed(prefix) {
    if (prefix === '-webkit-') {
      return ':-webkit-full-screen';
    }

    if (prefix === '-moz-') {
      return ':-moz-full-screen';
    }

    return ":" + prefix + "fullscreen";
  };

  return Fullscreen;
}(selector);

_defineProperty$1(Fullscreen, "names", [':fullscreen']);

var fullscreen$1 = Fullscreen;

function _defaults$6(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$6(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$6(subClass, superClass); }

function _defineProperty$2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var Placeholder = /*#__PURE__*/function (_Selector) {
  _inheritsLoose$6(Placeholder, _Selector);

  function Placeholder() {
    return _Selector.apply(this, arguments) || this;
  }

  var _proto = Placeholder.prototype;

  /**
   * Add old mozilla to possible prefixes
   */
  _proto.possible = function possible() {
    return _Selector.prototype.possible.call(this).concat(['-moz- old', '-ms- old']);
  }
  /**
   * Return different selectors depend on prefix
   */
  ;

  _proto.prefixed = function prefixed(prefix) {
    if (prefix === '-webkit-') {
      return '::-webkit-input-placeholder';
    }

    if (prefix === '-ms-') {
      return '::-ms-input-placeholder';
    }

    if (prefix === '-ms- old') {
      return ':-ms-input-placeholder';
    }

    if (prefix === '-moz- old') {
      return ':-moz-placeholder';
    }

    return "::" + prefix + "placeholder";
  };

  return Placeholder;
}(selector);

_defineProperty$2(Placeholder, "names", ['::placeholder']);

var placeholder = Placeholder;

function _defaults$7(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$7(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$7(subClass, superClass); }

function _defineProperty$3(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var PlaceholderShown = /*#__PURE__*/function (_Selector) {
  _inheritsLoose$7(PlaceholderShown, _Selector);

  function PlaceholderShown() {
    return _Selector.apply(this, arguments) || this;
  }

  var _proto = PlaceholderShown.prototype;

  /**
   * Return different selectors depend on prefix
   */
  _proto.prefixed = function prefixed(prefix) {
    if (prefix === '-ms-') {
      return ':-ms-input-placeholder';
    }

    return ":" + prefix + "placeholder-shown";
  };

  return PlaceholderShown;
}(selector);

_defineProperty$3(PlaceholderShown, "names", [':placeholder-shown']);

var placeholderShown = PlaceholderShown;

/**
 * Return flexbox spec versions by prefix
 */
var flexSpec = function (prefix) {
  var spec;

  if (prefix === '-webkit- 2009' || prefix === '-moz-') {
    spec = 2009;
  } else if (prefix === '-ms-') {
    spec = 2012;
  } else if (prefix === '-webkit-') {
    spec = 'final';
  }

  if (prefix === '-webkit- 2009') {
    prefix = '-webkit-';
  }

  return [spec, prefix];
};

function _defaults$8(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$8(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$8(subClass, superClass); }

function _defineProperty$4(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var list$4 = postcss_1.list;





var Flex = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$8(Flex, _Declaration);

  function Flex() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Flex.prototype;

  /**
   * Change property name for 2009 spec
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-flex';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'flex';
  }
  /**
   * Spec 2009 supports only first argument
   * Spec 2012 disallows unitless basis
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009) {
      decl.value = list$4.space(decl.value)[0];
      decl.value = Flex.oldValues[decl.value] || decl.value;
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    if (spec === 2012) {
      var components = list$4.space(decl.value);

      if (components.length === 3 && components[2] === '0') {
        decl.value = components.slice(0, 2).concat('0px').join(' ');
      }
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return Flex;
}(declaration$1);

_defineProperty$4(Flex, "names", ['flex', 'box-flex']);

_defineProperty$4(Flex, "oldValues", {
  auto: '1',
  none: '0'
});

var flex = Flex;

function _defaults$9(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$9(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$9(subClass, superClass); }

function _defineProperty$5(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var Order = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$9(Order, _Declaration);

  function Order() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Order.prototype;

  /**
   * Change property name for 2009 and 2012 specs
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-ordinal-group';
    }

    if (spec === 2012) {
      return prefix + 'flex-order';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'order';
  }
  /**
   * Fix value for 2009 spec
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009 && /\d/.test(decl.value)) {
      decl.value = (parseInt(decl.value) + 1).toString();
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return Order;
}(declaration$1);

_defineProperty$5(Order, "names", ['order', 'flex-order', 'box-ordinal-group']);

var order = Order;

function _defaults$a(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$a(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$a(subClass, superClass); }

function _defineProperty$6(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var Filter = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$a(Filter, _Declaration);

  function Filter() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Filter.prototype;

  /**
   * Check is it Internet Explorer filter
   */
  _proto.check = function check(decl) {
    var v = decl.value;
    return !v.toLowerCase().includes('alpha(') && !v.includes('DXImageTransform.Microsoft') && !v.includes('data:image/svg+xml');
  };

  return Filter;
}(declaration$1);

_defineProperty$6(Filter, "names", ['filter']);

var filter = Filter;

function _defaults$b(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$b(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$b(subClass, superClass); }

function _defineProperty$7(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var GridEnd = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$b(GridEnd, _Declaration);

  function GridEnd() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridEnd.prototype;

  /**
   * Change repeating syntax for IE
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var clonedDecl = this.clone(decl);
    var startProp = decl.prop.replace(/end$/, 'start');
    var spanProp = prefix + decl.prop.replace(/end$/, 'span');

    if (decl.parent.some(function (i) {
      return i.prop === spanProp;
    })) {
      return undefined;
    }

    clonedDecl.prop = spanProp;

    if (decl.value.includes('span')) {
      clonedDecl.value = decl.value.replace(/span\s/i, '');
    } else {
      var startDecl;
      decl.parent.walkDecls(startProp, function (d) {
        startDecl = d;
      });

      if (startDecl) {
        var value = Number(decl.value) - Number(startDecl.value) + '';
        clonedDecl.value = value;
      } else {
        decl.warn(result, "Can not prefix " + decl.prop + " (" + startProp + " is not found)");
      }
    }

    decl.cloneBefore(clonedDecl);
    return undefined;
  };

  return GridEnd;
}(declaration$1);

_defineProperty$7(GridEnd, "names", ['grid-row-end', 'grid-column-end']);

var gridEnd = GridEnd;

function _defaults$c(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$c(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$c(subClass, superClass); }

function _defineProperty$8(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var Animation = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$c(Animation, _Declaration);

  function Animation() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Animation.prototype;

  /**
   * Don’t add prefixes for modern values.
   */
  _proto.check = function check(decl) {
    return !decl.value.split(/\s+/).some(function (i) {
      var lower = i.toLowerCase();
      return lower === 'reverse' || lower === 'alternate-reverse';
    });
  };

  return Animation;
}(declaration$1);

_defineProperty$8(Animation, "names", ['animation', 'animation-direction']);

var animation = Animation;

function _defaults$d(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$d(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$d(subClass, superClass); }

function _defineProperty$9(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var FlexFlow = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$d(FlexFlow, _Declaration);

  function FlexFlow() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexFlow.prototype;

  /**
   * Use two properties for 2009 spec
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec !== 2009) {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    var values = decl.value.split(/\s+/).filter(function (i) {
      return i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse';
    });

    if (values.length === 0) {
      return undefined;
    }

    var already = decl.parent.some(function (i) {
      return i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction';
    });

    if (already) {
      return undefined;
    }

    var value = values[0];
    var orient = value.includes('row') ? 'horizontal' : 'vertical';
    var dir = value.includes('reverse') ? 'reverse' : 'normal';
    var cloned = this.clone(decl);
    cloned.prop = prefix + 'box-orient';
    cloned.value = orient;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);
    cloned = this.clone(decl);
    cloned.prop = prefix + 'box-direction';
    cloned.value = dir;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, cloned);
  };

  return FlexFlow;
}(declaration$1);

_defineProperty$9(FlexFlow, "names", ['flex-flow', 'box-direction', 'box-orient']);

var flexFlow = FlexFlow;

function _defaults$e(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$e(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$e(subClass, superClass); }

function _defineProperty$a(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var Flex$1 = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$e(Flex, _Declaration);

  function Flex() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Flex.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex';
  }
  /**
   * Return flex property for 2009 and 2012 specs
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-flex';
    }

    if (spec === 2012) {
      return prefix + 'flex-positive';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  };

  return Flex;
}(declaration$1);

_defineProperty$a(Flex$1, "names", ['flex-grow', 'flex-positive']);

var flexGrow = Flex$1;

function _defaults$f(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$f(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$f(subClass, superClass); }

function _defineProperty$b(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var FlexWrap = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$f(FlexWrap, _Declaration);

  function FlexWrap() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexWrap.prototype;

  /**
   * Don't add prefix for 2009 spec
   */
  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec !== 2009) {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return FlexWrap;
}(declaration$1);

_defineProperty$b(FlexWrap, "names", ['flex-wrap']);

var flexWrap = FlexWrap;

function _defaults$g(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$g(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$g(subClass, superClass); }

function _defineProperty$c(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var GridArea = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$g(GridArea, _Declaration);

  function GridArea() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridArea.prototype;

  /**
   * Translate grid-area to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var values = gridUtils.parse(decl);

    var _utils$translate = gridUtils.translate(values, 0, 2),
        rowStart = _utils$translate[0],
        rowSpan = _utils$translate[1];

    var _utils$translate2 = gridUtils.translate(values, 1, 3),
        columnStart = _utils$translate2[0],
        columnSpan = _utils$translate2[1];

    [['grid-row', rowStart], ['grid-row-span', rowSpan], ['grid-column', columnStart], ['grid-column-span', columnSpan]].forEach(function (_ref) {
      var prop = _ref[0],
          value = _ref[1];
      gridUtils.insertDecl(decl, prop, value);
    });
    gridUtils.warnTemplateSelectorNotFound(decl, result);
    gridUtils.warnIfGridRowColumnExists(decl, result);
    return undefined;
  };

  return GridArea;
}(declaration$1);

_defineProperty$c(GridArea, "names", ['grid-area']);

var gridArea = GridArea;

function _defaults$h(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$h(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$h(subClass, superClass); }

function _defineProperty$d(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var PlaceSelf = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$h(PlaceSelf, _Declaration);

  function PlaceSelf() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = PlaceSelf.prototype;

  /**
   * Translate place-self to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes); // prevent doubling of prefixes

    if (decl.parent.some(function (i) {
      return i.prop === '-ms-grid-row-align';
    })) {
      return undefined;
    }

    var _utils$parse = gridUtils.parse(decl),
        _utils$parse$ = _utils$parse[0],
        first = _utils$parse$[0],
        second = _utils$parse$[1];

    if (second) {
      gridUtils.insertDecl(decl, 'grid-row-align', first);
      gridUtils.insertDecl(decl, 'grid-column-align', second);
    } else {
      gridUtils.insertDecl(decl, 'grid-row-align', first);
      gridUtils.insertDecl(decl, 'grid-column-align', first);
    }

    return undefined;
  };

  return PlaceSelf;
}(declaration$1);

_defineProperty$d(PlaceSelf, "names", ['place-self']);

var placeSelf = PlaceSelf;

function _defaults$i(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$i(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$i(subClass, superClass); }

function _defineProperty$e(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var GridStart = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$i(GridStart, _Declaration);

  function GridStart() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridStart.prototype;

  /**
   * Do not add prefix for unsupported value in IE
   */
  _proto.check = function check(decl) {
    var value = decl.value;
    return !value.includes('/') || value.includes('span');
  }
  /**
   * Return a final spec property
   */
  ;

  _proto.normalize = function normalize(prop) {
    return prop.replace('-start', '');
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var result = _Declaration.prototype.prefixed.call(this, prop, prefix);

    if (prefix === '-ms-') {
      result = result.replace('-start', '');
    }

    return result;
  };

  return GridStart;
}(declaration$1);

_defineProperty$e(GridStart, "names", ['grid-row-start', 'grid-column-start']);

var gridStart = GridStart;

function _defaults$j(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$j(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$j(subClass, superClass); }

function _defineProperty$f(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var AlignSelf = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$j(AlignSelf, _Declaration);

  function AlignSelf() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = AlignSelf.prototype;

  _proto.check = function check(decl) {
    return decl.parent && !decl.parent.some(function (i) {
      return i.prop && i.prop.startsWith('grid-');
    });
  }
  /**
   * Change property name for 2012 specs
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-item-align';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-self';
  }
  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2012) {
      decl.value = AlignSelf.oldValues[decl.value] || decl.value;
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    if (spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return AlignSelf;
}(declaration$1);

_defineProperty$f(AlignSelf, "names", ['align-self', 'flex-item-align']);

_defineProperty$f(AlignSelf, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start'
});

var alignSelf = AlignSelf;

function _defaults$k(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$k(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$k(subClass, superClass); }

function _defineProperty$g(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var Appearance = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$k(Appearance, _Declaration);

  function Appearance(name, prefixes, all) {
    var _this;

    _this = _Declaration.call(this, name, prefixes, all) || this;

    if (_this.prefixes) {
      _this.prefixes = utils.uniq(_this.prefixes.map(function (i) {
        if (i === '-ms-') {
          return '-webkit-';
        }

        return i;
      }));
    }

    return _this;
  }

  return Appearance;
}(declaration$1);

_defineProperty$g(Appearance, "names", ['appearance']);

var appearance = Appearance;

function _defaults$l(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$l(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$l(subClass, superClass); }

function _defineProperty$h(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var FlexBasis = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$l(FlexBasis, _Declaration);

  function FlexBasis() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexBasis.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex-basis';
  }
  /**
   * Return flex property for 2012 spec
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-preferred-size';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec;

    var _flexSpec2 = flexSpec(prefix);

    spec = _flexSpec2[0];
    prefix = _flexSpec2[1];

    if (spec === 2012 || spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return FlexBasis;
}(declaration$1);

_defineProperty$h(FlexBasis, "names", ['flex-basis', 'flex-preferred-size']);

var flexBasis = FlexBasis;

function _defaults$m(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$m(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$m(subClass, superClass); }

function _defineProperty$i(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var MaskBorder = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$m(MaskBorder, _Declaration);

  function MaskBorder() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = MaskBorder.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return this.name.replace('box-image', 'border');
  }
  /**
   * Return flex property for 2012 spec
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var result = _Declaration.prototype.prefixed.call(this, prop, prefix);

    if (prefix === '-webkit-') {
      result = result.replace('border', 'box-image');
    }

    return result;
  };

  return MaskBorder;
}(declaration$1);

_defineProperty$i(MaskBorder, "names", ['mask-border', 'mask-border-source', 'mask-border-slice', 'mask-border-width', 'mask-border-outset', 'mask-border-repeat', 'mask-box-image', 'mask-box-image-source', 'mask-box-image-slice', 'mask-box-image-width', 'mask-box-image-outset', 'mask-box-image-repeat']);

var maskBorder = MaskBorder;

function _defaults$n(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$n(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$n(subClass, superClass); }

function _defineProperty$j(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var MaskComposite = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$n(MaskComposite, _Declaration);

  function MaskComposite() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = MaskComposite.prototype;

  /**
   * Prefix mask-composite for webkit
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    var isCompositeProp = decl.prop === 'mask-composite';
    var compositeValues;

    if (isCompositeProp) {
      compositeValues = decl.value.split(',');
    } else {
      compositeValues = decl.value.match(MaskComposite.regexp) || [];
    }

    compositeValues = compositeValues.map(function (el) {
      return el.trim();
    }).filter(function (el) {
      return el;
    });
    var hasCompositeValues = compositeValues.length;
    var compositeDecl;

    if (hasCompositeValues) {
      compositeDecl = this.clone(decl);
      compositeDecl.value = compositeValues.map(function (value) {
        return MaskComposite.oldValues[value] || value;
      }).join(', ');

      if (compositeValues.includes('intersect')) {
        compositeDecl.value += ', xor';
      }

      compositeDecl.prop = prefix + 'mask-composite';
    }

    if (isCompositeProp) {
      if (!hasCompositeValues) {
        return undefined;
      }

      if (this.needCascade(decl)) {
        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);
      }

      return decl.parent.insertBefore(decl, compositeDecl);
    }

    var cloned = this.clone(decl);
    cloned.prop = prefix + cloned.prop;

    if (hasCompositeValues) {
      cloned.value = cloned.value.replace(MaskComposite.regexp, '');
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);

    if (!hasCompositeValues) {
      return decl;
    }

    if (this.needCascade(decl)) {
      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, compositeDecl);
  };

  return MaskComposite;
}(declaration$1);

_defineProperty$j(MaskComposite, "names", ['mask', 'mask-composite']);

_defineProperty$j(MaskComposite, "oldValues", {
  add: 'source-over',
  substract: 'source-out',
  intersect: 'source-in',
  exclude: 'xor'
});

_defineProperty$j(MaskComposite, "regexp", new RegExp("\\s+(" + Object.keys(MaskComposite.oldValues).join('|') + ")\\b(?!\\))\\s*(?=[,])", 'ig'));

var maskComposite = MaskComposite;

function _defaults$o(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$o(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$o(subClass, superClass); }

function _defineProperty$k(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var AlignItems = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$o(AlignItems, _Declaration);

  function AlignItems() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = AlignItems.prototype;

  /**
   * Change property name for 2009 and 2012 specs
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-align';
    }

    if (spec === 2012) {
      return prefix + 'flex-align';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-items';
  }
  /**
   * Change value for 2009 and 2012 specs
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009 || spec === 2012) {
      decl.value = AlignItems.oldValues[decl.value] || decl.value;
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return AlignItems;
}(declaration$1);

_defineProperty$k(AlignItems, "names", ['align-items', 'flex-align', 'box-align']);

_defineProperty$k(AlignItems, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start'
});

var alignItems = AlignItems;

function _defaults$p(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$p(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$p(subClass, superClass); }

function _defineProperty$l(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var UserSelect = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$p(UserSelect, _Declaration);

  function UserSelect() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = UserSelect.prototype;

  /**
   * Change prefixed value for IE
   */
  _proto.set = function set(decl, prefix) {
    if (prefix === '-ms-' && decl.value === 'contain') {
      decl.value = 'element';
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return UserSelect;
}(declaration$1);

_defineProperty$l(UserSelect, "names", ['user-select']);

var userSelect = UserSelect;

function _defaults$q(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$q(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$q(subClass, superClass); }

function _defineProperty$m(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var FlexShrink = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$q(FlexShrink, _Declaration);

  function FlexShrink() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexShrink.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex-shrink';
  }
  /**
   * Return flex property for 2012 spec
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-negative';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec;

    var _flexSpec2 = flexSpec(prefix);

    spec = _flexSpec2[0];
    prefix = _flexSpec2[1];

    if (spec === 2012 || spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return FlexShrink;
}(declaration$1);

_defineProperty$m(FlexShrink, "names", ['flex-shrink', 'flex-negative']);

var flexShrink = FlexShrink;

function _defaults$r(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$r(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$r(subClass, superClass); }

function _defineProperty$n(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var BreakProps = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$r(BreakProps, _Declaration);

  function BreakProps() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BreakProps.prototype;

  /**
   * Change name for -webkit- and -moz- prefix
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + "column-" + prop;
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize(prop) {
    if (prop.includes('inside')) {
      return 'break-inside';
    }

    if (prop.includes('before')) {
      return 'break-before';
    }

    return 'break-after';
  }
  /**
   * Change prefixed value for avoid-column and avoid-page
   */
  ;

  _proto.set = function set(decl, prefix) {
    if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {
      decl.value = 'avoid';
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  }
  /**
   * Don’t prefix some values
   */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    if (decl.prop !== 'break-inside') {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {
      return undefined;
    }

    return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
  };

  return BreakProps;
}(declaration$1);

_defineProperty$n(BreakProps, "names", ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after']);

var breakProps = BreakProps;

function _defaults$s(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$s(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$s(subClass, superClass); }

function _defineProperty$o(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var ColorAdjust = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$s(ColorAdjust, _Declaration);

  function ColorAdjust() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = ColorAdjust.prototype;

  /**
   * Change property name for WebKit-based browsers
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'print-color-adjust';
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'color-adjust';
  };

  return ColorAdjust;
}(declaration$1);

_defineProperty$o(ColorAdjust, "names", ['color-adjust', 'print-color-adjust']);

var colorAdjust = ColorAdjust;

function _defaults$t(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$t(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$t(subClass, superClass); }

function _defineProperty$p(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var WritingMode = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$t(WritingMode, _Declaration);

  function WritingMode() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = WritingMode.prototype;

  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      var cloned = this.set(this.clone(decl), prefix);

      if (this.needCascade(decl)) {
        cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
      }

      var direction = 'ltr';
      decl.parent.nodes.forEach(function (i) {
        if (i.prop === 'direction') {
          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value;
        }
      });
      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value;
      return decl.parent.insertBefore(decl, cloned);
    }

    return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
  };

  return WritingMode;
}(declaration$1);

_defineProperty$p(WritingMode, "names", ['writing-mode']);

_defineProperty$p(WritingMode, "msValues", {
  ltr: {
    'horizontal-tb': 'lr-tb',
    'vertical-rl': 'tb-rl',
    'vertical-lr': 'tb-lr'
  },
  rtl: {
    'horizontal-tb': 'rl-tb',
    'vertical-rl': 'bt-rl',
    'vertical-lr': 'bt-lr'
  }
});

var writingMode = WritingMode;

function _defaults$u(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$u(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$u(subClass, superClass); }

function _defineProperty$q(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var BorderImage = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$u(BorderImage, _Declaration);

  function BorderImage() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BorderImage.prototype;

  /**
   * Remove fill parameter for prefixed declarations
   */
  _proto.set = function set(decl, prefix) {
    decl.value = decl.value.replace(/\s+fill(\s)/, '$1');
    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return BorderImage;
}(declaration$1);

_defineProperty$q(BorderImage, "names", ['border-image']);

var borderImage$1 = BorderImage;

function _defaults$v(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$v(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$v(subClass, superClass); }

function _defineProperty$r(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var AlignContent = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$v(AlignContent, _Declaration);

  function AlignContent() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = AlignContent.prototype;

  /**
   * Change property name for 2012 spec
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-line-pack';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-content';
  }
  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2012) {
      decl.value = AlignContent.oldValues[decl.value] || decl.value;
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    if (spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return AlignContent;
}(declaration$1);

_defineProperty$r(AlignContent, "names", ['align-content', 'flex-line-pack']);

_defineProperty$r(AlignContent, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
});

var alignContent = AlignContent;

function _defaults$w(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$w(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$w(subClass, superClass); }

function _defineProperty$s(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var BorderRadius = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$w(BorderRadius, _Declaration);

  function BorderRadius() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BorderRadius.prototype;

  /**
   * Change syntax, when add Mozilla prefix
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    if (prefix === '-moz-') {
      return prefix + (BorderRadius.toMozilla[prop] || prop);
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return unprefixed version of property
   */
  ;

  _proto.normalize = function normalize(prop) {
    return BorderRadius.toNormal[prop] || prop;
  };

  return BorderRadius;
}(declaration$1);

_defineProperty$s(BorderRadius, "names", ['border-radius']);

_defineProperty$s(BorderRadius, "toMozilla", {});

_defineProperty$s(BorderRadius, "toNormal", {});

for (var _i = 0, _arr = ['top', 'bottom']; _i < _arr.length; _i++) {
  var ver = _arr[_i];

  for (var _i2 = 0, _arr2 = ['left', 'right']; _i2 < _arr2.length; _i2++) {
    var hor = _arr2[_i2];
    var normal = "border-" + ver + "-" + hor + "-radius";
    var mozilla = "border-radius-" + ver + hor;
    BorderRadius.names.push(normal);
    BorderRadius.names.push(mozilla);
    BorderRadius.toMozilla[normal] = mozilla;
    BorderRadius.toNormal[mozilla] = normal;
  }
}

var borderRadius$1 = BorderRadius;

function _defaults$x(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$x(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$x(subClass, superClass); }

function _defineProperty$t(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var BlockLogical = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$x(BlockLogical, _Declaration);

  function BlockLogical() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BlockLogical.prototype;

  /**
   * Use old syntax for -moz- and -webkit-
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    if (prop.includes('-start')) {
      return prefix + prop.replace('-block-start', '-before');
    }

    return prefix + prop.replace('-block-end', '-after');
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize(prop) {
    if (prop.includes('-before')) {
      return prop.replace('-before', '-block-start');
    }

    return prop.replace('-after', '-block-end');
  };

  return BlockLogical;
}(declaration$1);

_defineProperty$t(BlockLogical, "names", ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after']);

var blockLogical = BlockLogical;

function _defaults$y(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$y(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$y(subClass, superClass); }

function _defineProperty$u(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var parseTemplate$1 = gridUtils.parseTemplate,
    warnMissedAreas$1 = gridUtils.warnMissedAreas,
    getGridGap$1 = gridUtils.getGridGap,
    warnGridGap$1 = gridUtils.warnGridGap,
    inheritGridGap$1 = gridUtils.inheritGridGap;

var GridTemplate = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$y(GridTemplate, _Declaration);

  function GridTemplate() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridTemplate.prototype;

  /**
   * Translate grid-template to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);

    if (decl.parent.some(function (i) {
      return i.prop === '-ms-grid-rows';
    })) {
      return undefined;
    }

    var gap = getGridGap$1(decl);
    /**
     * we must insert inherited gap values in some cases:
     * if we are inside media query && if we have no grid-gap value
    */

    var inheritedGap = inheritGridGap$1(decl, gap);

    var _parseTemplate = parseTemplate$1({
      decl: decl,
      gap: inheritedGap || gap
    }),
        rows = _parseTemplate.rows,
        columns = _parseTemplate.columns,
        areas = _parseTemplate.areas;

    var hasAreas = Object.keys(areas).length > 0;
    var hasRows = Boolean(rows);
    var hasColumns = Boolean(columns);
    warnGridGap$1({
      gap: gap,
      hasColumns: hasColumns,
      decl: decl,
      result: result
    });
    warnMissedAreas$1(areas, decl, result);

    if (hasRows && hasColumns || hasAreas) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: rows,
        raws: {}
      });
    }

    if (hasColumns) {
      decl.cloneBefore({
        prop: '-ms-grid-columns',
        value: columns,
        raws: {}
      });
    }

    return decl;
  };

  return GridTemplate;
}(declaration$1);

_defineProperty$u(GridTemplate, "names", ['grid-template']);

var gridTemplate = GridTemplate;

function _defaults$z(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$z(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$z(subClass, superClass); }

function _defineProperty$v(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var InlineLogical = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$z(InlineLogical, _Declaration);

  function InlineLogical() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = InlineLogical.prototype;

  /**
   * Use old syntax for -moz- and -webkit-
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + prop.replace('-inline', '');
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize(prop) {
    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2');
  };

  return InlineLogical;
}(declaration$1);

_defineProperty$v(InlineLogical, "names", ['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', 'border-start', 'border-end', 'margin-start', 'margin-end', 'padding-start', 'padding-end']);

var inlineLogical = InlineLogical;

function _defaults$A(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$A(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$A(subClass, superClass); }

function _defineProperty$w(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var GridRowAlign = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$A(GridRowAlign, _Declaration);

  function GridRowAlign() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridRowAlign.prototype;

  /**
   * Do not prefix flexbox values
   */
  _proto.check = function check(decl) {
    return !decl.value.includes('flex-') && decl.value !== 'baseline';
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'grid-row-align';
  }
  /**
   * Change IE property back
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-self';
  };

  return GridRowAlign;
}(declaration$1);

_defineProperty$w(GridRowAlign, "names", ['grid-row-align']);

var gridRowAlign = GridRowAlign;

function _defaults$B(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _createForOfIteratorHelperLoose$c(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$c(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$c(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$c(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$c(o, minLen); }

function _arrayLikeToArray$c(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _inheritsLoose$B(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$B(subClass, superClass); }

function _defineProperty$x(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var TransformDecl = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$B(TransformDecl, _Declaration);

  function TransformDecl() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TransformDecl.prototype;

  /**
   * Recursively check all parents for @keyframes
   */
  _proto.keyframeParents = function keyframeParents(decl) {
    var parent = decl.parent;

    while (parent) {
      if (parent.type === 'atrule' && parent.name === 'keyframes') {
        return true;
      }

      var _parent = parent;
      parent = _parent.parent;
    }

    return false;
  }
  /**
   * Is transform contain 3D commands
   */
  ;

  _proto.contain3d = function contain3d(decl) {
    if (decl.prop === 'transform-origin') {
      return false;
    }

    for (var _iterator = _createForOfIteratorHelperLoose$c(TransformDecl.functions3d), _step; !(_step = _iterator()).done;) {
      var func = _step.value;

      if (decl.value.includes(func + "(")) {
        return true;
      }
    }

    return false;
  }
  /**
   * Replace rotateZ to rotate for IE 9
   */
  ;

  _proto.set = function set(decl, prefix) {
    decl = _Declaration.prototype.set.call(this, decl, prefix);

    if (prefix === '-ms-') {
      decl.value = decl.value.replace(/rotatez/gi, 'rotate');
    }

    return decl;
  }
  /**
   * Don't add prefix for IE in keyframes
   */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {
        return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
      }
    } else if (prefix === '-o-') {
      if (!this.contain3d(decl)) {
        return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
      }
    } else {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    return undefined;
  };

  return TransformDecl;
}(declaration$1);

_defineProperty$x(TransformDecl, "names", ['transform', 'transform-origin']);

_defineProperty$x(TransformDecl, "functions3d", ['matrix3d', 'translate3d', 'translateZ', 'scale3d', 'scaleZ', 'rotate3d', 'rotateX', 'rotateY', 'perspective']);

var transformDecl = TransformDecl;

function _defaults$C(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$C(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$C(subClass, superClass); }

function _defineProperty$y(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var FlexDirection = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$C(FlexDirection, _Declaration);

  function FlexDirection() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexDirection.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex-direction';
  }
  /**
   * Use two properties for 2009 spec
   */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec !== 2009) {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    var already = decl.parent.some(function (i) {
      return i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction';
    });

    if (already) {
      return undefined;
    }

    var v = decl.value;
    var orient, dir;

    if (v === 'inherit' || v === 'initial' || v === 'unset') {
      orient = v;
      dir = v;
    } else {
      orient = v.includes('row') ? 'horizontal' : 'vertical';
      dir = v.includes('reverse') ? 'reverse' : 'normal';
    }

    var cloned = this.clone(decl);
    cloned.prop = prefix + 'box-orient';
    cloned.value = orient;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);
    cloned = this.clone(decl);
    cloned.prop = prefix + 'box-direction';
    cloned.value = dir;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, cloned);
  }
  /**
   * Clean two properties for 2009 spec
   */
  ;

  _proto.old = function old(prop, prefix) {
    var spec;

    var _flexSpec2 = flexSpec(prefix);

    spec = _flexSpec2[0];
    prefix = _flexSpec2[1];

    if (spec === 2009) {
      return [prefix + 'box-orient', prefix + 'box-direction'];
    } else {
      return _Declaration.prototype.old.call(this, prop, prefix);
    }
  };

  return FlexDirection;
}(declaration$1);

_defineProperty$y(FlexDirection, "names", ['flex-direction', 'box-direction', 'box-orient']);

var flexDirection = FlexDirection;

function _defaults$D(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$D(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$D(subClass, superClass); }

function _defineProperty$z(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var ImageRendering = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$D(ImageRendering, _Declaration);

  function ImageRendering() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = ImageRendering.prototype;

  /**
   * Add hack only for crisp-edges
   */
  _proto.check = function check(decl) {
    return decl.value === 'pixelated';
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return '-ms-interpolation-mode';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Change property and value for IE
   */
  ;

  _proto.set = function set(decl, prefix) {
    if (prefix !== '-ms-') return _Declaration.prototype.set.call(this, decl, prefix);
    decl.prop = '-ms-interpolation-mode';
    decl.value = 'nearest-neighbor';
    return decl;
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'image-rendering';
  }
  /**
   * Warn on old value
   */
  ;

  _proto.process = function process(node, result) {
    return _Declaration.prototype.process.call(this, node, result);
  };

  return ImageRendering;
}(declaration$1);

_defineProperty$z(ImageRendering, "names", ['image-rendering', 'interpolation-mode']);

var imageRendering = ImageRendering;

function _defaults$E(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$E(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$E(subClass, superClass); }

function _defineProperty$A(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var BackdropFilter = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$E(BackdropFilter, _Declaration);

  function BackdropFilter(name, prefixes, all) {
    var _this;

    _this = _Declaration.call(this, name, prefixes, all) || this;

    if (_this.prefixes) {
      _this.prefixes = utils.uniq(_this.prefixes.map(function (i) {
        return i === '-ms-' ? '-webkit-' : i;
      }));
    }

    return _this;
  }

  return BackdropFilter;
}(declaration$1);

_defineProperty$A(BackdropFilter, "names", ['backdrop-filter']);

var backdropFilter = BackdropFilter;

function _defaults$F(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$F(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$F(subClass, superClass); }

function _defineProperty$B(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var BackgroundClip = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$F(BackgroundClip, _Declaration);

  function BackgroundClip(name, prefixes, all) {
    var _this;

    _this = _Declaration.call(this, name, prefixes, all) || this;

    if (_this.prefixes) {
      _this.prefixes = utils.uniq(_this.prefixes.map(function (i) {
        return i === '-ms-' ? '-webkit-' : i;
      }));
    }

    return _this;
  }

  var _proto = BackgroundClip.prototype;

  _proto.check = function check(decl) {
    return decl.value.toLowerCase() === 'text';
  };

  return BackgroundClip;
}(declaration$1);

_defineProperty$B(BackgroundClip, "names", ['background-clip']);

var backgroundClip = BackgroundClip;

function _defaults$G(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$G(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$G(subClass, superClass); }

function _defineProperty$C(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var BASIC = ['none', 'underline', 'overline', 'line-through', 'blink', 'inherit', 'initial', 'unset'];

var TextDecoration = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$G(TextDecoration, _Declaration);

  function TextDecoration() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TextDecoration.prototype;

  /**
   * Do not add prefixes for basic values.
   */
  _proto.check = function check(decl) {
    return decl.value.split(/\s+/).some(function (i) {
      return !BASIC.includes(i);
    });
  };

  return TextDecoration;
}(declaration$1);

_defineProperty$C(TextDecoration, "names", ['text-decoration']);

var textDecoration$1 = TextDecoration;

function _defaults$H(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$H(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$H(subClass, superClass); }

function _defineProperty$D(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var JustifyContent = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$H(JustifyContent, _Declaration);

  function JustifyContent() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = JustifyContent.prototype;

  /**
   * Change property name for 2009 and 2012 specs
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-pack';
    }

    if (spec === 2012) {
      return prefix + 'flex-pack';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'justify-content';
  }
  /**
   * Change value for 2009 and 2012 specs
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009 || spec === 2012) {
      var value = JustifyContent.oldValues[decl.value] || decl.value;
      decl.value = value;

      if (spec !== 2009 || value !== 'distribute') {
        return _Declaration.prototype.set.call(this, decl, prefix);
      }
    } else if (spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return JustifyContent;
}(declaration$1);

_defineProperty$D(JustifyContent, "names", ['justify-content', 'flex-pack', 'box-pack']);

_defineProperty$D(JustifyContent, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
});

var justifyContent = JustifyContent;

function _defaults$I(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$I(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$I(subClass, superClass); }

function _defineProperty$E(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var BackgroundSize = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$I(BackgroundSize, _Declaration);

  function BackgroundSize() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BackgroundSize.prototype;

  /**
   * Duplication parameter for -webkit- browsers
   */
  _proto.set = function set(decl, prefix) {
    var value = decl.value.toLowerCase();

    if (prefix === '-webkit-' && !value.includes(' ') && value !== 'contain' && value !== 'cover') {
      decl.value = decl.value + ' ' + decl.value;
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return BackgroundSize;
}(declaration$1);

_defineProperty$E(BackgroundSize, "names", ['background-size']);

var backgroundSize = BackgroundSize;

function _defaults$J(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$J(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$J(subClass, superClass); }

function _defineProperty$F(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var GridRowColumn = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$J(GridRowColumn, _Declaration);

  function GridRowColumn() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridRowColumn.prototype;

  /**
   * Translate grid-row / grid-column to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var values = gridUtils.parse(decl);

    var _utils$translate = gridUtils.translate(values, 0, 1),
        start = _utils$translate[0],
        span = _utils$translate[1];

    var hasStartValueSpan = values[0] && values[0].includes('span');

    if (hasStartValueSpan) {
      span = values[0].join('').replace(/\D/g, '');
    }

    [[decl.prop, start], [decl.prop + "-span", span]].forEach(function (_ref) {
      var prop = _ref[0],
          value = _ref[1];
      gridUtils.insertDecl(decl, prop, value);
    });
    return undefined;
  };

  return GridRowColumn;
}(declaration$1);

_defineProperty$F(GridRowColumn, "names", ['grid-row', 'grid-column']);

var gridRowColumn = GridRowColumn;

function _defaults$K(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$K(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$K(subClass, superClass); }

function _defineProperty$G(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var prefixTrackProp$1 = gridUtils.prefixTrackProp,
    prefixTrackValue$1 = gridUtils.prefixTrackValue,
    autoplaceGridItems$1 = gridUtils.autoplaceGridItems,
    getGridGap$2 = gridUtils.getGridGap,
    inheritGridGap$2 = gridUtils.inheritGridGap;



var GridRowsColumns = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$K(GridRowsColumns, _Declaration);

  function GridRowsColumns() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridRowsColumns.prototype;

  /**
   * Change property name for IE
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return prefixTrackProp$1({
        prop: prop,
        prefix: prefix
      });
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Change IE property back
   */
  ;

  _proto.normalize = function normalize(prop) {
    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');
  };

  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var parent = decl.parent,
        prop = decl.prop,
        value = decl.value;
    var isRowProp = prop.includes('rows');
    var isColumnProp = prop.includes('columns');
    var hasGridTemplate = parent.some(function (i) {
      return i.prop === 'grid-template' || i.prop === 'grid-template-areas';
    });
    /**
     * Not to prefix rows declaration if grid-template(-areas) is present
     */

    if (hasGridTemplate && isRowProp) {
      return false;
    }

    var processor = new processor$1({
      options: {}
    });
    var status = processor.gridStatus(parent, result);
    var gap = getGridGap$2(decl);
    gap = inheritGridGap$2(decl, gap) || gap;
    var gapValue = isRowProp ? gap.row : gap.column;

    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {
      gapValue = null;
    }

    var prefixValue = prefixTrackValue$1({
      value: value,
      gap: gapValue
    });
    /**
     * Insert prefixes
     */

    decl.cloneBefore({
      prop: prefixTrackProp$1({
        prop: prop,
        prefix: prefix
      }),
      value: prefixValue
    });
    var autoflow = parent.nodes.find(function (i) {
      return i.prop === 'grid-auto-flow';
    });
    var autoflowValue = 'row';

    if (autoflow && !processor.disabled(autoflow, result)) {
      autoflowValue = autoflow.value.trim();
    }

    if (status === 'autoplace') {
      /**
       * Show warning if grid-template-rows decl is not found
       */
      var rowDecl = parent.nodes.find(function (i) {
        return i.prop === 'grid-template-rows';
      });

      if (!rowDecl && hasGridTemplate) {
        return undefined;
      } else if (!rowDecl && !hasGridTemplate) {
        decl.warn(result, 'Autoplacement does not work without grid-template-rows property');
        return undefined;
      }
      /**
       * Show warning if grid-template-columns decl is not found
       */


      var columnDecl = parent.nodes.find(function (i) {
        return i.prop === 'grid-template-columns';
      });

      if (!columnDecl && !hasGridTemplate) {
        decl.warn(result, 'Autoplacement does not work without grid-template-columns property');
      }
      /**
       * Autoplace grid items
       */


      if (isColumnProp && !hasGridTemplate) {
        autoplaceGridItems$1(decl, result, gap, autoflowValue);
      }
    }

    return undefined;
  };

  return GridRowsColumns;
}(declaration$1);

_defineProperty$G(GridRowsColumns, "names", ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns']);

var gridRowsColumns = GridRowsColumns;

function _defaults$L(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$L(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$L(subClass, superClass); }

function _defineProperty$H(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var GridColumnAlign = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$L(GridColumnAlign, _Declaration);

  function GridColumnAlign() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridColumnAlign.prototype;

  /**
   * Do not prefix flexbox values
   */
  _proto.check = function check(decl) {
    return !decl.value.includes('flex-') && decl.value !== 'baseline';
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'grid-column-align';
  }
  /**
   * Change IE property back
   */
  ;

  _proto.normalize = function normalize() {
    return 'justify-self';
  };

  return GridColumnAlign;
}(declaration$1);

_defineProperty$H(GridColumnAlign, "names", ['grid-column-align']);

var gridColumnAlign = GridColumnAlign;

function _defaults$M(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$M(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$M(subClass, superClass); }

function _defineProperty$I(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var OverscrollBehavior = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$M(OverscrollBehavior, _Declaration);

  function OverscrollBehavior() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = OverscrollBehavior.prototype;

  /**
   * Change property name for IE
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'scroll-chaining';
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'overscroll-behavior';
  }
  /**
   * Change value for IE
   */
  ;

  _proto.set = function set(decl, prefix) {
    if (decl.value === 'auto') {
      decl.value = 'chained';
    } else if (decl.value === 'none' || decl.value === 'contain') {
      decl.value = 'none';
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return OverscrollBehavior;
}(declaration$1);

_defineProperty$I(OverscrollBehavior, "names", ['overscroll-behavior', 'scroll-chaining']);

var overscrollBehavior = OverscrollBehavior;

function _defaults$N(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$N(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$N(subClass, superClass); }

function _defineProperty$J(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var parseGridAreas$1 = gridUtils.parseGridAreas,
    warnMissedAreas$2 = gridUtils.warnMissedAreas,
    prefixTrackProp$2 = gridUtils.prefixTrackProp,
    prefixTrackValue$2 = gridUtils.prefixTrackValue,
    getGridGap$3 = gridUtils.getGridGap,
    warnGridGap$2 = gridUtils.warnGridGap,
    inheritGridGap$3 = gridUtils.inheritGridGap;

function getGridRows(tpl) {
  return tpl.trim().slice(1, -1).split(/["']\s*["']?/g);
}

var GridTemplateAreas = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$N(GridTemplateAreas, _Declaration);

  function GridTemplateAreas() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridTemplateAreas.prototype;

  /**
   * Translate grid-template-areas to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var hasColumns = false;
    var hasRows = false;
    var parent = decl.parent;
    var gap = getGridGap$3(decl);
    gap = inheritGridGap$3(decl, gap) || gap; // remove already prefixed rows
    // to prevent doubling prefixes

    parent.walkDecls(/-ms-grid-rows/, function (i) {
      return i.remove();
    }); // add empty tracks to rows

    parent.walkDecls(/grid-template-(rows|columns)/, function (trackDecl) {
      if (trackDecl.prop === 'grid-template-rows') {
        hasRows = true;
        var prop = trackDecl.prop,
            value = trackDecl.value;
        trackDecl.cloneBefore({
          prop: prefixTrackProp$2({
            prop: prop,
            prefix: prefix
          }),
          value: prefixTrackValue$2({
            value: value,
            gap: gap.row
          })
        });
      } else {
        hasColumns = true;
      }
    });
    var gridRows = getGridRows(decl.value);

    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: prefixTrackValue$2({
          value: "repeat(" + gridRows.length + ", auto)",
          gap: gap.row
        }),
        raws: {}
      });
    } // warnings


    warnGridGap$2({
      gap: gap,
      hasColumns: hasColumns,
      decl: decl,
      result: result
    });
    var areas = parseGridAreas$1({
      rows: gridRows,
      gap: gap
    });
    warnMissedAreas$2(areas, decl, result);
    return decl;
  };

  return GridTemplateAreas;
}(declaration$1);

_defineProperty$J(GridTemplateAreas, "names", ['grid-template-areas']);

var gridTemplateAreas = GridTemplateAreas;

function _defaults$O(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$O(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$O(subClass, superClass); }

function _defineProperty$K(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var TextEmphasisPosition = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$O(TextEmphasisPosition, _Declaration);

  function TextEmphasisPosition() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TextEmphasisPosition.prototype;

  _proto.set = function set(decl, prefix) {
    if (prefix === '-webkit-') {
      decl.value = decl.value.replace(/\s*(right|left)\s*/i, '');
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return TextEmphasisPosition;
}(declaration$1);

_defineProperty$K(TextEmphasisPosition, "names", ['text-emphasis-position']);

var textEmphasisPosition = TextEmphasisPosition;

function _defaults$P(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$P(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$P(subClass, superClass); }

function _defineProperty$L(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var TextDecorationSkipInk = /*#__PURE__*/function (_Declaration) {
  _inheritsLoose$P(TextDecorationSkipInk, _Declaration);

  function TextDecorationSkipInk() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TextDecorationSkipInk.prototype;

  /**
   * Change prefix for ink value
   */
  _proto.set = function set(decl, prefix) {
    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {
      decl.prop = prefix + 'text-decoration-skip';
      decl.value = 'ink';
      return decl;
    } else {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }
  };

  return TextDecorationSkipInk;
}(declaration$1);

_defineProperty$L(TextDecorationSkipInk, "names", ['text-decoration-skip-ink', 'text-decoration-skip']);

var textDecorationSkipInk = TextDecorationSkipInk;

var normalizeRange = {
  wrap: wrapRange,
  limit: limitRange,
  validate: validateRange,
  test: testRange,
  curry: curry,
  name: name
};

function wrapRange(min, max, value) {
  var maxLessMin = max - min;
  return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;
}

function limitRange(min, max, value) {
  return Math.max(min, Math.min(max, value));
}

function validateRange(min, max, value, minExclusive, maxExclusive) {
  if (!testRange(min, max, value, minExclusive, maxExclusive)) {
    throw new Error(value + ' is outside of range [' + min + ',' + max + ')');
  }
  return value;
}

function testRange(min, max, value, minExclusive, maxExclusive) {
  return !(
       value < min ||
       value > max ||
       (maxExclusive && (value === max)) ||
       (minExclusive && (value === min))
  );
}

function name(min, max, minExcl, maxExcl) {
  return (minExcl ? '(' : '[') + min + ',' + max + (maxExcl ? ')' : ']');
}

function curry(min, max, minExclusive, maxExclusive) {
  var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);
  return {
    wrap: wrapRange.bind(null, min, max),
    limit: limitRange.bind(null, min, max),
    validate: function(value) {
      return validateRange(min, max, value, minExclusive, maxExclusive);
    },
    test: function(value) {
      return testRange(min, max, value, minExclusive, maxExclusive);
    },
    toString: boundNameFn,
    name: boundNameFn
  };
}

function _defaults$Q(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _createForOfIteratorHelperLoose$d(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$d(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$d(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$d(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$d(o, minLen); }

function _arrayLikeToArray$d(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose$Q(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$Q(subClass, superClass); }

function _defineProperty$M(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











var IS_DIRECTION = /top|left|right|bottom/gi;

var Gradient = /*#__PURE__*/function (_Value) {
  _inheritsLoose$Q(Gradient, _Value);

  function Gradient() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Value.call.apply(_Value, [this].concat(args)) || this;

    _defineProperty$M(_assertThisInitialized(_this), "directions", {
      top: 'bottom',
      left: 'right',
      bottom: 'top',
      right: 'left'
    });

    _defineProperty$M(_assertThisInitialized(_this), "oldDirections", {
      'top': 'left bottom, left top',
      'left': 'right top, left top',
      'bottom': 'left top, left bottom',
      'right': 'left top, right top',
      'top right': 'left bottom, right top',
      'top left': 'right bottom, left top',
      'right top': 'left bottom, right top',
      'right bottom': 'left top, right bottom',
      'bottom right': 'left top, right bottom',
      'bottom left': 'right top, left bottom',
      'left top': 'right bottom, left top',
      'left bottom': 'right top, left bottom'
    });

    return _this;
  }

  var _proto = Gradient.prototype;

  /**
   * Change degrees for webkit prefix
   */
  _proto.replace = function replace(string, prefix) {
    var ast = lib(string);

    for (var _iterator = _createForOfIteratorHelperLoose$d(ast.nodes), _step; !(_step = _iterator()).done;) {
      var node = _step.value;

      if (node.type === 'function' && node.value === this.name) {
        node.nodes = this.newDirection(node.nodes);
        node.nodes = this.normalize(node.nodes);

        if (prefix === '-webkit- old') {
          var changes = this.oldWebkit(node);

          if (!changes) {
            return false;
          }
        } else {
          node.nodes = this.convertDirection(node.nodes);
          node.value = prefix + node.value;
        }
      }
    }

    return ast.toString();
  }
  /**
   * Replace first token
   */
  ;

  _proto.replaceFirst = function replaceFirst(params) {
    for (var _len2 = arguments.length, words = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      words[_key2 - 1] = arguments[_key2];
    }

    var prefix = words.map(function (i) {
      if (i === ' ') {
        return {
          type: 'space',
          value: i
        };
      }

      return {
        type: 'word',
        value: i
      };
    });
    return prefix.concat(params.slice(1));
  }
  /**
   * Convert angle unit to deg
   */
  ;

  _proto.normalizeUnit = function normalizeUnit(str, full) {
    var num = parseFloat(str);
    var deg = num / full * 360;
    return deg + "deg";
  }
  /**
   * Normalize angle
   */
  ;

  _proto.normalize = function normalize(nodes) {
    if (!nodes[0]) return nodes;

    if (/-?\d+(.\d+)?grad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 400);
    } else if (/-?\d+(.\d+)?rad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);
    } else if (/-?\d+(.\d+)?turn/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 1);
    } else if (nodes[0].value.includes('deg')) {
      var num = parseFloat(nodes[0].value);
      num = normalizeRange.wrap(0, 360, num);
      nodes[0].value = num + "deg";
    }

    if (nodes[0].value === '0deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'top');
    } else if (nodes[0].value === '90deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'right');
    } else if (nodes[0].value === '180deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');
    } else if (nodes[0].value === '270deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'left');
    }

    return nodes;
  }
  /**
   * Replace old direction to new
   */
  ;

  _proto.newDirection = function newDirection(params) {
    if (params[0].value === 'to') {
      return params;
    }

    IS_DIRECTION.lastIndex = 0; // reset search index of global regexp

    if (!IS_DIRECTION.test(params[0].value)) {
      return params;
    }

    params.unshift({
      type: 'word',
      value: 'to'
    }, {
      type: 'space',
      value: ' '
    });

    for (var i = 2; i < params.length; i++) {
      if (params[i].type === 'div') {
        break;
      }

      if (params[i].type === 'word') {
        params[i].value = this.revertDirection(params[i].value);
      }
    }

    return params;
  }
  /**
   * Look for at word
   */
  ;

  _proto.isRadial = function isRadial(params) {
    var state = 'before';

    for (var _iterator2 = _createForOfIteratorHelperLoose$d(params), _step2; !(_step2 = _iterator2()).done;) {
      var param = _step2.value;

      if (state === 'before' && param.type === 'space') {
        state = 'at';
      } else if (state === 'at' && param.value === 'at') {
        state = 'after';
      } else if (state === 'after' && param.type === 'space') {
        return true;
      } else if (param.type === 'div') {
        break;
      } else {
        state = 'before';
      }
    }

    return false;
  }
  /**
   * Change new direction to old
   */
  ;

  _proto.convertDirection = function convertDirection(params) {
    if (params.length > 0) {
      if (params[0].value === 'to') {
        this.fixDirection(params);
      } else if (params[0].value.includes('deg')) {
        this.fixAngle(params);
      } else if (this.isRadial(params)) {
        this.fixRadial(params);
      }
    }

    return params;
  }
  /**
   * Replace `to top left` to `bottom right`
   */
  ;

  _proto.fixDirection = function fixDirection(params) {
    params.splice(0, 2);

    for (var _iterator3 = _createForOfIteratorHelperLoose$d(params), _step3; !(_step3 = _iterator3()).done;) {
      var param = _step3.value;

      if (param.type === 'div') {
        break;
      }

      if (param.type === 'word') {
        param.value = this.revertDirection(param.value);
      }
    }
  }
  /**
   * Add 90 degrees
   */
  ;

  _proto.fixAngle = function fixAngle(params) {
    var first = params[0].value;
    first = parseFloat(first);
    first = Math.abs(450 - first) % 360;
    first = this.roundFloat(first, 3);
    params[0].value = first + "deg";
  }
  /**
   * Fix radial direction syntax
   */
  ;

  _proto.fixRadial = function fixRadial(params) {
    var first = [];
    var second = [];
    var a, b, c, i, next;

    for (i = 0; i < params.length - 2; i++) {
      a = params[i];
      b = params[i + 1];
      c = params[i + 2];

      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {
        next = i + 3;
        break;
      } else {
        first.push(a);
      }
    }

    var div;

    for (i = next; i < params.length; i++) {
      if (params[i].type === 'div') {
        div = params[i];
        break;
      } else {
        second.push(params[i]);
      }
    }

    params.splice.apply(params, [0, i].concat(second, [div], first));
  };

  _proto.revertDirection = function revertDirection(word) {
    return this.directions[word.toLowerCase()] || word;
  }
  /**
   * Round float and save digits under dot
   */
  ;

  _proto.roundFloat = function roundFloat(_float, digits) {
    return parseFloat(_float.toFixed(digits));
  }
  /**
   * Convert to old webkit syntax
   */
  ;

  _proto.oldWebkit = function oldWebkit(node) {
    var nodes = node.nodes;
    var string = lib.stringify(node.nodes);

    if (this.name !== 'linear-gradient') {
      return false;
    }

    if (nodes[0] && nodes[0].value.includes('deg')) {
      return false;
    }

    if (string.includes('px') || string.includes('-corner') || string.includes('-side')) {
      return false;
    }

    var params = [[]];

    for (var _iterator4 = _createForOfIteratorHelperLoose$d(nodes), _step4; !(_step4 = _iterator4()).done;) {
      var i = _step4.value;
      params[params.length - 1].push(i);

      if (i.type === 'div' && i.value === ',') {
        params.push([]);
      }
    }

    this.oldDirection(params);
    this.colorStops(params);
    node.nodes = [];

    for (var _i = 0, _params = params; _i < _params.length; _i++) {
      var param = _params[_i];
      node.nodes = node.nodes.concat(param);
    }

    node.nodes.unshift({
      type: 'word',
      value: 'linear'
    }, this.cloneDiv(node.nodes));
    node.value = '-webkit-gradient';
    return true;
  }
  /**
   * Change direction syntax to old webkit
   */
  ;

  _proto.oldDirection = function oldDirection(params) {
    var div = this.cloneDiv(params[0]);

    if (params[0][0].value !== 'to') {
      return params.unshift([{
        type: 'word',
        value: this.oldDirections.bottom
      }, div]);
    } else {
      var words = [];

      for (var _iterator5 = _createForOfIteratorHelperLoose$d(params[0].slice(2)), _step5; !(_step5 = _iterator5()).done;) {
        var node = _step5.value;

        if (node.type === 'word') {
          words.push(node.value.toLowerCase());
        }
      }

      words = words.join(' ');
      var old = this.oldDirections[words] || words;
      params[0] = [{
        type: 'word',
        value: old
      }, div];
      return params[0];
    }
  }
  /**
   * Get div token from exists parameters
   */
  ;

  _proto.cloneDiv = function cloneDiv(params) {
    for (var _iterator6 = _createForOfIteratorHelperLoose$d(params), _step6; !(_step6 = _iterator6()).done;) {
      var i = _step6.value;

      if (i.type === 'div' && i.value === ',') {
        return i;
      }
    }

    return {
      type: 'div',
      value: ',',
      after: ' '
    };
  }
  /**
   * Change colors syntax to old webkit
   */
  ;

  _proto.colorStops = function colorStops(params) {
    var result = [];

    for (var i = 0; i < params.length; i++) {
      var pos = void 0;
      var param = params[i];
      var item = void 0;

      if (i === 0) {
        continue;
      }

      var color = lib.stringify(param[0]);

      if (param[1] && param[1].type === 'word') {
        pos = param[1].value;
      } else if (param[2] && param[2].type === 'word') {
        pos = param[2].value;
      }

      var stop = void 0;

      if (i === 1 && (!pos || pos === '0%')) {
        stop = "from(" + color + ")";
      } else if (i === params.length - 1 && (!pos || pos === '100%')) {
        stop = "to(" + color + ")";
      } else if (pos) {
        stop = "color-stop(" + pos + ", " + color + ")";
      } else {
        stop = "color-stop(" + color + ")";
      }

      var div = param[param.length - 1];
      params[i] = [{
        type: 'word',
        value: stop
      }];

      if (div.type === 'div' && div.value === ',') {
        item = params[i].push(div);
      }

      result.push(item);
    }

    return result;
  }
  /**
   * Remove old WebKit gradient too
   */
  ;

  _proto.old = function old(prefix) {
    if (prefix === '-webkit-') {
      var type = this.name === 'linear-gradient' ? 'linear' : 'radial';
      var string = '-gradient';
      var regexp = utils.regexp("-webkit-(" + type + "-gradient|gradient\\(\\s*" + type + ")", false);
      return new oldValue(this.name, prefix + this.name, string, regexp);
    } else {
      return _Value.prototype.old.call(this, prefix);
    }
  }
  /**
   * Do not add non-webkit prefixes for list-style and object
   */
  ;

  _proto.add = function add(decl, prefix) {
    var p = decl.prop;

    if (p.includes('mask')) {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return _Value.prototype.add.call(this, decl, prefix);
      }
    } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return _Value.prototype.add.call(this, decl, prefix);
      }
    } else {
      return _Value.prototype.add.call(this, decl, prefix);
    }

    return undefined;
  };

  return Gradient;
}(value);

_defineProperty$M(Gradient, "names", ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient']);

var gradient = Gradient;

function _defaults$R(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$R(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$R(subClass, superClass); }

function _defineProperty$N(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





function _regexp(name) {
  return new RegExp("(^|[\\s,(])(" + name + "($|[\\s),]))", 'gi');
}

var Intrinsic = /*#__PURE__*/function (_Value) {
  _inheritsLoose$R(Intrinsic, _Value);

  function Intrinsic() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = Intrinsic.prototype;

  _proto.regexp = function regexp() {
    if (!this.regexpCache) this.regexpCache = _regexp(this.name);
    return this.regexpCache;
  };

  _proto.isStretch = function isStretch() {
    return this.name === 'stretch' || this.name === 'fill' || this.name === 'fill-available';
  };

  _proto.replace = function replace(string, prefix) {
    if (prefix === '-moz-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-moz-available$3');
    }

    if (prefix === '-webkit-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-webkit-fill-available$3');
    }

    return _Value.prototype.replace.call(this, string, prefix);
  };

  _proto.old = function old(prefix) {
    var prefixed = prefix + this.name;

    if (this.isStretch()) {
      if (prefix === '-moz-') {
        prefixed = '-moz-available';
      } else if (prefix === '-webkit-') {
        prefixed = '-webkit-fill-available';
      }
    }

    return new oldValue(this.name, prefixed, prefixed, _regexp(prefixed));
  };

  _proto.add = function add(decl, prefix) {
    if (decl.prop.includes('grid') && prefix !== '-webkit-') {
      return undefined;
    }

    return _Value.prototype.add.call(this, decl, prefix);
  };

  return Intrinsic;
}(value);

_defineProperty$N(Intrinsic, "names", ['max-content', 'min-content', 'fit-content', 'fill', 'fill-available', 'stretch']);

var intrinsic = Intrinsic;

function _defaults$S(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$S(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$S(subClass, superClass); }

function _defineProperty$O(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var Pixelated = /*#__PURE__*/function (_Value) {
  _inheritsLoose$S(Pixelated, _Value);

  function Pixelated() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = Pixelated.prototype;

  /**
   * Use non-standard name for WebKit and Firefox
   */
  _proto.replace = function replace(string, prefix) {
    if (prefix === '-webkit-') {
      return string.replace(this.regexp(), '$1-webkit-optimize-contrast');
    }

    if (prefix === '-moz-') {
      return string.replace(this.regexp(), '$1-moz-crisp-edges');
    }

    return _Value.prototype.replace.call(this, string, prefix);
  }
  /**
   * Different name for WebKit and Firefox
   */
  ;

  _proto.old = function old(prefix) {
    if (prefix === '-webkit-') {
      return new oldValue(this.name, '-webkit-optimize-contrast');
    }

    if (prefix === '-moz-') {
      return new oldValue(this.name, '-moz-crisp-edges');
    }

    return _Value.prototype.old.call(this, prefix);
  };

  return Pixelated;
}(value);

_defineProperty$O(Pixelated, "names", ['pixelated']);

var pixelated = Pixelated;

function _defaults$T(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$T(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$T(subClass, superClass); }

function _defineProperty$P(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var ImageSet = /*#__PURE__*/function (_Value) {
  _inheritsLoose$T(ImageSet, _Value);

  function ImageSet() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = ImageSet.prototype;

  /**
   * Use non-standard name for WebKit and Firefox
   */
  _proto.replace = function replace(string, prefix) {
    var fixed = _Value.prototype.replace.call(this, string, prefix);

    if (prefix === '-webkit-') {
      fixed = fixed.replace(/("[^"]+"|'[^']+')(\s+\d+\w)/gi, 'url($1)$2');
    }

    return fixed;
  };

  return ImageSet;
}(value);

_defineProperty$P(ImageSet, "names", ['image-set']);

var imageSet = ImageSet;

function _defaults$U(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$U(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$U(subClass, superClass); }

function _defineProperty$Q(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var list$5 = postcss_1.list;



var CrossFade = /*#__PURE__*/function (_Value) {
  _inheritsLoose$U(CrossFade, _Value);

  function CrossFade() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = CrossFade.prototype;

  _proto.replace = function replace(string, prefix) {
    var _this = this;

    return list$5.space(string).map(function (value) {
      if (value.slice(0, +_this.name.length + 1) !== _this.name + '(') {
        return value;
      }

      var close = value.lastIndexOf(')');
      var after = value.slice(close + 1);
      var args = value.slice(_this.name.length + 1, close);

      if (prefix === '-webkit-') {
        var match = args.match(/\d*.?\d+%?/);

        if (match) {
          args = args.slice(match[0].length).trim();
          args += ", " + match[0];
        } else {
          args += ', 0.5';
        }
      }

      return prefix + _this.name + '(' + args + ')' + after;
    }).join(' ');
  };

  return CrossFade;
}(value);

_defineProperty$Q(CrossFade, "names", ['cross-fade']);

var crossFade = CrossFade;

function _defaults$V(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$V(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$V(subClass, superClass); }

function _defineProperty$R(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







var DisplayFlex = /*#__PURE__*/function (_Value) {
  _inheritsLoose$V(DisplayFlex, _Value);

  function DisplayFlex(name, prefixes) {
    var _this;

    _this = _Value.call(this, name, prefixes) || this;

    if (name === 'display-flex') {
      _this.name = 'flex';
    }

    return _this;
  }
  /**
   * Faster check for flex value
   */


  var _proto = DisplayFlex.prototype;

  _proto.check = function check(decl) {
    return decl.prop === 'display' && decl.value === this.name;
  }
  /**
   * Return value by spec
   */
  ;

  _proto.prefixed = function prefixed(prefix) {
    var spec, value;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      if (this.name === 'flex') {
        value = 'box';
      } else {
        value = 'inline-box';
      }
    } else if (spec === 2012) {
      if (this.name === 'flex') {
        value = 'flexbox';
      } else {
        value = 'inline-flexbox';
      }
    } else if (spec === 'final') {
      value = this.name;
    }

    return prefix + value;
  }
  /**
   * Add prefix to value depend on flebox spec version
   */
  ;

  _proto.replace = function replace(string, prefix) {
    return this.prefixed(prefix);
  }
  /**
   * Change value for old specs
   */
  ;

  _proto.old = function old(prefix) {
    var prefixed = this.prefixed(prefix);
    if (!prefixed) return undefined;
    return new oldValue(this.name, prefixed);
  };

  return DisplayFlex;
}(value);

_defineProperty$R(DisplayFlex, "names", ['display-flex', 'inline-flex']);

var displayFlex = DisplayFlex;

function _defaults$W(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$W(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$W(subClass, superClass); }

function _defineProperty$S(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var DisplayGrid = /*#__PURE__*/function (_Value) {
  _inheritsLoose$W(DisplayGrid, _Value);

  function DisplayGrid(name, prefixes) {
    var _this;

    _this = _Value.call(this, name, prefixes) || this;

    if (name === 'display-grid') {
      _this.name = 'grid';
    }

    return _this;
  }
  /**
   * Faster check for flex value
   */


  var _proto = DisplayGrid.prototype;

  _proto.check = function check(decl) {
    return decl.prop === 'display' && decl.value === this.name;
  };

  return DisplayGrid;
}(value);

_defineProperty$S(DisplayGrid, "names", ['display-grid', 'inline-grid']);

var displayGrid = DisplayGrid;

function _defaults$X(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose$X(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults$X(subClass, superClass); }

function _defineProperty$T(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var FilterValue = /*#__PURE__*/function (_Value) {
  _inheritsLoose$X(FilterValue, _Value);

  function FilterValue(name, prefixes) {
    var _this;

    _this = _Value.call(this, name, prefixes) || this;

    if (name === 'filter-function') {
      _this.name = 'filter';
    }

    return _this;
  }

  return FilterValue;
}(value);

_defineProperty$T(FilterValue, "names", ['filter', 'filter-function']);

var filterValue = FilterValue;

function _createForOfIteratorHelperLoose$e(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$e(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$e(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$e(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$e(o, minLen); }

function _arrayLikeToArray$e(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var vendor$3 = postcss_1.vendor;





















selector.hack(fullscreen$1);
selector.hack(placeholder);
selector.hack(placeholderShown);
declaration$1.hack(flex);
declaration$1.hack(order);
declaration$1.hack(filter);
declaration$1.hack(gridEnd);
declaration$1.hack(animation);
declaration$1.hack(flexFlow);
declaration$1.hack(flexGrow);
declaration$1.hack(flexWrap);
declaration$1.hack(gridArea);
declaration$1.hack(placeSelf);
declaration$1.hack(gridStart);
declaration$1.hack(alignSelf);
declaration$1.hack(appearance);
declaration$1.hack(flexBasis);
declaration$1.hack(maskBorder);
declaration$1.hack(maskComposite);
declaration$1.hack(alignItems);
declaration$1.hack(userSelect);
declaration$1.hack(flexShrink);
declaration$1.hack(breakProps);
declaration$1.hack(colorAdjust);
declaration$1.hack(writingMode);
declaration$1.hack(borderImage$1);
declaration$1.hack(alignContent);
declaration$1.hack(borderRadius$1);
declaration$1.hack(blockLogical);
declaration$1.hack(gridTemplate);
declaration$1.hack(inlineLogical);
declaration$1.hack(gridRowAlign);
declaration$1.hack(transformDecl);
declaration$1.hack(flexDirection);
declaration$1.hack(imageRendering);
declaration$1.hack(backdropFilter);
declaration$1.hack(backgroundClip);
declaration$1.hack(textDecoration$1);
declaration$1.hack(justifyContent);
declaration$1.hack(backgroundSize);
declaration$1.hack(gridRowColumn);
declaration$1.hack(gridRowsColumns);
declaration$1.hack(gridColumnAlign);
declaration$1.hack(overscrollBehavior);
declaration$1.hack(gridTemplateAreas);
declaration$1.hack(textEmphasisPosition);
declaration$1.hack(textDecorationSkipInk);
value.hack(gradient);
value.hack(intrinsic);
value.hack(pixelated);
value.hack(imageSet);
value.hack(crossFade);
value.hack(displayFlex);
value.hack(displayGrid);
value.hack(filterValue);
var declsCache = {};

var Prefixes = /*#__PURE__*/function () {
  function Prefixes(data, browsers, options) {
    if (options === void 0) {
      options = {};
    }

    this.data = data;
    this.browsers = browsers;
    this.options = options;

    var _this$preprocess = this.preprocess(this.select(this.data));

    this.add = _this$preprocess[0];
    this.remove = _this$preprocess[1];
    this.transition = new transition(this);
    this.processor = new processor$1(this);
  }
  /**
   * Return clone instance to remove all prefixes
   */


  var _proto = Prefixes.prototype;

  _proto.cleaner = function cleaner() {
    if (this.cleanerCache) {
      return this.cleanerCache;
    }

    if (this.browsers.selected.length) {
      var empty = new browsers$1(this.browsers.data, []);
      this.cleanerCache = new Prefixes(this.data, empty, this.options);
    } else {
      return this;
    }

    return this.cleanerCache;
  }
  /**
   * Select prefixes from data, which is necessary for selected browsers
   */
  ;

  _proto.select = function select(list) {
    var _this = this;

    var selected = {
      add: {},
      remove: {}
    };

    var _loop = function _loop(name) {
      var data = list[name];
      var add = data.browsers.map(function (i) {
        var params = i.split(' ');
        return {
          browser: params[0] + " " + params[1],
          note: params[2]
        };
      });
      var notes = add.filter(function (i) {
        return i.note;
      }).map(function (i) {
        return _this.browsers.prefix(i.browser) + " " + i.note;
      });
      notes = utils.uniq(notes);
      add = add.filter(function (i) {
        return _this.browsers.isSelected(i.browser);
      }).map(function (i) {
        var prefix = _this.browsers.prefix(i.browser);

        if (i.note) {
          return prefix + " " + i.note;
        } else {
          return prefix;
        }
      });
      add = _this.sort(utils.uniq(add));

      if (_this.options.flexbox === 'no-2009') {
        add = add.filter(function (i) {
          return !i.includes('2009');
        });
      }

      var all = data.browsers.map(function (i) {
        return _this.browsers.prefix(i);
      });

      if (data.mistakes) {
        all = all.concat(data.mistakes);
      }

      all = all.concat(notes);
      all = utils.uniq(all);

      if (add.length) {
        selected.add[name] = add;

        if (add.length < all.length) {
          selected.remove[name] = all.filter(function (i) {
            return !add.includes(i);
          });
        }
      } else {
        selected.remove[name] = all;
      }
    };

    for (var name in list) {
      _loop(name);
    }

    return selected;
  }
  /**
   * Sort vendor prefixes
   */
  ;

  _proto.sort = function sort(prefixes) {
    return prefixes.sort(function (a, b) {
      var aLength = utils.removeNote(a).length;
      var bLength = utils.removeNote(b).length;

      if (aLength === bLength) {
        return b.length - a.length;
      } else {
        return bLength - aLength;
      }
    });
  }
  /**
   * Cache prefixes data to fast CSS processing
   */
  ;

  _proto.preprocess = function preprocess(selected) {
    var add = {
      'selectors': [],
      '@supports': new supports(Prefixes, this)
    };

    for (var name in selected.add) {
      var prefixes = selected.add[name];

      if (name === '@keyframes' || name === '@viewport') {
        add[name] = new atRule$1(name, prefixes, this);
      } else if (name === '@resolution') {
        add[name] = new resolution(name, prefixes, this);
      } else if (this.data[name].selector) {
        add.selectors.push(selector.load(name, prefixes, this));
      } else {
        var props = this.data[name].props;

        if (props) {
          var value$1 = value.load(name, prefixes, this);

          for (var _iterator = _createForOfIteratorHelperLoose$e(props), _step; !(_step = _iterator()).done;) {
            var prop = _step.value;

            if (!add[prop]) {
              add[prop] = {
                values: []
              };
            }

            add[prop].values.push(value$1);
          }
        } else {
          var values = add[name] && add[name].values || [];
          add[name] = declaration$1.load(name, prefixes, this);
          add[name].values = values;
        }
      }
    }

    var remove = {
      selectors: []
    };

    for (var _name in selected.remove) {
      var _prefixes = selected.remove[_name];

      if (this.data[_name].selector) {
        var selector$1 = selector.load(_name, _prefixes);

        for (var _iterator2 = _createForOfIteratorHelperLoose$e(_prefixes), _step2; !(_step2 = _iterator2()).done;) {
          var prefix = _step2.value;
          remove.selectors.push(selector$1.old(prefix));
        }
      } else if (_name === '@keyframes' || _name === '@viewport') {
        for (var _iterator3 = _createForOfIteratorHelperLoose$e(_prefixes), _step3; !(_step3 = _iterator3()).done;) {
          var _prefix = _step3.value;

          var prefixed = "@" + _prefix + _name.slice(1);

          remove[prefixed] = {
            remove: true
          };
        }
      } else if (_name === '@resolution') {
        remove[_name] = new resolution(_name, _prefixes, this);
      } else {
        var _props = this.data[_name].props;

        if (_props) {
          var _value = value.load(_name, [], this);

          for (var _iterator4 = _createForOfIteratorHelperLoose$e(_prefixes), _step4; !(_step4 = _iterator4()).done;) {
            var _prefix2 = _step4.value;

            var old = _value.old(_prefix2);

            if (old) {
              for (var _iterator5 = _createForOfIteratorHelperLoose$e(_props), _step5; !(_step5 = _iterator5()).done;) {
                var _prop = _step5.value;

                if (!remove[_prop]) {
                  remove[_prop] = {};
                }

                if (!remove[_prop].values) {
                  remove[_prop].values = [];
                }

                remove[_prop].values.push(old);
              }
            }
          }
        } else {
          for (var _iterator6 = _createForOfIteratorHelperLoose$e(_prefixes), _step6; !(_step6 = _iterator6()).done;) {
            var p = _step6.value;
            var olds = this.decl(_name).old(_name, p);

            if (_name === 'align-self') {
              var a = add[_name] && add[_name].prefixes;

              if (a) {
                if (p === '-webkit- 2009' && a.includes('-webkit-')) {
                  continue;
                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {
                  continue;
                }
              }
            }

            for (var _iterator7 = _createForOfIteratorHelperLoose$e(olds), _step7; !(_step7 = _iterator7()).done;) {
              var _prefixed = _step7.value;

              if (!remove[_prefixed]) {
                remove[_prefixed] = {};
              }

              remove[_prefixed].remove = true;
            }
          }
        }
      }
    }

    return [add, remove];
  }
  /**
     * Declaration loader with caching
     */
  ;

  _proto.decl = function decl(prop) {
    var decl = declsCache[prop];

    if (decl) {
      return decl;
    } else {
      declsCache[prop] = declaration$1.load(prop);
      return declsCache[prop];
    }
  }
  /**
   * Return unprefixed version of property
   */
  ;

  _proto.unprefixed = function unprefixed(prop) {
    var value = this.normalize(vendor$3.unprefixed(prop));

    if (value === 'flex-direction') {
      value = 'flex-flow';
    }

    return value;
  }
  /**
   * Normalize prefix for remover
   */
  ;

  _proto.normalize = function normalize(prop) {
    return this.decl(prop).normalize(prop);
  }
  /**
   * Return prefixed version of property
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    prop = vendor$3.unprefixed(prop);
    return this.decl(prop).prefixed(prop, prefix);
  }
  /**
   * Return values, which must be prefixed in selected property
   */
  ;

  _proto.values = function values(type, prop) {
    var data = this[type];
    var global = data['*'] && data['*'].values;
    var values = data[prop] && data[prop].values;

    if (global && values) {
      return utils.uniq(global.concat(values));
    } else {
      return global || values || [];
    }
  }
  /**
   * Group declaration by unprefixed property to check them
   */
  ;

  _proto.group = function group(decl) {
    var _this2 = this;

    var rule = decl.parent;
    var index = rule.index(decl);
    var length = rule.nodes.length;
    var unprefixed = this.unprefixed(decl.prop);

    var checker = function checker(step, callback) {
      index += step;

      while (index >= 0 && index < length) {
        var other = rule.nodes[index];

        if (other.type === 'decl') {
          if (step === -1 && other.prop === unprefixed) {
            if (!browsers$1.withPrefix(other.value)) {
              break;
            }
          }

          if (_this2.unprefixed(other.prop) !== unprefixed) {
            break;
          } else if (callback(other) === true) {
            return true;
          }

          if (step === +1 && other.prop === unprefixed) {
            if (!browsers$1.withPrefix(other.value)) {
              break;
            }
          }
        }

        index += step;
      }

      return false;
    };

    return {
      up: function up(callback) {
        return checker(-1, callback);
      },
      down: function down(callback) {
        return checker(+1, callback);
      }
    };
  };

  return Prefixes;
}();

var prefixes = Prefixes;

function _createForOfIteratorHelperLoose$f(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$f(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$f(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$f(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$f(o, minLen); }

function _arrayLikeToArray$f(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var unpack = unpacker.feature;

function browsersSort(a, b) {
  a = a.split(' ');
  b = b.split(' ');

  if (a[0] > b[0]) {
    return 1;
  } else if (a[0] < b[0]) {
    return -1;
  } else {
    return Math.sign(parseFloat(a[1]) - parseFloat(b[1]));
  }
} // Convert Can I Use data


function f(data, opts, callback) {
  data = unpack(data);

  if (!callback) {
    var _ref = [opts, {}];
    callback = _ref[0];
    opts = _ref[1];
  }

  var match = opts.match || /\sx($|\s)/;
  var need = [];

  for (var browser in data.stats) {
    var versions = data.stats[browser];

    for (var version in versions) {
      var support = versions[version];

      if (support.match(match)) {
        need.push(browser + ' ' + version);
      }
    }
  }

  callback(need.sort(browsersSort));
} // Add data for all properties


var result$1 = {};

function prefix(names, data) {
  for (var _iterator = _createForOfIteratorHelperLoose$f(names), _step; !(_step = _iterator()).done;) {
    var name = _step.value;
    result$1[name] = Object.assign({}, data);
  }
}

function add(names, data) {
  for (var _iterator2 = _createForOfIteratorHelperLoose$f(names), _step2; !(_step2 = _iterator2()).done;) {
    var name = _step2.value;
    result$1[name].browsers = result$1[name].browsers.concat(data.browsers).sort(browsersSort);
  }
}

var prefixes$1 = result$1; // Border Radius

f(borderRadius, function (browsers) {
  return prefix(['border-radius', 'border-top-left-radius', 'border-top-right-radius', 'border-bottom-right-radius', 'border-bottom-left-radius'], {
    mistakes: ['-khtml-', '-ms-', '-o-'],
    feature: 'border-radius',
    browsers: browsers
  });
}); // Box Shadow

f(cssBoxshadow, function (browsers) {
  return prefix(['box-shadow'], {
    mistakes: ['-khtml-'],
    feature: 'css-boxshadow',
    browsers: browsers
  });
}); // Animation

f(cssAnimation, function (browsers) {
  return prefix(['animation', 'animation-name', 'animation-duration', 'animation-delay', 'animation-direction', 'animation-fill-mode', 'animation-iteration-count', 'animation-play-state', 'animation-timing-function', '@keyframes'], {
    mistakes: ['-khtml-', '-ms-'],
    feature: 'css-animation',
    browsers: browsers
  });
}); // Transition

f(cssTransitions, function (browsers) {
  return prefix(['transition', 'transition-property', 'transition-duration', 'transition-delay', 'transition-timing-function'], {
    mistakes: ['-khtml-', '-ms-'],
    browsers: browsers,
    feature: 'css-transitions'
  });
}); // Transform 2D

f(transforms2d, function (browsers) {
  return prefix(['transform', 'transform-origin'], {
    feature: 'transforms2d',
    browsers: browsers
  });
}); // Transform 3D



f(transforms3d, function (browsers) {
  prefix(['perspective', 'perspective-origin'], {
    feature: 'transforms3d',
    browsers: browsers
  });
  return prefix(['transform-style'], {
    mistakes: ['-ms-', '-o-'],
    browsers: browsers,
    feature: 'transforms3d'
  });
});
f(transforms3d, {
  match: /y\sx|y\s#2/
}, function (browsers) {
  return prefix(['backface-visibility'], {
    mistakes: ['-ms-', '-o-'],
    feature: 'transforms3d',
    browsers: browsers
  });
}); // Gradients



f(cssGradients, {
  match: /y\sx/
}, function (browsers) {
  return prefix(['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    mistakes: ['-ms-'],
    feature: 'css-gradients',
    browsers: browsers
  });
});
f(cssGradients, {
  match: /a\sx/
}, function (browsers) {
  browsers = browsers.map(function (i) {
    if (/firefox|op/.test(i)) {
      return i;
    } else {
      return i + " old";
    }
  });
  return add(['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'], {
    feature: 'css-gradients',
    browsers: browsers
  });
}); // Box sizing

f(css3Boxsizing, function (browsers) {
  return prefix(['box-sizing'], {
    feature: 'css3-boxsizing',
    browsers: browsers
  });
}); // Filter Effects

f(cssFilters, function (browsers) {
  return prefix(['filter'], {
    feature: 'css-filters',
    browsers: browsers
  });
}); // filter() function

f(cssFilterFunction, function (browsers) {
  return prefix(['filter-function'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    feature: 'css-filter-function',
    browsers: browsers
  });
}); // Backdrop-filter



f(cssBackdropFilter, {
  match: /y\sx|y\s#2/
}, function (browsers) {
  return prefix(['backdrop-filter'], {
    feature: 'css-backdrop-filter',
    browsers: browsers
  });
}); // element() function

f(cssElementFunction, function (browsers) {
  return prefix(['element'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    feature: 'css-element-function',
    browsers: browsers
  });
}); // Multicolumns

f(multicolumn, function (browsers) {
  prefix(['columns', 'column-width', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-width', 'column-count', 'column-rule-style', 'column-span', 'column-fill'], {
    feature: 'multicolumn',
    browsers: browsers
  });
  var noff = browsers.filter(function (i) {
    return !/firefox/.test(i);
  });
  prefix(['break-before', 'break-after', 'break-inside'], {
    feature: 'multicolumn',
    browsers: noff
  });
}); // User select

f(userSelectNone, function (browsers) {
  return prefix(['user-select'], {
    mistakes: ['-khtml-'],
    feature: 'user-select-none',
    browsers: browsers
  });
}); // Flexible Box Layout



f(flexbox, {
  match: /a\sx/
}, function (browsers) {
  browsers = browsers.map(function (i) {
    if (/ie|firefox/.test(i)) {
      return i;
    } else {
      return i + " 2009";
    }
  });
  prefix(['display-flex', 'inline-flex'], {
    props: ['display'],
    feature: 'flexbox',
    browsers: browsers
  });
  prefix(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers: browsers
  });
  prefix(['flex-direction', 'flex-wrap', 'flex-flow', 'justify-content', 'order', 'align-items', 'align-self', 'align-content'], {
    feature: 'flexbox',
    browsers: browsers
  });
});
f(flexbox, {
  match: /y\sx/
}, function (browsers) {
  add(['display-flex', 'inline-flex'], {
    feature: 'flexbox',
    browsers: browsers
  });
  add(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers: browsers
  });
  add(['flex-direction', 'flex-wrap', 'flex-flow', 'justify-content', 'order', 'align-items', 'align-self', 'align-content'], {
    feature: 'flexbox',
    browsers: browsers
  });
}); // calc() unit

f(calc, function (browsers) {
  return prefix(['calc'], {
    props: ['*'],
    feature: 'calc',
    browsers: browsers
  });
}); // Background options

f(backgroundImgOpts, function (browsers) {
  return prefix(['background-origin', 'background-size'], {
    feature: 'background-img-opts',
    browsers: browsers
  });
}); // background-clip: text

f(backgroundClipText, function (browsers) {
  return prefix(['background-clip'], {
    feature: 'background-clip-text',
    browsers: browsers
  });
}); // Font feature settings

f(fontFeature, function (browsers) {
  return prefix(['font-feature-settings', 'font-variant-ligatures', 'font-language-override'], {
    feature: 'font-feature',
    browsers: browsers
  });
}); // CSS font-kerning property

f(fontKerning, function (browsers) {
  return prefix(['font-kerning'], {
    feature: 'font-kerning',
    browsers: browsers
  });
}); // Border image

f(borderImage, function (browsers) {
  return prefix(['border-image'], {
    feature: 'border-image',
    browsers: browsers
  });
}); // Selection selector

f(cssSelection, function (browsers) {
  return prefix(['::selection'], {
    selector: true,
    feature: 'css-selection',
    browsers: browsers
  });
}); // Placeholder selector

f(cssPlaceholder, function (browsers) {
  prefix(['::placeholder'], {
    selector: true,
    feature: 'css-placeholder',
    browsers: browsers.concat(['ie 10 old', 'ie 11 old', 'firefox 18 old'])
  });
}); // Placeholder-shown selector

f(cssPlaceholderShown, function (browsers) {
  prefix([':placeholder-shown'], {
    selector: true,
    feature: 'css-placeholder-shown',
    browsers: browsers
  });
}); // Hyphenation

f(cssHyphens, function (browsers) {
  return prefix(['hyphens'], {
    feature: 'css-hyphens',
    browsers: browsers
  });
}); // Fullscreen selector



f(fullscreen, function (browsers) {
  return prefix([':fullscreen'], {
    selector: true,
    feature: 'fullscreen',
    browsers: browsers
  });
});
f(fullscreen, {
  match: /x(\s#2|$)/
}, function (browsers) {
  return prefix(['::backdrop'], {
    selector: true,
    feature: 'fullscreen',
    browsers: browsers
  });
}); // Tab size

f(css3Tabsize, function (browsers) {
  return prefix(['tab-size'], {
    feature: 'css3-tabsize',
    browsers: browsers
  });
}); // Intrinsic & extrinsic sizing



var sizeProps = ['width', 'min-width', 'max-width', 'height', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size', 'grid', 'grid-template', 'grid-template-rows', 'grid-template-columns', 'grid-auto-columns', 'grid-auto-rows'];
f(intrinsicWidth, function (browsers) {
  return prefix(['max-content', 'min-content'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers: browsers
  });
});
f(intrinsicWidth, {
  match: /x|\s#4/
}, function (browsers) {
  return prefix(['fill', 'fill-available', 'stretch'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers: browsers
  });
});
f(intrinsicWidth, {
  match: /x|\s#5/
}, function (browsers) {
  return prefix(['fit-content'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers: browsers
  });
}); // Zoom cursors

f(css3CursorsNewer, function (browsers) {
  return prefix(['zoom-in', 'zoom-out'], {
    props: ['cursor'],
    feature: 'css3-cursors-newer',
    browsers: browsers
  });
}); // Grab cursors

f(css3CursorsGrab, function (browsers) {
  return prefix(['grab', 'grabbing'], {
    props: ['cursor'],
    feature: 'css3-cursors-grab',
    browsers: browsers
  });
}); // Sticky position

f(cssSticky, function (browsers) {
  return prefix(['sticky'], {
    props: ['position'],
    feature: 'css-sticky',
    browsers: browsers
  });
}); // Pointer Events

f(pointer, function (browsers) {
  return prefix(['touch-action'], {
    feature: 'pointer',
    browsers: browsers
  });
}); // Text decoration



f(textDecoration, function (browsers) {
  return prefix(['text-decoration-style', 'text-decoration-color', 'text-decoration-line', 'text-decoration'], {
    feature: 'text-decoration',
    browsers: browsers
  });
});
f(textDecoration, {
  match: /x.*#[235]/
}, function (browsers) {
  return prefix(['text-decoration-skip', 'text-decoration-skip-ink'], {
    feature: 'text-decoration',
    browsers: browsers
  });
}); // Text Size Adjust

f(textSizeAdjust, function (browsers) {
  return prefix(['text-size-adjust'], {
    feature: 'text-size-adjust',
    browsers: browsers
  });
}); // CSS Masks

f(cssMasks, function (browsers) {
  prefix(['mask-clip', 'mask-composite', 'mask-image', 'mask-origin', 'mask-repeat', 'mask-border-repeat', 'mask-border-source'], {
    feature: 'css-masks',
    browsers: browsers
  });
  prefix(['mask', 'mask-position', 'mask-size', 'mask-border', 'mask-border-outset', 'mask-border-width', 'mask-border-slice'], {
    feature: 'css-masks',
    browsers: browsers
  });
}); // CSS clip-path property

f(cssClipPath, function (browsers) {
  return prefix(['clip-path'], {
    feature: 'css-clip-path',
    browsers: browsers
  });
}); // Fragmented Borders and Backgrounds

f(cssBoxdecorationbreak, function (browsers) {
  return prefix(['box-decoration-break'], {
    feature: 'css-boxdecorationbreak',
    browsers: browsers
  });
}); // CSS3 object-fit/object-position

f(objectFit, function (browsers) {
  return prefix(['object-fit', 'object-position'], {
    feature: 'object-fit',
    browsers: browsers
  });
}); // CSS Shapes

f(cssShapes, function (browsers) {
  return prefix(['shape-margin', 'shape-outside', 'shape-image-threshold'], {
    feature: 'css-shapes',
    browsers: browsers
  });
}); // CSS3 text-overflow

f(textOverflow, function (browsers) {
  return prefix(['text-overflow'], {
    feature: 'text-overflow',
    browsers: browsers
  });
}); // Viewport at-rule

f(cssDeviceadaptation, function (browsers) {
  return prefix(['@viewport'], {
    feature: 'css-deviceadaptation',
    browsers: browsers
  });
}); // Resolution Media Queries



f(cssMediaResolution, {
  match: /( x($| )|a #2)/
}, function (browsers) {
  return prefix(['@resolution'], {
    feature: 'css-media-resolution',
    browsers: browsers
  });
}); // CSS text-align-last

f(cssTextAlignLast, function (browsers) {
  return prefix(['text-align-last'], {
    feature: 'css-text-align-last',
    browsers: browsers
  });
}); // Crisp Edges Image Rendering Algorithm



f(cssCrispEdges, {
  match: /y x|a x #1/
}, function (browsers) {
  return prefix(['pixelated'], {
    props: ['image-rendering'],
    feature: 'css-crisp-edges',
    browsers: browsers
  });
});
f(cssCrispEdges, {
  match: /a x #2/
}, function (browsers) {
  return prefix(['image-rendering'], {
    feature: 'css-crisp-edges',
    browsers: browsers
  });
}); // Logical Properties



f(cssLogicalProps, function (browsers) {
  return prefix(['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end'], {
    feature: 'css-logical-props',
    browsers: browsers
  });
});
f(cssLogicalProps, {
  match: /x\s#2/
}, function (browsers) {
  return prefix(['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end'], {
    feature: 'css-logical-props',
    browsers: browsers
  });
}); // CSS appearance



f(cssAppearance, {
  match: /#2|x/
}, function (browsers) {
  return prefix(['appearance'], {
    feature: 'css-appearance',
    browsers: browsers
  });
}); // CSS Scroll snap points

f(cssSnappoints, function (browsers) {
  return prefix(['scroll-snap-type', 'scroll-snap-coordinate', 'scroll-snap-destination', 'scroll-snap-points-x', 'scroll-snap-points-y'], {
    feature: 'css-snappoints',
    browsers: browsers
  });
}); // CSS Regions

f(cssRegions, function (browsers) {
  return prefix(['flow-into', 'flow-from', 'region-fragment'], {
    feature: 'css-regions',
    browsers: browsers
  });
}); // CSS image-set

f(cssImageSet, function (browsers) {
  return prefix(['image-set'], {
    props: ['background', 'background-image', 'border-image', 'cursor', 'mask', 'mask-image', 'list-style', 'list-style-image', 'content'],
    feature: 'css-image-set',
    browsers: browsers
  });
}); // Writing Mode



f(cssWritingMode, {
  match: /a|x/
}, function (browsers) {
  return prefix(['writing-mode'], {
    feature: 'css-writing-mode',
    browsers: browsers
  });
}); // Cross-Fade Function

f(cssCrossFade, function (browsers) {
  return prefix(['cross-fade'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    feature: 'css-cross-fade',
    browsers: browsers
  });
}); // Read Only selector

f(cssReadOnlyWrite, function (browsers) {
  return prefix([':read-only', ':read-write'], {
    selector: true,
    feature: 'css-read-only-write',
    browsers: browsers
  });
}); // Text Emphasize

f(textEmphasis, function (browsers) {
  return prefix(['text-emphasis', 'text-emphasis-position', 'text-emphasis-style', 'text-emphasis-color'], {
    feature: 'text-emphasis',
    browsers: browsers
  });
}); // CSS Grid Layout



f(cssGrid, function (browsers) {
  prefix(['display-grid', 'inline-grid'], {
    props: ['display'],
    feature: 'css-grid',
    browsers: browsers
  });
  prefix(['grid-template-columns', 'grid-template-rows', 'grid-row-start', 'grid-column-start', 'grid-row-end', 'grid-column-end', 'grid-row', 'grid-column', 'grid-area', 'grid-template', 'grid-template-areas', 'place-self'], {
    feature: 'css-grid',
    browsers: browsers
  });
});
f(cssGrid, {
  match: /a x/
}, function (browsers) {
  return prefix(['grid-column-align', 'grid-row-align'], {
    feature: 'css-grid',
    browsers: browsers
  });
}); // CSS text-spacing

f(cssTextSpacing, function (browsers) {
  return prefix(['text-spacing'], {
    feature: 'css-text-spacing',
    browsers: browsers
  });
}); // :any-link selector

f(cssAnyLink, function (browsers) {
  return prefix([':any-link'], {
    selector: true,
    feature: 'css-any-link',
    browsers: browsers
  });
}); // unicode-bidi



f(cssUnicodeBidi, function (browsers) {
  return prefix(['isolate'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers: browsers
  });
});
f(cssUnicodeBidi, {
  match: /y x|a x #2/
}, function (browsers) {
  return prefix(['plaintext'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers: browsers
  });
});
f(cssUnicodeBidi, {
  match: /y x/
}, function (browsers) {
  return prefix(['isolate-override'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers: browsers
  });
}); // overscroll-behavior selector



f(cssOverscrollBehavior, {
  match: /a #1/
}, function (browsers) {
  return prefix(['overscroll-behavior'], {
    feature: 'css-overscroll-behavior',
    browsers: browsers
  });
}); // color-adjust

f(cssColorAdjust, function (browsers) {
  return prefix(['color-adjust'], {
    feature: 'css-color-adjust',
    browsers: browsers
  });
}); // text-orientation

f(cssTextOrientation, function (browsers) {
  return prefix(['text-orientation'], {
    feature: 'css-text-orientation',
    browsers: browsers
  });
});

function _createForOfIteratorHelperLoose$g(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$g(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray$g(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$g(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$g(o, minLen); }

function _arrayLikeToArray$g(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



function capitalize(str) {
  return str.slice(0, 1).toUpperCase() + str.slice(1);
}

var NAMES = {
  ie: 'IE',
  ie_mob: 'IE Mobile',
  ios_saf: 'iOS',
  op_mini: 'Opera Mini',
  op_mob: 'Opera Mobile',
  and_chr: 'Chrome for Android',
  and_ff: 'Firefox for Android',
  and_uc: 'UC for Android'
};

function prefix$1(name, prefixes, note) {
  var out = "  " + name;
  if (note) out += ' *';
  out += ': ';
  out += prefixes.map(function (i) {
    return i.replace(/^-(.*)-$/g, '$1');
  }).join(', ');
  out += '\n';
  return out;
}

var info = function (prefixes) {
  if (prefixes.browsers.selected.length === 0) {
    return 'No browsers selected';
  }

  var versions = {};

  for (var _iterator = _createForOfIteratorHelperLoose$g(prefixes.browsers.selected), _step; !(_step = _iterator()).done;) {
    var _browser = _step.value;

    var parts = _browser.split(' ');

    var _name2 = parts[0];
    var version = parts[1];
    _name2 = NAMES[_name2] || capitalize(_name2);

    if (versions[_name2]) {
      versions[_name2].push(version);
    } else {
      versions[_name2] = [version];
    }
  }

  var out = 'Browsers:\n';

  for (var browser in versions) {
    var list = versions[browser];
    list = list.sort(function (a, b) {
      return parseFloat(b) - parseFloat(a);
    });
    out += "  " + browser + ": " + list.join(', ') + "\n";
  }

  var coverage = browserslist_1.coverage(prefixes.browsers.selected);
  var round = Math.round(coverage * 100) / 100.0;
  out += "\nThese browsers account for " + round + "% of all users globally\n";
  var atrules = [];

  for (var name in prefixes.add) {
    var data = prefixes.add[name];

    if (name[0] === '@' && data.prefixes) {
      atrules.push(prefix$1(name, data.prefixes));
    }
  }

  if (atrules.length > 0) {
    out += "\nAt-Rules:\n" + atrules.sort().join('');
  }

  var selectors = [];

  for (var _iterator2 = _createForOfIteratorHelperLoose$g(prefixes.add.selectors), _step2; !(_step2 = _iterator2()).done;) {
    var selector = _step2.value;

    if (selector.prefixes) {
      selectors.push(prefix$1(selector.name, selector.prefixes));
    }
  }

  if (selectors.length > 0) {
    out += "\nSelectors:\n" + selectors.sort().join('');
  }

  var values = [];
  var props = [];
  var hadGrid = false;

  for (var _name in prefixes.add) {
    var _data = prefixes.add[_name];

    if (_name[0] !== '@' && _data.prefixes) {
      var grid = _name.indexOf('grid-') === 0;
      if (grid) hadGrid = true;
      props.push(prefix$1(_name, _data.prefixes, grid));
    }

    if (!Array.isArray(_data.values)) {
      continue;
    }

    for (var _iterator3 = _createForOfIteratorHelperLoose$g(_data.values), _step3; !(_step3 = _iterator3()).done;) {
      var value = _step3.value;

      var _grid = value.name.includes('grid');

      if (_grid) hadGrid = true;
      var string = prefix$1(value.name, value.prefixes, _grid);

      if (!values.includes(string)) {
        values.push(string);
      }
    }
  }

  if (props.length > 0) {
    out += "\nProperties:\n" + props.sort().join('');
  }

  if (values.length > 0) {
    out += "\nValues:\n" + values.sort().join('');
  }

  if (hadGrid) {
    out += '\n* - Prefixes will be added only on grid: true option.\n';
  }

  if (!atrules.length && !selectors.length && !props.length && !values.length) {
    out += '\nAwesome! Your browsers don\'t require any vendor prefixes.' + '\nNow you can remove Autoprefixer from build steps.';
  }

  return out;
};

var autoprefixer = createCommonjsModule(function (module) {







var agents = unpacker.agents;









var WARNING = '\n' + '  Replace Autoprefixer `browsers` option to Browserslist config.\n' + '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\n' + '\n' + '  Using `browsers` option can cause errors. Browserslist config \n' + '  can be used for Babel, Autoprefixer, postcss-normalize and other tools.\n' + '\n' + '  If you really need to use option, rename it to `overrideBrowserslist`.\n' + '\n' + '  Learn more at:\n' + '  https://github.com/browserslist/browserslist#readme\n' + '  https://twitter.com/browserslist\n' + '\n';

function isPlainObject(obj) {
  return Object.prototype.toString.apply(obj) === '[object Object]';
}

var cache = {};

function timeCapsule(result, prefixes) {
  if (prefixes.browsers.selected.length === 0) {
    return;
  }

  if (prefixes.add.selectors.length > 0) {
    return;
  }

  if (Object.keys(prefixes.add).length > 2) {
    return;
  }
  /* istanbul ignore next */


  result.warn('Greetings, time traveller. ' + 'We are in the golden age of prefix-less CSS, ' + 'where Autoprefixer is no longer needed for your stylesheet.');
}

module.exports = postcss_1.plugin('autoprefixer', function () {
  for (var _len = arguments.length, reqs = new Array(_len), _key = 0; _key < _len; _key++) {
    reqs[_key] = arguments[_key];
  }

  var options;

  if (reqs.length === 1 && isPlainObject(reqs[0])) {
    options = reqs[0];
    reqs = undefined;
  } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {
    reqs = undefined;
  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {
    options = reqs[1];
    reqs = reqs[0];
  } else if (typeof reqs[reqs.length - 1] === 'object') {
    options = reqs.pop();
  }

  if (!options) {
    options = {};
  }

  if (options.browser) {
    throw new Error('Change `browser` option to `overrideBrowserslist` in Autoprefixer');
  } else if (options.browserslist) {
    throw new Error('Change `browserslist` option to `overrideBrowserslist` in Autoprefixer');
  }

  if (options.overrideBrowserslist) {
    reqs = options.overrideBrowserslist;
  } else if (options.browsers) {
    if (typeof console !== 'undefined' && console.warn) {
      if (colorette.red) {
        console.warn(colorette.red(WARNING.replace(/`[^`]+`/g, function (i) {
          return colorette.yellow(i.slice(1, -1));
        })));
      } else {
        console.warn(WARNING);
      }
    }

    reqs = options.browsers;
  }

  var brwlstOpts = {
    ignoreUnknownVersions: options.ignoreUnknownVersions,
    stats: options.stats,
    env: options.env
  };

  function loadPrefixes(opts) {
    var d = module.exports.data;
    var browsers = new browsers$1(d.browsers, reqs, opts, brwlstOpts);
    var key = browsers.selected.join(', ') + JSON.stringify(options);

    if (!cache[key]) {
      cache[key] = new prefixes(d.prefixes, browsers, options);
    }

    return cache[key];
  }

  function plugin(css, result) {
    var prefixes = loadPrefixes({
      from: css.source && css.source.input.file,
      env: options.env
    });
    timeCapsule(result, prefixes);

    if (options.remove !== false) {
      prefixes.processor.remove(css, result);
    }

    if (options.add !== false) {
      prefixes.processor.add(css, result);
    }
  }

  plugin.options = options;
  plugin.browsers = reqs;

  plugin.info = function (opts) {
    opts = opts || {};
    opts.from = opts.from || process.cwd();
    return info(loadPrefixes(opts));
  };

  return plugin;
});
/**
 * Autoprefixer data
 */

module.exports.data = {
  browsers: agents,
  prefixes: prefixes$1
};
/**
 * Autoprefixer default browsers
 */

module.exports.defaults = browserslist_1.defaults;
/**
 * Inspect with default Autoprefixer
 */

module.exports.info = function () {
  return module.exports().info();
};
});
